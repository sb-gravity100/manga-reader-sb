{"version":3,"sources":["slices/MangaApi.ts","slices/DownloadSlice.ts","slices/HentaiApi.ts","store.ts","components/sub-components/Loading.tsx","components/sub-components/Navigation.tsx","components/props.ts","components/sub-components/DoujinCard.tsx","components/Reader.tsx","components/sub-components/Header.tsx","components/Main.tsx","img/temp2.png","components/sub-components/404.tsx","components/sub-components/MangaHeader.tsx","components/sub-components/MangaView.tsx","components/Manga.tsx","components/online/Header.tsx","components/online/Homepage.tsx","components/Online.tsx","timeAgo.ts","components/online/Doujin.tsx","components/online/Downloads.tsx","components/online/SearchPage.tsx","App.tsx","components/online/ToastArea.tsx","index.tsx"],"names":["ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","url","params","getManga","id","search","q","saveManga","removeManga","useAllMangasQuery","useGetMangaQuery","useSearchQuery","useLazySearchQuery","useLazySaveMangaQuery","useLazyAllMangasQuery","useLazyGetMangaQuery","usePrefetch","useLazyRemoveMangaQuery","useSaveMangaQuery","useRemoveMangaQuery","Slice","createSlice","initialState","results","toasts","name","reducers","add","state","action","res","length","Date","now","doujinID","payload","timeAdded","push","error","findIndex","e","isError","isSuccess","remove","splice","completed","saveHistory","hist","localStorage","getItem","concat","JSON","parse","setItem","stringify","pushToast","t","createdAt","actions","getDoujin","getHomepage","useGetHomepageQuery","useGetDoujinQuery","useLazyGetHomepageQuery","useLazyGetDoujinQuery","store","configureStore","reducer","HentaiSlice","DownloadSlice","middleware","getDefMid","useSelector","useReduxSelector","LoadingMangas","props","_","times","num","n","Card","className","style","width","Img","variant","height","src","Body","Placeholder","as","Title","animation","bg","xs","LoadingScreen","Spinner","role","PaginationComponent","page","next","refresh","blur","current","Pagination","Item","onClick","slice","First","URLSearchParams","disabled","Prev","pages","start","end","numPages","active","renderPages","Next","Last","getSearchParams","p","keys","forEach","v","k","Locales","JAPANESE","CHINESE","ENGLISH","DoujinCard","doujin","refetch","useToggle","isOver","setOver","thumbnail","match","tagName","tags","all","find","type","locale","toUpperCase","dispatch","useDispatch","refetchOnFocus","refetchOnReconnect","saved","removed","useEffect","header","message","titles","pretty","delay","dl","Image","alt","zIndex","filter","undefined","Button","availableOffline","toString","to","onMouseOver","onMouseOut","fontSize","transition","classNames","Reader","useSearchParams","mangas","get","PageComp","data","Number","Container","isFetching","doujins","map","SearchResult","item","path","basename","ListGroup","Header","useState","value","setSearch","Navbar","expand","Brand","Toggle","Collapse","Form","FormControl","placeholder","autoComplete","onChange","target","maxHeight","display","i","Main","NotFound","placeItems","alignContent","img","window","innerHeight","history","back","MangaHeader","isSlide","toggleSlide","showPanel","togglePanel","isBright","toggleBright","useCounter","zoomValue","zoom","useRafLoop","scrollY","document","body","scrollHeight","scrollBy","left","top","manga","behavior","stopLoop","startLoop","setBright","setZoom","maxWidth","overflowX","english","inc","alignmentBaseline","dec","MangaView","pageNumber","extension","Manga","useParams","scrollProgress","setProgress","brightValue","lastZoomPercent","setZoomPercent","useEvent","title","ProgressBar","position","isLoading","onTransitionEnd","scrollTo","console","log","Homepage","Sorts","toPairs","SortMethods","sort","Online","TimeAgo","addDefaultLocale","en","timeAgo","TagButton","children","isNone","setNone","href","rel","Badge","count","DoujinPage","useReduxDispatch","Row","Col","rounded","cover","splitted","split","showTitle","format","uploadDate","DownloadPage","SearchPage","searchRef","useRef","onSubmit","preventDefault","ref","focus","ToTopComponent","useLocation","nav","useNavigate","ButtonGroup","vertical","right","bottom","scroll","App","caseSensitive","element","Doujin","NoteToast","show","setShow","Toast","onClose","autohide","ToastArea","downloads","ToastContainer","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c8c64551.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport _ from 'lodash';\nimport { Doujin } from 'nhentai';\nimport { Manga, SearchResult } from '../../../src/types';\n\ninterface MangasQuery {\n   limit?: any;\n   page?: any;\n}\n\ninterface SearchQuery {\n   q: string;\n   by?: 'artist' | 'tag' | 'language' | 'category' | 'parody';\n}\n\nconst ApiSlice = createApi({\n   reducerPath: 'MangaApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api',\n   }),\n   endpoints: (builder) => ({\n      allMangas: builder.query<SearchResult, MangasQuery | void>({\n         query(opts) {\n            return {\n               url: '/mangas',\n               params: opts as any,\n            };\n         },\n      }),\n      getManga: builder.query<Manga, number | string>({\n         query(id) {\n            return {\n               url: `/doujin`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<Manga[], SearchQuery | string>({\n         query(q) {\n            return {\n               url: '/search',\n               params:\n                  typeof q === 'string'\n                     ? {\n                          q,\n                       }\n                     : q,\n            };\n         },\n      }),\n      saveManga: builder.query<Manga, string>({\n         query(id) {\n            return {\n               url: '/save',\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      removeManga: builder.query<number, string>({\n         query(id) {\n            return {\n               url: '/remove',\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useAllMangasQuery,\n   useGetMangaQuery,\n   useLazySearchQuery,\n   useSearchQuery,\n   useLazyAllMangasQuery,\n   useLazyGetMangaQuery,\n   usePrefetch,\n   useLazySaveMangaQuery,\n   useSaveMangaQuery,\n   useLazyRemoveMangaQuery,\n   useRemoveMangaQuery,\n} = ApiSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype Download = {\n   id: any;\n   doujinID: any;\n   isSuccess: boolean;\n   isError: boolean;\n   timeAdded: number;\n   timeCompleted: number;\n};\ntype Toast = {\n   id: any;\n   header: string;\n   message: string;\n   delay?: number;\n   createdAt: number;\n};\n\ntype DownloadState = {\n   results: Download[];\n   toasts: Toast[];\n};\n\nconst initialState = {\n   results: [],\n   toasts: [],\n} as DownloadState;\n\nconst Slice = createSlice({\n   initialState,\n   name: 'Downloads',\n   reducers: {\n      add(state, action: PayloadAction<number>) {\n         var res = {\n            id: `${state.results.length}_${Date.now()}`,\n            doujinID: action.payload,\n            timeAdded: Date.now(),\n         } as Download;\n         state.results.push(res);\n      },\n      error(state, action: PayloadAction<number>) {\n         var res = state.results.findIndex((e) => e.id === action.payload);\n         if (res > -1) {\n            state.results[res].isError = true;\n            state.results[res].isSuccess = false;\n         }\n      },\n      remove(state, action: PayloadAction<number>) {\n         var res = state.results.findIndex((e) => e.id === action.payload);\n         if (res > -1) {\n            state.results.splice(res, 1);\n         }\n      },\n      completed(state, action: PayloadAction<number>) {\n         var res = state.results.findIndex((e) => e.id === action.payload);\n         if (res > -1) {\n            state.results[res].isError = true;\n            state.results[res].isSuccess = false;\n         }\n      },\n      saveHistory(state) {\n         var hist = localStorage.getItem('doujin-download-history');\n         if (hist) {\n            state.results = state.results.concat(JSON.parse(hist));\n         }\n         localStorage.setItem(\n            'doujin-download-history',\n            JSON.stringify(state.results)\n         );\n      },\n      pushToast(state, action: PayloadAction<Omit<Toast, 'id' | 'createdAt'>>) {\n         var t = {\n            id: `${state.toasts.length}_${Date.now()}`,\n            createdAt: Date.now(),\n            ...action.payload,\n         } as Toast;\n         state.toasts.push(t);\n      },\n   },\n});\n\nexport default Slice;\nexport const { saveHistory, add, completed, error, pushToast, remove } =\n   Slice.actions;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport _ from 'lodash';\nimport { Doujin } from 'nhentai';\nimport { Manga, SearchResult, SortMethods } from '../../../src/types';\n\ninterface SearchQuery {\n   q: string;\n   page?: any;\n   sort?: SortMethods;\n}\n\ninterface HomepageQuery extends Omit<SearchQuery, 'q'> {}\n\nconst ApiSlice = createApi({\n   reducerPath: 'HentaiApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api/onlineapi',\n   }),\n   endpoints: (builder) => ({\n      getDoujin: builder.query<Manga, number | string>({\n         query(id) {\n            return {\n               url: `/doujin`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<SearchResult, SearchQuery | string>({\n         query(q) {\n            return {\n               url: '/search',\n               params:\n                  typeof q === 'string'\n                     ? {\n                          q,\n                       }\n                     : q,\n            };\n         },\n      }),\n      getHomepage: builder.query<SearchResult, HomepageQuery | void>({\n         query(q) {\n            return {\n               url: '/homepage',\n               params: q as any,\n            };\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useGetHomepageQuery,\n   useGetDoujinQuery,\n   useLazyGetHomepageQuery,\n   useLazyGetDoujinQuery,\n   useLazySearchQuery,\n   usePrefetch,\n   useSearchQuery,\n} = ApiSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n   useDispatch as useReduxDispatch,\n   useSelector as useReduxSelector,\n   TypedUseSelectorHook,\n} from 'react-redux';\nimport ApiSlice from './slices/MangaApi';\nimport DownloadSlice from './slices/DownloadSlice';\nimport HentaiSlice from './slices/HentaiApi';\n\nconst store = configureStore({\n   reducer: {\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\n      [HentaiSlice.reducerPath]: HentaiSlice.reducer,\n      downloads: DownloadSlice.reducer,\n   },\n   middleware: (getDefMid) =>\n      getDefMid().concat(ApiSlice.middleware, HentaiSlice.middleware) as any,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\nexport default store;\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Card, Placeholder, Spinner } from 'react-bootstrap';\n\nexport const LoadingMangas: FC<any> = (props) => (\n   <>\n      {_.times(props.num || 10, (n) => (\n         <Card key={n} className=\"bg-secondary\" style={{ width: '12rem' }}>\n            <Card.Img variant=\"top\" height=\"190\" src=\"/loading.gif\" />\n            <Card.Body className=\"py-1 px-2\">\n               <Placeholder as={Card.Title} animation=\"wave\">\n                  <Placeholder className=\"mx-auto\" bg=\"info\" xs={12} />\n               </Placeholder>\n            </Card.Body>\n         </Card>\n      ))}\n   </>\n);\n\nexport const LoadingScreen: FC = () => (\n   <div\n      style={\n         { height: '100vh', '--bs-bg-opacity': '.5', width: '100vh' } as any\n      }\n      className=\"d-flex position-fixed top-0 start-0 w-100 align-items-center justify-content-center\"\n   >\n      <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n         <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n   </div>\n);\n","import _ from 'lodash';\nimport { SearchResult } from 'nhentai';\nimport { FC } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { MdRefresh, MdBlurOn, MdBlurOff } from 'react-icons/md';\n\ninterface PPage {\n   page?: any;\n   next: any;\n   current: any;\n   refresh?: any;\n   blur?: any[];\n}\n\nconst PaginationComponent: FC<PPage> = ({\n   page,\n   next,\n   refresh,\n   blur,\n   current,\n}) => {\n   var renderPages = () => {\n      var pages: JSX.Element[] = [];\n      var start = current;\n      var end = current + 5;\n      start -= 4;\n      if (end > page?.numPages) {\n         end = page?.numPages;\n         start -= 5 - (page?.numPages - current);\n      }\n      if (start < 0) {\n         start = 0;\n         end += 5 - current - 1;\n      }\n      for (let n = start; n < end; n++) {\n         pages.push(\n            <Pagination.Item\n               onClick={() =>\n                  next(\n                     new URLSearchParams({\n                        page: (n + 1) as any,\n                     })\n                  )\n               }\n               key={n + 1}\n               active={current === n + 1}\n            >\n               {n + 1}\n            </Pagination.Item>\n         );\n      }\n      return pages;\n   };\n   return (\n      <Pagination className=\"justify-content-center m-0\">\n         <Pagination.Item onClick={refresh} className=\"me-3\">\n            <MdRefresh />\n         </Pagination.Item>\n         {blur && (\n            <Pagination.Item\n               onClick={() => {\n                  if (blur) {\n                     blur[1]();\n                  }\n               }}\n               className=\"me-3\"\n            >\n               {blur.slice()[0] ? <MdBlurOn /> : <MdBlurOff />}\n            </Pagination.Item>\n         )}\n         <Pagination.First\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: '1',\n                  })\n               )\n            }\n            disabled={1 === current}\n         />\n         <Pagination.Prev\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: (current - 1) as any,\n                  })\n               )\n            }\n            disabled={1 === current}\n         />\n         {page && renderPages()}\n         <Pagination.Next\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: (current + 1) as any,\n                  })\n               )\n            }\n            disabled={page?.numPages === current}\n         />\n         <Pagination.Last\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.numPages as any,\n                  })\n               )\n            }\n            disabled={page?.numPages === current}\n         />\n      </Pagination>\n   );\n};\n\nexport default PaginationComponent;\n","import { Manga, MangaData } from '../../../src/types';\n\nexport interface MangaHeaderProps {\n   manga?: Manga;\n   zoomValue?: number;\n   brightVal?: number;\n}\n\nexport interface ReaderItemProps {\n   item: Manga;\n}\n\nexport interface MangaViewProps {\n   img: MangaData;\n   src: string;\n}\n\nexport interface ReaderProps {\n   total?: number;\n   data?: Manga[];\n   loading: boolean;\n   refetch(...args: any[]): void;\n}\n\nexport interface ErrorProps {\n   hasErrors: boolean;\n   errors?: any;\n   retry: () => void;\n   isFetching: boolean;\n}\n\nexport interface NavProps {\n   refetch: ReaderProps['refetch'];\n}\n\nexport interface SearchBarProps {}\n\nexport function getSearchParams(p: URLSearchParams) {\n   var keys = {} as any;\n   p.forEach((v, k) => {\n      keys[k] = v;\n   });\n   return keys;\n}\n\nexport const Locales = {\n   JAPANESE: '/japan_logo.svg',\n   CHINESE: '/china_logo.svg',\n   ENGLISH: '/us_logo.svg',\n};\n\nexport function getLocale(name: string) {\n   return (Locales as any)[name.toUpperCase()];\n}\n","import classNames from 'classnames';\nimport { useEffect } from 'react';\nimport { Card, Image, Button } from 'react-bootstrap';\nimport { AnyIfEmpty, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { Manga } from '../../../../src/types';\nimport { pushToast } from '../../slices/DownloadSlice';\nimport * as dl from '../../slices/DownloadSlice';\nimport { useGetDoujinQuery } from '../../slices/HentaiApi';\nimport {\n   useLazySaveMangaQuery,\n   useLazyRemoveMangaQuery,\n} from '../../slices/MangaApi';\nimport { getLocale } from '../props';\n\ntype DoujinProps = {\n   doujin: Manga;\n   blur: any;\n   refetch: any;\n};\n\nconst DoujinCard: React.FC<DoujinProps> = ({ doujin: n, blur, refetch }) => {\n   var [isOver, setOver] = useToggle(false);\n   var thumbnail = n.thumbnail?.url;\n   if (thumbnail?.match(/https?/i))\n      thumbnail = `/api/fetch?url=${n.thumbnail?.url}`;\n   var tagName = n.tags?.all?.find(\n      (e) => e.type.match(/language/i) && !e.name.match(/translated/i)\n   )?.name as string;\n   var locale = getLocale(tagName);\n\n   var handleMouseEnter = () => {\n      setOver(true);\n   };\n   var handleMouseLeave = () => {\n      setOver(false);\n   };\n   const dispatch = useDispatch();\n   const [saveManga, saved] = useLazySaveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const [removeManga, removed] = useLazyRemoveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   useEffect(() => {\n      if (saved.isSuccess) {\n         dispatch(\n            pushToast({\n               header: 'Doujin Corner',\n               message: `Successfully added ${n.titles.pretty}!`,\n               delay: 3000,\n            })\n         );\n         dispatch(dl.completed(n.id));\n         // refetch();\n      }\n      if (saved.isError) {\n         dispatch(dl.error(n.id));\n      }\n      if (removed.isSuccess) {\n         dispatch(\n            pushToast({\n               header: 'Doujin Corner',\n               message: `Successfully removed ${n.titles.pretty}!`,\n               delay: 3000,\n            })\n         );\n         dispatch(dl.remove(n.id));\n         // refetch();\n      }\n   }, [removed, saved, dispatch, n]);\n   return (\n      <Card\n         className=\"bg-secondary position-relative\"\n         style={{ width: '12rem' }}\n      >\n         <Image\n            height={20}\n            width={30}\n            src={locale}\n            alt={tagName}\n            className=\"position-absolute top-0 start-0\"\n            style={{\n               zIndex: 9999,\n            }}\n         />\n         <Card.Img\n            variant=\"top\"\n            height=\"300\"\n            src={thumbnail}\n            style={{\n               filter: blur[0] ? 'blur(2px)' : undefined,\n            }}\n         />\n         <div\n            style={{ zIndex: 9999 }}\n            className=\"position-absolute top-0 end-0\"\n         >\n            <Button\n               onClick={() => {\n                  if (n?.availableOffline) {\n                     removeManga(n.id.toString(), false);\n                     dispatch(\n                        pushToast({\n                           header: 'Doujin Corner',\n                           message: `Removing ${n?.titles.pretty}`,\n                           delay: 3000,\n                        })\n                     );\n                  } else {\n                     saveManga(n.id.toString(), false);\n                     dispatch(\n                        pushToast({\n                           header: 'Doujin Corner',\n                           message: `Downloading ${n?.titles.pretty}`,\n                           delay: 3000,\n                        })\n                     );\n                     dispatch(dl.add(n.id));\n                  }\n               }}\n               className=\"me-2 p-1\"\n               variant=\"primary\"\n            >\n               <small>{n?.availableOffline ? 'Delete' : 'Download'}</small>\n            </Button>\n            <Link className=\"btn btn-danger p-1\" to={`/manga/${n.id}`}>\n               <small>Read</small>\n            </Link>\n         </div>\n         <Link\n            onMouseOver={handleMouseEnter}\n            onMouseOut={handleMouseLeave}\n            className=\"stretched-link\"\n            to={'/online/' + n.id}\n         >\n            <Card.Body className=\"pb-0 pt-1 position-absolute start-0 w-100 bg-dark bg-opacity-50 bottom-0\">\n               <Card.Title\n                  style={{ fontSize: '16px', transition: '0.2s' }}\n                  className={classNames(\n                     'text-center text-white text-decoration-underline',\n                     !isOver && 'text-truncate'\n                  )}\n               >\n                  {n.titles.pretty}\n               </Card.Title>\n            </Card.Body>\n         </Link>\n      </Card>\n   );\n};\n\nexport default DoujinCard;\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSearchParams } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { useAllMangasQuery } from '../slices/MangaApi';\nimport { LoadingMangas } from './sub-components/Loading';\nimport PaginationComponent from './sub-components/Navigation';\nimport DoujinCard from './sub-components/DoujinCard';\n\nconst Reader: FC = () => {\n   const blur = useToggle(true);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n      })\n   );\n   const mangas = useAllMangasQuery({\n      page: params.get('page') || 1,\n   });\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            mangas.refetch();\n         }}\n         next={next}\n         page={mangas?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n   return (\n      <Container className=\"d-flex flex-column gap-2 py-2\">\n         <PageComp />\n         <div className=\"d-flex flex-wrap gap-2 justify-content-center\">\n            {mangas.isSuccess && !mangas.isFetching ? (\n               mangas.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={mangas.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : (\n               <LoadingMangas />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default Reader;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport {\n   Button,\n   Container,\n   Form,\n   FormControl,\n   InputGroup,\n   Navbar,\n   ListGroup,\n   Card,\n   Image,\n   Spinner,\n   Nav,\n} from 'react-bootstrap';\nimport path from 'path';\nimport { Link } from 'react-router-dom';\nimport { Manga } from '../../../../src/types';\nimport { useSearchQuery } from '../../slices/MangaApi';\n\ninterface PSearch {\n   item: Manga;\n}\n\nconst SearchResult: React.FC<PSearch> = (props) => {\n   var thumbnail = `/gallery/${props.item.id}/${path.basename(\n      props.item.thumbnail.url\n   )}`;\n   return (\n      <ListGroup.Item\n         style={{ height: '90px' }}\n         className=\"d-flex bg-secondary position-relative\"\n      >\n         <Image\n            className=\"flex-shrink-0 me-2 rounded\"\n            src={thumbnail}\n            width=\"60\"\n         />\n         <Link\n            className=\"d-inline-block text-truncate stretched-link\"\n            to={`/manga/${props.item.id}`}\n         >\n            {props.item.titles.pretty}\n         </Link>\n      </ListGroup.Item>\n   );\n};\n\nconst Header: React.FC = () => {\n   const [value, setSearch] = useState('');\n   const search = useSearchQuery(value);\n   // console.log(search);\n\n   return (\n      <Navbar expand=\"lg\">\n         <Container>\n            <Link to=\"/\">\n               <Navbar.Brand>\n                  <img\n                     alt=\"\"\n                     src=\"/favicon.png\"\n                     height=\"60\"\n                     className=\"d-inline-block align-top\"\n                  />\n               </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle className=\"bg-light\" aria-controls=\"nav\" />\n            <Navbar.Collapse id=\"nav\" className=\"justify-content-md-end py-2\">\n               <Link className=\"nav-link\" to=\"/online\">\n                  Online Mode\n               </Link>\n               <Form className=\"position-relative\">\n                  <FormControl\n                     type=\"search\"\n                     placeholder=\"Search\"\n                     className=\"me-2\"\n                     aria-label=\"Search\"\n                     autoComplete=\"none\"\n                     value={value}\n                     onChange={(e) => setSearch(e.target.value)}\n                  />\n                  <Card\n                     className=\"position-absolute top-100 end-0 rounded mt-2\"\n                     style={{\n                        width: '450px',\n                        maxHeight: '400px',\n                        zIndex: 9999,\n                        display: !value ? 'none' : undefined,\n                     }}\n                  >\n                     <ListGroup className=\"overflow-auto\" variant=\"flush\">\n                        {search.isFetching && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              <Spinner animation=\"border\" role=\"status\">\n                                 <span className=\"visually-hidden\">\n                                    Loading...\n                                 </span>\n                              </Spinner>\n                           </ListGroup.Item>\n                        )}\n                        {!search.isFetching && search?.data?.length === 0 && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              Nothing Found :(\n                           </ListGroup.Item>\n                        )}\n                        {search.isSuccess &&\n                           search.data?.map((e, i) => (\n                              <SearchResult key={e.id} item={e} />\n                           ))}\n                     </ListGroup>\n                  </Card>\n               </Form>\n            </Navbar.Collapse>\n         </Container>\n      </Navbar>\n   );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport Reader from './Reader';\r\nimport Header from './sub-components/Header';\r\n\r\nconst Main: React.FC = () => {\r\n   return (\r\n      <div style={{ height: '100vh' }}>\r\n         <Header />\r\n         <Reader />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/temp2.5c1b4c28.png\";","import { Button } from 'react-bootstrap';\nimport img from '../../img/temp2.png';\n\nconst NotFound = () => (\n   <div\n      className=\"position-fixed top-0 start-0 container-fluid\"\n      style={{\n         height: '100vh',\n         display: 'grid',\n         placeItems: 'center',\n         alignContent: 'center',\n      }}\n   >\n      <h1 className=\"text-danger\">404 Not Found</h1>\n      <img src={img} alt=\"kono dio da\" height={window.innerHeight / 2} />\n      <Button\n         variant=\"info\"\n         className=\"mt-2\"\n         onClick={() => window.history.back()}\n      >\n         Go Home Now\n      </Button>\n   </div>\n);\n\nexport default NotFound;\n","/* eslint-disable no-restricted-globals */\nimport { FC, useEffect } from 'react';\nimport {\n   MdZoomIn,\n   MdZoomOut,\n   MdBrightnessHigh,\n   MdBrightnessLow,\n   MdStop,\n   MdPlayCircleFilled,\n   MdArrowLeft,\n   MdArrowRight,\n} from 'react-icons/md';\nimport { useToggle, useRafLoop, useCounter, useEvent } from 'react-use';\nimport { Button, Card } from 'react-bootstrap';\n\nconst MangaHeader: FC<any> = (props) => {\n   var [isSlide, toggleSlide] = useToggle(false);\n   var [showPanel, togglePanel] = useToggle(true);\n   var [isBright, toggleBright] = useToggle(true);\n   var [zoomValue, zoom] = useCounter(600, 900, 300);\n   var [stopLoop, startLoop] = useRafLoop(() => {\n      if (window.scrollY < document.body.scrollHeight) {\n         window.scrollBy({\n            left: 0,\n            top:\n               (document.body.scrollHeight / props.manga?.pages.length) * 0.004,\n            behavior: 'smooth',\n         });\n      } else {\n         toggleSlide(false);\n      }\n   }, isSlide);\n\n   useEffect(() => {\n      if (isSlide) {\n         startLoop();\n      } else {\n         // setFrames.reset();\n         stopLoop();\n      }\n      return () => stopLoop();\n   }, [isSlide, startLoop, stopLoop]);\n   useEffect(() => {\n      if (isBright) {\n         props.setBright('brightness(1)');\n      } else {\n         props.setBright('brightness(0.65)');\n      }\n   }, [isBright, props]);\n   useEffect(() => {\n      props.setZoom(`${zoomValue || 600}px`);\n   }, [zoomValue, props]);\n   return (\n      <div\n         style={{ zIndex: 9999, height: '6rem' }}\n         className=\"d-flex gap-2 position-fixed me-3 end-0 top-0 mt-3 \"\n      >\n         <Card\n            style={{\n               maxWidth: showPanel ? '0' : '21rem',\n               overflowX: 'hidden',\n               transition: '0.2s',\n            }}\n            className=\"bg-secondary text-center\"\n         >\n            <Card.Header className=\"text-info text-truncate\">\n               {props.manga?.titles.english || '...'}\n            </Card.Header>\n            <Card.Body className=\"p-2 d-flex flex-wrap gap-2\">\n               <Button\n                  onClick={() => {\n                     zoom.inc(50);\n                  }}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  <MdZoomIn alignmentBaseline=\"central\" />\n               </Button>\n               <Button\n                  onClick={() => {\n                     zoom.dec(50);\n                  }}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  <MdZoomOut alignmentBaseline=\"central\" />\n               </Button>\n               <Button\n                  onClick={() => toggleBright()}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  {isBright ? (\n                     <MdBrightnessHigh alignmentBaseline=\"central\" />\n                  ) : (\n                     <MdBrightnessLow alignmentBaseline=\"central\" />\n                  )}\n               </Button>\n               <Button\n                  onClick={() => toggleSlide()}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  {isSlide === false ? (\n                     <MdPlayCircleFilled alignmentBaseline=\"central\" />\n                  ) : (\n                     <MdStop alignmentBaseline=\"central\" />\n                  )}\n               </Button>\n            </Card.Body>\n         </Card>\n         <Button onClick={togglePanel} className=\"p-0\">\n            {showPanel ? (\n               <MdArrowRight fontSize=\"2rem\" />\n            ) : (\n               <MdArrowLeft fontSize=\"2rem\" />\n            )}\n         </Button>\n      </div>\n   );\n};\n\nexport default MangaHeader;\n","import { Image } from 'react-bootstrap';\nimport { MangaViewProps } from '../props';\n\nconst MangaView: React.FC<MangaViewProps> = (props) => {\n   return (\n      <div>\n         <Image\n            src={props.src}\n            alt={props.img.pageNumber + '.' + props.img.extension}\n            style={{ width: '100%' }}\n            className=\"rounded\"\n         />\n      </div>\n   );\n};\n\nexport default MangaView;\n","import { useEffect, useState } from 'react';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\n// import classNames from 'classnames';\r\nimport NotFound from './sub-components/404';\r\nimport { LoadingScreen } from './sub-components/Loading';\r\nimport { useParams } from 'react-router';\r\nimport { Image, ProgressBar } from 'react-bootstrap';\r\nimport MangaHeader from './sub-components/MangaHeader';\r\nimport MangaView from './sub-components/MangaView';\r\nimport { useEvent } from 'react-use';\r\n\r\nconst Manga = () => {\r\n   var { id } = useParams();\r\n   var manga = useGetMangaQuery(id as string);\r\n   var [scrollProgress, setProgress] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n   var [zoomValue, setZoom] = useState('');\r\n   var [brightValue, setBright] = useState('');\r\n   var [lastZoomPercent, setZoomPercent] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n\r\n   useEvent('scroll', () => {\r\n      setProgress(\r\n         (window.scrollY / (document.body.scrollHeight - window.innerHeight)) *\r\n            100\r\n      );\r\n   });\r\n\r\n   useEffect(() => {\r\n      // console.log('zoom change');\r\n      setZoomPercent(\r\n         window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n      );\r\n   }, [zoomValue]);\r\n\r\n   if (manga.isFetching) {\r\n      document.title = 'Loading...';\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (manga.isSuccess) {\r\n         document.title = manga.data.titles.english;\r\n      }\r\n   }, [manga.data?.titles, manga.isSuccess]);\r\n\r\n   if (typeof id === 'undefined' || manga.isError) {\r\n      return <NotFound />;\r\n   }\r\n   return (\r\n      <>\r\n         {manga.isSuccess && (\r\n            <ProgressBar\r\n               style={{\r\n                  height: '5px',\r\n                  width: '100vh !important',\r\n                  zIndex: 9999,\r\n                  position: 'fixed',\r\n                  top: 0,\r\n                  left: 0,\r\n                  transition: '0.1s',\r\n               }}\r\n               className=\"rounded-0 w-100\"\r\n               now={scrollProgress}\r\n            />\r\n         )}\r\n         <div className=\"container-fluid\" style={{ height: '100vh' }}>\r\n            {manga.isLoading && <LoadingScreen />}\r\n            <MangaHeader\r\n               setZoom={setZoom}\r\n               setBright={setBright}\r\n               manga={manga.data}\r\n            />\r\n            <div\r\n               style={{\r\n                  maxWidth: zoomValue,\r\n                  filter: brightValue,\r\n                  transition: 'width 0.05s',\r\n               }}\r\n               onTransitionEnd={() => {\r\n                  window.scrollTo(\r\n                     0,\r\n                     (document.body.scrollHeight - window.innerHeight) *\r\n                        lastZoomPercent\r\n                  );\r\n                  console.log(\r\n                     window.scrollY /\r\n                        (document.body.scrollHeight - window.innerHeight)\r\n                  );\r\n                  // console.log('end');\r\n               }}\r\n               className=\"mx-auto d-flex flex-column align-items-stretch gap-2 mt-2\"\r\n            >\r\n               {manga.isSuccess &&\r\n                  manga.data.pages?.map((e) => {\r\n                     var src = `/api/fetch?url=${e.url}`;\r\n                     if (manga.data?.availableOffline) {\r\n                        src = `/gallery/${manga?.data?.id}/${e.pageNumber}.${e.extension}`;\r\n                        console.log('offline manga');\r\n                     }\r\n                     return <MangaView key={e.pageNumber} img={e} src={src} />;\r\n                  })}\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import { useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSearchQuery } from '../../slices/MangaApi';\n\nconst Header: React.FC = () => {\n   const [value, setSearch] = useState('');\n   const search = useSearchQuery(value);\n   // console.log(search);\n\n   return (\n      <Navbar expand=\"lg\">\n         <Container>\n            <Link to=\"/\">\n               <Navbar.Brand>\n                  <img\n                     alt=\"\"\n                     src=\"/favicon.png\"\n                     height=\"60\"\n                     className=\"d-inline-block align-top\"\n                  />\n               </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle className=\"bg-light\" aria-controls=\"nav\" />\n            <Navbar.Collapse id=\"nav\" className=\"justify-content-md-end py-2\">\n               <Link className=\"nav-link\" to=\"/\">\n                  Go Offline\n               </Link>\n               <Link className=\"nav-link\" to=\"/online/search\">\n                  Search\n               </Link>\n            </Navbar.Collapse>\n         </Container>\n      </Navbar>\n   );\n};\n\nexport default Header;\n","import { Doujin } from 'nhentai';\nimport {\n   Button,\n   Card,\n   Container,\n   OverlayTrigger,\n   Tooltip,\n} from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useGetHomepageQuery } from '../../slices/HentaiApi';\nimport { LoadingMangas } from '../sub-components/Loading';\nimport PaginationComponent from '../sub-components/Navigation';\nimport { SortMethods } from 'nhentai/lib/constants';\nimport _ from 'lodash';\nimport { getSearchParams } from '../props';\nimport { useToggle } from 'react-use';\nimport DoujinCard from '../sub-components/DoujinCard';\n\nconst Homepage: React.FC = (props) => {\n   const blur = useToggle(true);\n   const Sorts = _.toPairs(SortMethods);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n         sort: '',\n      })\n   );\n   const doujins = useGetHomepageQuery(getSearchParams(params));\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            doujins.refetch();\n         }}\n         next={(e: any) =>\n            next(\n               new URLSearchParams({\n                  ...getSearchParams(params),\n                  ...getSearchParams(e),\n               })\n            )\n         }\n         page={doujins?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n\n   return (\n      <Container className=\"d-flex flex-column gap-3 py-2\">\n         <PageComp />\n         <div className=\"d-flex justify-content-center gap-2\">\n            {Sorts.map((e) => (\n               <Button\n                  variant={\n                     params.get('sort') === e[1] ? 'primary' : 'outline-primary'\n                  }\n                  key={e[0]}\n                  onClick={() =>\n                     next(\n                        new URLSearchParams({\n                           ...getSearchParams(params),\n                           sort: e[1],\n                        })\n                     )\n                  }\n               >\n                  {e[0]}\n               </Button>\n            ))}\n         </div>\n         <div className=\"d-flex flex-wrap gap-4 justify-content-center\">\n            {doujins.isSuccess && !doujins.isFetching ? (\n               doujins.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={doujins.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : doujins.isError ? (\n               <>\n                  <div className=\"h-100 d-flex align-items-center justify-content-center flex-column mx-auto my-5\">\n                     <h1>something went wrong...</h1>\n                     <Button\n                        className=\"w-100\"\n                        onClick={() => {\n                           doujins.refetch();\n                        }}\n                     >\n                        Retry?\n                     </Button>\n                  </div>\n               </>\n            ) : (\n               <LoadingMangas num={10} />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default Homepage;\n","import Header from './online/Header';\nimport Homepage from './online/Homepage';\n\nconst Online: React.FC = (props) => {\n   return (\n      <div\n         style={{\n            height: '100vh',\n         }}\n      >\n         <Header />\n         <Homepage />\n      </div>\n   );\n};\n\nexport default Online;\n","import TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en.json';\n\nTimeAgo.addDefaultLocale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nexport default timeAgo\n","import { useEffect } from 'react';\nimport { Badge, Button, Col, Container, Image, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { Manga } from '../../../../src/types';\nimport { pushToast } from '../../slices/DownloadSlice';\nimport * as dl from '../../slices/DownloadSlice';\nimport { useGetDoujinQuery } from '../../slices/HentaiApi';\nimport {\n   useLazyRemoveMangaQuery,\n   useLazySaveMangaQuery,\n} from '../../slices/MangaApi';\nimport { useDispatch } from '../../store';\nimport timeAgo from '../../timeAgo';\n\nconst TagButton: React.FC<{ type: string; doujin?: Manga }> = ({\n   doujin,\n   type,\n   children,\n}) => {\n   var [isNone, setNone] = useToggle(false);\n\n   useEffect(() => {\n      if (doujin?.tags.all.filter((e) => e.type === type).length < 1) {\n         setNone(true);\n      }\n   }, [doujin?.tags.all, setNone, type]);\n   if (isNone) {\n      return <></>;\n   }\n   return (\n      <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n         <span className=\"d-inline-flex gap-2 flex-wrap align-items-center\">\n            <span className=\"fw-bold\">{children}</span>\n            {doujin?.tags.all\n               .filter((e) => e.type === type)\n               .map((e) => {\n                  console.log(e.url);\n                  return (\n                     <a\n                        key={e.id}\n                        className=\"btn btn-outline-secondary py-1 px-2\"\n                        href={e.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                     >\n                        <span className=\"fst-italic me-2\">{e.name}</span>\n                        <Badge bg=\"secondary\">{e.count}</Badge>\n                     </a>\n                  );\n               })}\n         </span>\n      </div>\n   );\n};\n\nconst DoujinPage: React.FC = (props) => {\n   const { id } = useParams();\n   const doujin = useGetDoujinQuery(id as string);\n   const dispatch = useDispatch();\n   const [saveManga, saved] = useLazySaveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const [removeManga, removed] = useLazyRemoveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const showTitle = () => {\n      var splitted = doujin.data?.titles.english.split(\n         doujin.data?.titles.pretty\n      ) as string[];\n      return (\n         <>\n            <span className=\"fst-italic\">{splitted[0]}</span>\n            <span className=\"fw-bold\">{doujin.data?.titles.pretty}</span>{' '}\n            <span className=\"fst-italic\">{splitted[1]}</span>\n         </>\n      );\n   };\n\n   useEffect(() => {\n      if (doujin.isSuccess) {\n         document.title = doujin.data.titles.pretty;\n      }\n   }, [doujin]);\n\n   useEffect(() => {\n      if (doujin.isSuccess) {\n         if (saved.isSuccess) {\n            dispatch(\n               pushToast({\n                  header: 'Doujin Corner',\n                  message: `Successfully added ${doujin.data?.titles.pretty}!`,\n                  delay: 3000,\n               })\n            );\n            doujin.refetch();\n            dispatch(dl.completed(doujin.data?.id));\n         }\n         if (saved.isError) {\n            dispatch(dl.error(doujin.data?.id));\n         }\n         if (removed.isSuccess) {\n            dispatch(\n               pushToast({\n                  header: 'Doujin Corner',\n                  message: `Successfully removed ${doujin.data?.titles.pretty}!`,\n                  delay: 3000,\n               })\n            );\n            dispatch(dl.remove(doujin.data?.id));\n            doujin.refetch();\n         }\n      }\n   }, [removed, saved, dispatch, doujin]);\n   return (\n      <Container className=\"w-75 py-4 bg-secondary bg-opacity-50 shadow rounded-2 my-3\">\n         {doujin.isSuccess && (\n            <Row className=\"text-light\">\n               <Col xs={5}>\n                  <div className=\"position-relative\">\n                     <Link to={`/manga/${doujin.data.id}`}>\n                        <Image\n                           rounded\n                           style={{ width: '100%', filter: 'blur(3px)' }}\n                           src={`/api/fetch?url=${doujin.data?.cover.url}`}\n                        />\n                     </Link>\n                     <div className=\"position-absolute top-0 start-0\">\n                        <Button\n                           onClick={() => {\n                              if (doujin.data?.availableOffline) {\n                                 removeManga(doujin.data.id.toString(), false);\n                                 dispatch(\n                                    pushToast({\n                                       header: 'Doujin Corner',\n                                       message: `Removing ${doujin.data?.titles.pretty}`,\n                                       delay: 3000,\n                                    })\n                                 );\n                              } else {\n                                 saveManga(doujin.data.id.toString(), false);\n                                 dispatch(\n                                    pushToast({\n                                       header: 'Doujin Corner',\n                                       message: `Downloading ${doujin.data?.titles.pretty}`,\n                                       delay: 3000,\n                                    })\n                                 );\n                                 dispatch(dl.add(doujin.data.id));\n                              }\n                           }}\n                           className=\"me-2\"\n                           variant=\"primary\"\n                        >\n                           {doujin.data?.availableOffline\n                              ? 'Delete'\n                              : 'Download'}\n                        </Button>\n                        <Link\n                           className=\"btn btn-danger\"\n                           to={`/manga/${doujin.data.id}`}\n                        >\n                           Read\n                        </Link>\n                     </div>\n                  </div>\n               </Col>\n               <Col className=\"py-2 d-flex flex-wrap align-items-start align-content-start gap-3\">\n                  <div className=\"lead bg-gradient bg-light bg-opacity-50 text-black rounded p-2 shadow flex-fill\">\n                     {showTitle()}\n                  </div>\n                  <TagButton type=\"tag\" doujin={doujin.data}>\n                     Tags:\n                  </TagButton>\n                  <TagButton type=\"artist\" doujin={doujin.data}>\n                     Artists:\n                  </TagButton>\n                  <TagButton type=\"group\" doujin={doujin.data}>\n                     Groups:\n                  </TagButton>\n                  <TagButton type=\"language\" doujin={doujin.data}>\n                     Languages:\n                  </TagButton>\n                  <TagButton type=\"category\" doujin={doujin.data}>\n                     Categories:\n                  </TagButton>\n                  <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n                     <span className=\"fw-bold me-1 align-middle\">Pages:</span>\n                     <span className=\"btn btn-outline-secondary py-1\">\n                        {doujin.data?.length}\n                     </span>\n                  </div>\n                  <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n                     <span className=\"fw-bold me-1 align-middle\">\n                        Uploaded:{' '}\n                     </span>\n                     <span className=\"btn btn-outline-secondary py-1\">\n                        {timeAgo.format(\n                           new Date(doujin.data?.uploadDate),\n                           'round-minute'\n                        )}\n                     </span>\n                  </div>\n               </Col>\n            </Row>\n         )}\n      </Container>\n   );\n};\n\nexport default DoujinPage;\n","const DownloadPage: React.FC = () => {\n   return <></>;\n};\n\nexport default DownloadPage;\n","import { Doujin } from 'nhentai';\nimport {\n   Button,\n   Card,\n   Container,\n   Form,\n   FormControl,\n   OverlayTrigger,\n   Tooltip,\n} from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useSearchQuery } from '../../slices/HentaiApi';\nimport { LoadingMangas } from '../sub-components/Loading';\nimport PaginationComponent from '../sub-components/Navigation';\nimport { SortMethods } from 'nhentai/lib/constants';\nimport _ from 'lodash';\nimport { getSearchParams } from '../props';\nimport { useRef } from 'react';\nimport { useToggle } from 'react-use';\nimport DoujinCard from '../sub-components/DoujinCard';\n\nconst SearchPage: React.FC = (props) => {\n   const blur = useToggle(true);\n   const searchRef = useRef<HTMLInputElement>();\n   const Sorts = _.toPairs(SortMethods);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n         sort: '',\n         q: '',\n      })\n   );\n   const doujins = useSearchQuery(getSearchParams(params));\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            doujins.refetch();\n         }}\n         next={(e: any) =>\n            next(\n               new URLSearchParams({\n                  ...getSearchParams(params),\n                  ...getSearchParams(e),\n               })\n            )\n         }\n         page={doujins?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n\n   return (\n      <Container className=\"d-flex flex-column gap-3 py-2\">\n         <Form\n            className=\"container\"\n            onSubmit={(e) => {\n               e.preventDefault();\n               next({\n                  ...getSearchParams(params),\n                  q: searchRef.current?.value,\n               });\n            }}\n         >\n            <FormControl\n               type=\"search\"\n               placeholder=\"Search\"\n               aria-label=\"Search\"\n               autoComplete=\"none\"\n               ref={searchRef as any}\n            />\n         </Form>\n         <PageComp />\n         <div className=\"d-flex justify-content-center gap-2\">\n            {Sorts.map((e) => (\n               <Button\n                  variant={\n                     params.get('sort') === e[1] ? 'primary' : 'outline-primary'\n                  }\n                  key={e[0]}\n                  onClick={() =>\n                     next(\n                        new URLSearchParams({\n                           ...getSearchParams(params),\n                           sort: e[1],\n                        })\n                     )\n                  }\n               >\n                  {e[0]}\n               </Button>\n            ))}\n         </div>\n         <div className=\"d-flex flex-wrap gap-4 justify-content-center\">\n            {doujins.isSuccess && !doujins.isFetching ? (\n               doujins.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={doujins.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : doujins.isError ? (\n               <>\n                  <div className=\"h-100 d-flex align-items-center justify-content-center flex-column mx-auto my-5\">\n                     <h1>Search something...</h1>\n                     <Button\n                        className=\"w-100\"\n                        onClick={() => {\n                           searchRef.current?.focus();\n                        }}\n                     >\n                        Search\n                     </Button>\n                  </div>\n               </>\n            ) : (\n               <LoadingMangas num={10} />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { FaAngleUp } from 'react-icons/fa';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport Main from './components/Main';\nimport Manga from './components/Manga';\nimport Online from './components/Online';\nimport DoujinPage from './components/online/Doujin';\nimport DownloadPage from './components/online/Downloads';\nimport Header from './components/online/Header';\nimport SearchPage from './components/online/SearchPage';\nimport NotFound from './components/sub-components/404';\nimport './stylesheets/App.scss';\n\nconst ToTopComponent: React.FC = () => {\n   const location = useLocation();\n   const nav = useNavigate();\n   return (\n      <ButtonGroup\n         vertical\n         style={{ right: '2rem', bottom: '3rem', position: 'fixed' }}\n      >\n         <>\n            <Button\n               onClick={() =>\n                  window.scroll({\n                     behavior: 'smooth',\n                     top: 0,\n                     left: 0,\n                  })\n               }\n            >\n               <FaAngleUp fontSize=\"3rem\" />\n            </Button>\n            <Button variant=\"secondary\" onClick={() => nav('/')}>\n               Go Back\n            </Button>\n         </>\n      </ButtonGroup>\n   );\n};\n\nconst App = () => {\n   return (\n      <>\n         <Routes>\n            <Route path=\"/\" caseSensitive element={<Main />} />\n            <Route path=\"/manga\" caseSensitive>\n               <Route\n                  path=\":id\"\n                  element={\n                     <>\n                        <Manga />\n                        <ToTopComponent />\n                     </>\n                  }\n               />\n            </Route>\n            <Route path=\"/online\" caseSensitive element={<Online />}></Route>\n            <Route\n               path=\"/online/search\"\n               element={\n                  <>\n                     <Header />\n                     <SearchPage />\n                  </>\n               }\n            />\n            <Route\n               path=\"/online/:id\"\n               element={\n                  <>\n                     <Header />\n                     <DoujinPage />\n                  </>\n               }\n            />\n            <Route\n               path=\"/online/downloads\"\n               element={\n                  <>\n                     <Header />\n                     <DownloadPage />\n                  </>\n               }\n            />\n            <Route path=\"*\" element={<NotFound />} />\n         </Routes>\n      </>\n   );\n};\n\nexport default App;\n","import { ToastContainer, Toast } from 'react-bootstrap';\nimport { useToggle } from 'react-use';\nimport { useSelector } from '../../store';\nimport timeAgo from '../../timeAgo';\n\nexport const NoteToast: React.FC<{\n   id: any;\n   header: string;\n   message: string;\n   createdAt: number;\n   delay?: number;\n}> = (props) => {\n   const [show, setShow] = useToggle(true);\n   return (\n      <Toast\n         onClose={() => setShow(false)}\n         show={show}\n         animation\n         autohide={!!props.delay}\n         delay={props.delay}\n      >\n         <Toast.Header>\n            <img src=\"/favicon.png\" height=\"20\" className=\"me-2\" alt=\"Logo\" />\n            <strong className=\"me-auto\">{props.header}</strong>\n            <small className=\"text-muted\">\n               {timeAgo.format(props.createdAt)}\n            </small>\n         </Toast.Header>\n         <Toast.Body>{props.message}</Toast.Body>\n      </Toast>\n   );\n};\n\nconst ToastArea: React.FC = () => {\n   const toasts = useSelector((state) => state.downloads.toasts);\n\n   return (\n      <ToastContainer\n         style={{ zIndex: 10000 }}\n         position=\"bottom-end\"\n         className=\"p-3 position-fixed\"\n      >\n         {/* <Toast>\n            <Toast.Header>\n               <img\n                  src=\"/favicon.png\"\n                  height=\"20\"\n                  className=\"me-2\"\n                  alt=\"Logo\"\n               />\n               <strong className=\"me-auto\">Ora!</strong>\n               <small className=\"text-muted\">\n                  {timeAgo.format(new Date())}\n               </small>\n            </Toast.Header>\n            <Toast.Body>Ora Ora Ora Ora Ora!</Toast.Body>\n         </Toast> */}\n         {toasts.map((e) => (\n            <NoteToast key={e.id} {...e} />\n         ))}\n      </ToastContainer>\n   );\n};\n\nexport default ToastArea;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App';\nimport './stylesheets/index.scss';\nimport ToastArea from './components/online/ToastArea';\n\nReactDOM.render(\n   <Provider store={store}>\n      <ToastArea />\n      <Router>\n         <App />\n      </Router>\n   </Provider>,\n   document.querySelector('#container')\n);\n"],"sourceRoot":""}