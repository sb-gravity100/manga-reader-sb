{"version":3,"sources":["style.module.scss","slices/ControlSlice.ts","slices/MangaApi.ts","store.ts","components/sub-components/ReaderItem.tsx","components/sub-components/Loading.tsx","components/Reader.tsx","components/sub-components/ErrorBlock.tsx","components/Main.tsx","img/404.jpg","components/MangaView.tsx","components/MangaHeader.tsx","components/Manga.tsx","components/sub-components/404.tsx","App.tsx","Footer.tsx","index.tsx"],"names":["module","exports","ControlSlice","createSlice","initialState","blur","zoom","page","current","limit","brightness","search","name","reducers","setZoom","state","action","payload","toggleBrightness","setSearch","prev","toggleBlur","toggleRefresh","refresh","toggleCovers","_updateCovers","setPage","gotoPage","total","toggleScroll","scrollDown","actions","ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","url","params","getManga","id","q","useGetMangaQuery","useAllMangasQuery","useSearchQuery","useLazySearchQuery","useLazyAllMangasQuery","store","useLazyGetMangaQuery","usePrefetch","configureStore","reducer","controls","ControlReducer","middleware","getDefMid","concat","useSelector","useReduxSelector","useDispatch","useReduxDispatch","ReaderItem","props","item","isBlur","className","title","to","classNames","src","cover","undefined","Loading","styles","loading_style","CurryNav","_","curry","cur","max","addUpTo","next","i","push","reverse","Navigation","history","useHistory","location","useLocation","useState","Number","navState","setNav","pushPage","_page","currentParams","QueryString","parse","slice","stringify","Object","assign","useEffect","addPages","disabled","first","onClick","map","v","last","Reader","times","n","value","label","refetch","loading","data","classname","ErrorBlock","children","hasErrors","errors","retry","isFetching","console","log","errorBlock","retryBtn","style","cursor","errorMsg","message","originalStatus","error","SearchComponent","clickFunc","backgroundImage","chunk","split","e","join","SearchBar","searchQuery","useToggle","isFocused","toggleFocus","dispatch","handleClick","type","placeholder","onChange","target","autoComplete","autoCorrect","onFocus","onBlur","defaultValue","isSuccess","length","manga","Main","pageQuery","getMangas","mangas","header_flex","refresh_btn","fontSize","isError","items","MangaView","panelImg","path","alt","errorImg","background","height","snapNum","gsap","utils","snap","values","_times","radius","MangaHeader","scrollID","setScrollID","toggleScrollDown","speed","setInterval","scrollBy","top","left","behavior","clearInterval","window","pathname","Manga","mangaID","useSearchParam","isLoading","widthValue","StyleSheet","create","main","filter","maxWidth","transition","document","scroll","bgColor","color","css","d","k","NotFound","NotFoundBlock","NotFoundCodeBlock","GoHomeLink","App","exact","component","Footer","p_overflow","ToTopComponent","StickyBar","trim","goBack","ReactDOM","render","querySelector"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,WAAa,0BAA0B,OAAS,sBAAsB,OAAS,sBAAsB,YAAc,2BAA2B,cAAgB,6BAA6B,cAAgB,6BAA6B,kBAAoB,iCAAiC,WAAa,0BAA0B,SAAW,wBAAwB,WAAa,0BAA0B,SAAW,wBAAwB,WAAa,0BAA0B,cAAgB,6BAA6B,YAAc,2BAA2B,KAAO,oBAAoB,YAAc,2BAA2B,UAAY,2B,wJCuC1oBC,EAAeC,YAAY,CAC9BC,aAdkB,CAClBC,MAAM,EACNC,KAAM,EACNC,KAAM,CACHC,QAAS,GAEZC,MAAO,GACPC,YAAY,EACZC,OAAQ,CACLH,QAAS,KAMZI,KAAM,UACNC,SAAU,CACPC,QADO,SACCC,EAAOC,GACZD,EAAMT,KAAOU,EAAOC,SAEvBC,iBAJO,SAIUH,GACdA,EAAML,YAAcK,EAAML,YAE7BS,UAPO,SAOGJ,EAAOC,GACdD,EAAMJ,OAAS,CACZS,KAAML,EAAMJ,OAAOH,SAAWO,EAAMJ,OAAOS,KAC3CZ,QAASQ,EAAOC,UAGtBI,WAbO,SAaIN,GACRA,EAAMV,MAAQU,EAAMV,MAEvBiB,cAhBO,SAgBOP,GACXA,EAAMQ,SAAWR,EAAMQ,SAE1BC,aAnBO,SAmBMT,GACVA,EAAMU,eAAiBV,EAAMU,eAEhCC,QAtBO,SAsBCX,EAAOC,GACRA,IACDD,EAAMR,KAAOS,EAAOC,UAG1BU,SA3BO,SA2BEZ,EAAOC,GACbD,EAAMR,KAAKC,QACRQ,EAAOC,QAAUF,EAAMR,KAAKqB,MAAQ,EAC/B,EACAZ,EAAOC,QAAU,EACjB,EACAD,EAAOC,SAElBY,aAnCO,SAmCMd,GACVA,EAAMe,YAAcf,EAAMe,eAK5B,EAUH5B,EAAa6B,QATdjB,EADI,EACJA,QAEAI,GAHI,EAEJW,aAFI,EAGJX,kBACAC,EAJI,EAIJA,UACAE,EALI,EAKJA,WAGAK,GARI,EAMJF,aANI,EAOJF,cAPI,EAQJI,SAIYxB,GAZR,EASJyB,SAGYzB,EAAf,S,gBClEM8B,EAAWC,YAAU,CACxBC,YAAa,WACbC,UAAWC,YAAe,CACvBC,QAAS,SAEZC,UAAW,SAACC,GAAD,MAAc,CACtBC,UAAWD,EAAQE,MAAwC,CACxDA,MADwD,SAClDC,GACH,MAAO,CACJC,IAAK,UACLC,OAAQF,GAAQ,CACbnC,KAAM,EACNE,MAAO,QAKnBoC,SAAUN,EAAQE,MAAqB,CACpCA,MADoC,SAC9BK,GACH,MAAO,CACJH,IAAI,SACJC,OAAQ,CACLE,UAKZnC,OAAQ4B,EAAQE,MAA8B,CAC3CA,MAD2C,SACrCM,GACH,MAAM,aAAN,OAAoBA,GAAK,WAMtBf,IAIZgB,GAMChB,EAPDiB,kBAOCjB,EANDgB,kBAEAE,GAIClB,EALDmB,mBAKCnB,EAJDkB,gBACAE,EAGCpB,EAHDoB,sBC/DGC,GDkEFrB,EAFDsB,qBAECtB,EADDuB,YCjEWC,YAAe,CAC1BC,QAAQ,aACLC,SAAUC,GACT3B,EAASE,YAAcF,EAASyB,SAEpCG,WAAY,SAACC,GAAD,OAAeA,IAAYC,OAAO9B,EAAS4B,gBAK7CG,EAA+CC,IAC/CC,EAAc,kBAAMC,eAClBb,I,wDCiBAc,EA/ByB,SAACC,GACtC,IAAQC,EAASD,EAATC,KACFC,EAASP,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,SAASrD,QAErD,OACG,eAAC,IAAD,CAAMkE,UAAU,YAAYC,MAAOH,EAAKzD,KAAM6D,GAAE,oBAAeJ,EAAKvB,IAApE,UAEM,qBACGyB,UAAWG,IAAW,SAAUJ,EAAS,WAAa,gBACtDK,IAAKN,EAAKO,YAASC,IAezB,qBAAKN,UAAU,cAAf,SACG,4BAAIF,EAAKzD,a,iCCrBNkE,EARK,kBACjB,qBAAKP,UAAWQ,IAAOC,cAAvB,SACG,6BACG,qBAAKT,UAAU,oBAAf,6B,iBCcHU,EAAWC,IAAEC,OAAM,SAACC,EAAaC,EAAaC,GAGjD,IAFA,IAAMC,EAAiB,GACjBnE,EAAiB,GACdoE,EAAIJ,EAAKI,EAAIH,EAAM,GAAKG,EAAIJ,EAAME,EAASE,IACjDD,EAAKE,KAAKD,EAAI,GAEjB,IAAK,IAAIA,EAAIJ,EAAKI,EAAI,GAAKA,EAAIJ,EAAME,EAASE,IAC3CpE,EAAKqE,KAAKD,EAAI,GAEjB,MAAO,CACJD,OACAnE,KAAMA,EAAKsE,cAIXC,EAA2B,SAACvB,GAC/B,IACMwB,EAAUC,cACVC,EAAWC,cACjB,EAAwBhC,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,YAA7CnD,EAAR,EAAQA,KACR,GADA,EAAcE,MACauF,mBACxBf,EAASgB,OAAO1F,EAAKC,SAAUD,EAAKqB,MALtB,KAIjB,mBAAOsE,EAAP,KAAiBC,EAAjB,KAGMC,EAAW,SAACC,GACf,IAAMC,EAAgBC,IAAYC,MAAMV,EAASnF,OAAO8F,MAAM,IAC9Db,EAAQH,KAAK,CACV9E,OACG,IACA4F,IAAYG,UACTC,OAAOC,OAAON,EAAe,CAC1B/F,KAAM8F,QAmBrB,OAVAQ,qBAAU,WACHtG,EAAKC,UAAYD,EAAKqB,MAAQ,GAAsB,IAAjBrB,EAAKC,QACzC2F,EAAOlB,EAASgB,OAAO1F,EAAKC,SAAUD,EAAKqB,MAAOkF,IAC1CvG,EAAKqB,MAAQ,EAAIrB,EAAKC,UAAY,GAAsB,IAAjBD,EAAKC,QACpD2F,EAAOlB,EAASgB,OAAO1F,EAAKC,SAAUD,EAAKqB,MAAOkF,IAElDX,EAAOlB,EAASgB,OAAO1F,EAAKC,SAAUD,EAAKqB,MA7BhC,MAgCd,CAACrB,IAED,sBAAKgE,UAAU,MAAf,UACG,wBACGwC,SACyB,kBAAfxG,EAAKyG,OAAsBzG,EAAKC,UAAYD,EAAKyG,MAE3DC,QAAS,kBAAMb,EAAS7F,EAAKyG,QAJhC,SAMG,cAAC,IAAD,MAEH,wBACGD,SACwB,kBAAdxG,EAAKa,MAAqBb,EAAKC,UAAYD,EAAKyG,MAE1DC,QAAS,kBAAMb,EAAS7F,EAAKa,OAJhC,SAMG,cAAC,IAAD,MAEF8E,EAAS9E,KAAK8F,KAAI,SAACC,GACjB,OACG,wBAAgBF,QAAS,kBAAMb,EAASe,IAAxC,SACIA,GADSA,MAKnB,wBAAQ5C,UAAU,UAAlB,SAA6BhE,EAAKC,UACjC0F,EAASX,KAAK2B,KAAI,SAACC,GACjB,OACG,wBAAgBF,QAAS,kBAAMb,EAASe,IAAxC,SACIA,GADSA,MAKnB,wBACGJ,SACwB,kBAAdxG,EAAKgF,MAAqBhF,EAAKC,UAAYD,EAAK6G,KAE1DH,QAAS,kBAAMb,EAAS7F,EAAKgF,OAJhC,SAMG,cAAC,IAAD,MAEH,wBACGwB,SACwB,kBAAdxG,EAAK6G,MAAqB7G,EAAKC,UAAYD,EAAK6G,KAE1DH,QAAS,kBAAMb,EAAS7F,EAAK6G,OAJhC,SAMG,cAAC,IAAD,UAkCGC,EA5BiB,SAACjD,GAAW,IAAD,EAClCV,EAAWK,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,YACzBwB,IAAEoC,MAAM,IAAI,SAACC,GAAD,MAAQ,CACtCC,MAAOD,EAAI,EACXE,MAAOF,EAAI,MAEd,OACG,sBAAKhD,UAAU,cAAf,UACmC,kBAAxBb,EAASnD,KAAKqB,OACnB,mCACG,cAAC,EAAD,CAAY8F,QAAStD,EAAMsD,YAGjC,qBAAKnD,UAAU,kBAAf,UACKH,EAAMuD,SAAWvD,EAAMwD,KACtB,qBAAKrD,UAAWsD,IAAU,mBAAoB,WAA9C,mBACIzD,EAAMwD,YADV,aACI,EAAYV,KAAI,SAAC7C,GAAD,OACd,cAAC,EAAD,CAA0BA,KAAMA,GAAfA,EAAKvB,SAI5B,cAAC,EAAD,UC7GAgF,EA9BoB,SAAC,GAM7B,IALJC,EAKG,EALHA,SACAC,EAIG,EAJHA,UACAC,EAGG,EAHHA,OACAC,EAEG,EAFHA,MACAC,EACG,EADHA,WAEA,OAAIH,GACDI,QAAQC,IAAIJ,GAET,sBAAK1D,UAAWQ,IAAOuD,WAAvB,UACG,yDACA,wBACG/D,UAAWQ,IAAOwD,SAClBtB,QAAS,kBAAMiB,KACfM,MAAO,CAAEC,OAAQN,EAAa,WAAa,WAH9C,SAKIA,EAAa,cAAgB,WAEjC,sBAAM5D,UAAWQ,IAAO2D,SAAxB,UACU,OAANT,QAAM,IAANA,OAAA,EAAAA,EAAQU,UAAsC,OAArB,OAANV,QAAM,IAANA,OAAA,EAAAA,EAAQW,gBACvB,0CACAX,EAAOY,YAKjB,mCAAGd,K,QCVPe,EAAyD,SAAC1E,GAAD,OAC5D,eAAC,IAAD,CACGK,GAAE,oBAAeL,EAAMC,KAAKvB,IAC5ByB,UAAU,cACVC,MAAOJ,EAAMC,KAAKzD,KAClBqG,QAAS7C,EAAM2E,UAJlB,UAMG,qBACGxE,UAAU,YACViE,MAAO,CACJQ,gBAAgB,QAAD,OAAU5E,EAAMC,KAAKO,MAArB,SAGrB,qBAAKL,UAAU,OAAf,SACIW,IAAE+D,MAAM7E,EAAMC,KAAKzD,KAAKsI,MAAM,KAAM,GAAGhC,KAAI,SAACiC,EAAG3D,GAAJ,OACzC,4BAAY2D,EAAEC,KAAK,MAAX5D,YAMd6D,EAAgC,SAACjF,GACpC,IAAMkF,EAAcvF,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,SAAS/C,UAC1D,EAAiC4I,aAAU,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAWzF,IAIX0F,EAAoD,SAACR,GACxDO,EAASvI,EAAU,MAGhBR,EAASuC,EAAeoG,EAAY9I,SAC1C,OACG,mCACG,sBAAK+D,UAAU,aAAf,UACG,uBACGqF,KAAK,OACLhJ,KAAK,SACLiJ,YAAY,YACZC,SAfqD,SAACX,GAC/DO,EAASvI,EAAUgI,EAAEY,OAAOvC,SAenBwC,aAAa,MACbC,YAAY,MACZC,QAAS,kBAAMT,GAAY,IAC3BU,OAAQ,kBAAMV,GAAY,IAC1BW,aAAcd,EAAY9I,SAAW8I,EAAYlI,MAAQ,OAEzDkI,EAAY9I,SACZ,sBAAK+D,UAAU,cAAf,YACM+E,EAAY9I,SAAWG,EAAOwH,YAC9B,qBAAK5D,UAAU,mCAAf,gCAIF5D,EAAO0J,WACkB,IAAvB1J,EAAOiH,KAAK0C,QACZd,IACC7I,EAAOwH,cACNmB,EAAY9I,SACX,sBAAK+D,UAAU,iBAAf,4BACmB,QAGxB5D,EAAO0J,WACL1J,EAAOiH,KAAKV,KAAI,SAACqD,GAAD,OACb,cAAC,EAAD,aAEGxB,UAAWY,GACPY,GAFCA,EAAMlG,KAAKvB,gBAkH5B0H,EAtGF,WAAO,IAAD,IAChB,EAAwBzG,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,YAA7CnD,EAAR,EAAQA,KAAME,EAAd,EAAcA,MACRqF,EAAWC,cACX0E,EAAYlE,IAAYC,MAAMV,EAASnF,OAAO8F,MAAM,IAAIlG,KAC9D,EAA4B6C,IAA5B,mBAAOsH,EAAP,KAAkBC,EAAlB,KACMjB,EAAWzF,IAqCjB,OAnCA4C,qBAAU,WACP6D,EAAU,CACPnK,KAAMkK,EAAYxE,OAAOwE,GAAalK,EAAKC,QAC3CC,YAEH,CAACgK,IAEJ5D,qBAAU,WAAO,IAAD,oBACb6C,EACGhI,EAAQ,CACLlB,QAASiK,EAAYxE,OAAOwE,GAAalK,EAAKC,QAC9C+E,KACgC,kBAA7B,UAAOoF,EAAO/C,YAAd,aAAO,EAAarC,MAApB,UACKoF,EAAO/C,YADZ,aACK,EAAarC,KACbhF,EAAKgF,KACbnE,KACgC,kBAA7B,UAAOuJ,EAAO/C,YAAd,aAAO,EAAaxG,MAApB,UACKuJ,EAAO/C,YADZ,aACK,EAAaxG,KACbb,EAAKa,KACbgG,KACgC,kBAA7B,UAAOuD,EAAO/C,YAAd,aAAO,EAAaR,MAApB,UACKuD,EAAO/C,YADZ,aACK,EAAaR,KACb7G,EAAK6G,KACbJ,MACiC,kBAA9B,UAAO2D,EAAO/C,YAAd,aAAO,EAAaZ,OAApB,UACK2D,EAAO/C,YADZ,aACK,EAAaZ,MACbzG,EAAKyG,MACbpF,MACiC,kBAA9B,UAAO+I,EAAO/C,YAAd,aAAO,EAAahG,OAApB,UACK+I,EAAO/C,YADZ,aACK,EAAahG,MACbrB,EAAKqB,WAGnB,CAAC+I,EAAO/C,KAAM6C,IAGd,sBAAK3H,GAAG,OAAR,UACG,sBAAKyB,UAAWQ,IAAO6F,YAAvB,UACG,oBAAIrG,UAAU,OAAd,SACG,cAAC,IAAD,CAAME,GAAG,IAAT,SACG,6CAGN,sBAAKF,UAAU,WAAf,UACG,yBACG0C,QAAS,kBACNyD,EAAU,CACPnJ,SAAS,EACThB,KAAMkK,EAAYxE,OAAOwE,GAAalK,EAAKC,QAC3CC,WAGN8D,UAAWQ,IAAO8F,YARrB,UAUG,cAAC,IAAD,CAAWC,SAAS,WACpB,6CAEH,yBACG7D,QAAS,kBACNyD,EAAU,CACPjJ,eAAe,EACflB,KAAMkK,EAAYxE,OAAOwE,GAAalK,EAAKC,QAC3CC,WAGN8D,UAAWQ,IAAO8F,YARrB,UAUG,cAAC,IAAD,CAAWC,SAAS,WACpB,4CAEH,wBACG7D,QAAS,kBAAMyC,EAASrI,MACxBkD,UAAWG,IAAW,gBAAiBK,IAAO8F,aAFjD,SAIG,+CAIT,cAAC,EAAD,IACA,cAAC,EAAD,CACG3C,MAAO,kBAAMwC,KACb1C,UAAW2C,EAAOI,QAClB9C,OAAQ0C,EAAO9B,MACfV,WAAYwC,EAAOxC,WAJtB,SAMG,cAAC,EAAD,CACGvG,MAAK,OAAE+I,QAAF,IAAEA,GAAF,UAAEA,EAAQ/C,YAAV,aAAE,EAAcoD,MAAMV,OAC3B1C,KAAI,OAAE+C,QAAF,IAAEA,GAAF,UAAEA,EAAQ/C,YAAV,aAAE,EAAcoD,MACpBrD,QAASgD,EAAOxC,WAChBT,QAASgD,U,0BCnMT,OAA0B,gCCgB1BO,GAXuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnC,qBAAK3G,UAAU,QAAf,SACG,cAAC,KAAD,CACGI,IAAKuG,EAASC,KACdC,IAAKF,EAAStK,KACdiI,MAAOwC,GACP7C,MAAQ0C,EAAqD,GAA1C,CAAEI,WAAY,OAAQC,OAAQ,c,6BCMpDC,GAAUC,KAAKC,MAAMC,KAAK,CAAEC,OAAQC,KAAO,IAAI,SAACtE,GAAD,OAAOA,OAAMuE,OAAQ,IAuE3DC,GArE2B,SAAC,GAAe,IAAbxB,EAAY,EAAZA,MAC1C,EAAgCvE,qBAAhC,mBAAOgG,EAAP,KAAiBC,EAAjB,KACA,EAAuC1C,aAAU,GAAjD,mBAAOzH,EAAP,KAAmBoK,EAAnB,KACMxC,EAAWzF,IACjB,EAA6BF,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,YAAlDpD,EAAR,EAAQA,KAAMI,EAAd,EAAcA,WA4Bd,OAjBAmG,qBAAU,WAVO,IAACsF,EAWXrK,EACDmK,GAZYE,EAYS,EAXxBC,aACG,kBAAMC,SAAS,CAAEC,IAAKH,EAAOI,KAAM,EAAGC,SAAU,aAChD,OAWAC,cAAcT,GACdC,OAAYpH,IAEfuD,QAAQC,IAAIvG,KACZ,CAACA,IAEJ+E,qBAAU,kBAAM,WACbuB,QAAQC,IAAIqE,OAAO5G,SAAS6G,UACK,WAA7BD,OAAO5G,SAAS6G,WACjBF,cAAcT,GACdC,OAAYpH,QAIf,mCACG,oBAAIN,UAAU,OAAd,UAA2B,OAALgG,QAAK,IAALA,OAAA,EAAAA,EAAO3J,OAAQ,QACrC,gCACG,qBAAK2D,UAAU,gBAAgB0C,QAzBd,WACvBiF,KAwBM,SACG,iCACIpK,EAAa,cAAC,IAAD,IAAa,cAAC,IAAD,QAGjC,qBAAKyC,UAAU,iBAAf,SACG,wBAAQ0C,QAAS,kBAAMyC,EAASxI,MAAhC,SACIR,EACE,cAAC,IAAD,CAAkBoK,SAAS,WAE3B,cAAC,IAAD,CAAiBA,SAAS,eAInC,sBAAKvG,UAAU,eAAf,UACG,wBACGqF,KAAK,SACL3C,QAAS,kBAAMyC,EAAS5I,EAAQ0K,GAAQlL,EAAO,MAFlD,SAIG,cAAC,IAAD,CAAWwK,SAAS,aAEvB,wBACGlB,KAAK,SACL3C,QAAS,kBAAMyC,EAAS5I,EAAQ0K,GAAQlL,EAAO,MAFlD,SAIG,cAAC,IAAD,CAAUwK,SAAS,uB,SCDtB8B,GAnED,WAAO,IAAD,EACXC,EAAUC,YAAe,OAAS,GACxC,EAOI9J,EAAiBiD,OAAO4G,IANnBtC,EADT,EACG3C,KACWD,EAFd,EAEGoF,UACAlE,EAHH,EAGGA,MACAnB,EAJH,EAIGA,QACAS,EALH,EAKGA,WACA4C,EANH,EAMGA,QAEGrH,EAAWK,GAAY,SAAChD,GAAD,OAAWA,EAAM2C,YACxCsJ,EAA0C,KAA5BtJ,EAASpD,KAAO,GAAK,IACnCyE,EAASkI,KAAWC,OAAO,CAC9BC,KAAM,CACHC,OAAQ1J,EAAShD,WAAa,mBAAqB,kBACnD2M,SAAS,GAAD,OAAKL,EAAL,MACRM,WAAY,UAoBlB,OAjBAzG,qBAAU,WACHc,EACD4F,SAAS/I,MAAQ,aAEb+F,IACDgD,SAAS/I,MAAT,OAAiB+F,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO3J,SAKjCiG,qBAAU,WACP6F,OAAOc,OAAO,CACXlB,IAAK,EACLC,KAAM,MAET,IAGA,sBAAKhI,UAAU,kBAAf,UACIoD,GAAW,cAAC,EAAD,IACZ,cAAC,EAAD,CACGK,UAAW+C,EACX9C,OAAQY,EACRX,MAAOR,EACPS,WAAYA,EAJf,SAMG,sBAAK5D,UAAU,UAAf,WACKoD,GACC,cAAC,KAAD,CACG4D,OAAO,MACPkC,QAAQ,UACRnB,IAAI,OACJoB,MAAM,YAGZ,cAAC,GAAD,CAAanD,MAAOA,IACpB,qBAAKhG,UAAWoJ,aAAI5I,EAAOoI,MAAOrK,GAAG,SAArC,UACK6E,IAAD,OACE4C,QADF,IACEA,GADF,UACEA,EAAO3C,YADT,aACE,EAAaV,KAAI,SAAC0G,EAAGC,GAAJ,OACd,cAAC,GAAD,CAAmB3C,SAAU0C,GAAbC,kBCvDzBC,GAZE,kBACf,sBAAKvJ,UAAWQ,IAAOgJ,cAAvB,UACE,+CACA,sBAAMxJ,UAAWQ,IAAOiJ,kBAAxB,wDAGA,cAAC,IAAD,CAAMzJ,UAAWQ,IAAOkJ,WAAYxJ,GAAG,IAAvC,6BCQWyJ,I,MAVH,WACT,OACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,OAAK,EAAChD,KAAK,IAAIiD,UAAW5D,IACjC,cAAC,IAAD,CAAOW,KAAK,SAASiD,UAAWxB,KAChC,cAAC,IAAD,CAAOwB,UAAWN,UCCZO,I,MAVA,WACb,OACE,iCACE,oBAAG9J,UAAWQ,IAAOuJ,WAArB,gDACqC,cAAC,IAAD,CAASxD,SAAS,kBCUvDyD,GAA2B,WAC9B,IAAMzI,EAAWC,cACXH,EAAUC,cAEhB,OACG,sBAAKtB,UAAWQ,IAAOyJ,UAAvB,UACG,wBACGvH,QAAS,kBACNyF,OAAOc,OAAO,CACXhB,SAAU,SACVF,IAAK,EACLC,KAAM,KALf,SASG,cAAC,IAAD,CAAWzB,SAAS,WAEO,MAA7BhF,EAAS6G,SAAS8B,QAChB,wBAAQxH,QAAS,kBAAMrB,EAAQ8I,UAA/B,yBAMZC,IAASC,OACN,cAAC,IAAD,UACG,eAAC,IAAD,CAAUvL,MAAOA,EAAjB,UACG,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,SAGNkK,SAASsB,cAAc,iB","file":"static/js/main.9ad3387b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_btn\":\"style_scroll_btn__2DVon\",\"center\":\"style_center__2ktxo\",\"header\":\"style_header__QLGaS\",\"flex_column\":\"style_flex_column__2GipV\",\"transitionize\":\"style_transitionize__2Cutg\",\"NotFoundBlock\":\"style_NotFoundBlock__3nBZt\",\"NotFoundCodeBlock\":\"style_NotFoundCodeBlock__3eTYR\",\"GoHomeLink\":\"style_GoHomeLink__FUFnD\",\"errorMsg\":\"style_errorMsg__3EXXt\",\"errorBlock\":\"style_errorBlock__2rrBe\",\"retryBtn\":\"style_retryBtn__obQzX\",\"p_overflow\":\"style_p_overflow__2lbNJ\",\"loading_style\":\"style_loading_style__Q5HdP\",\"header_flex\":\"style_header_flex__BGuEN\",\"logo\":\"style_logo__1aLeU\",\"refresh_btn\":\"style_refresh_btn__3OP8f\",\"StickyBar\":\"style_StickyBar__2JC9z\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\ntype PageProps = {\n   current: number;\n   prev: number;\n   next: number;\n   first: number;\n   last: number;\n   total: number;\n};\n\ninterface ControlState {\n   zoom: number;\n   brightness: boolean;\n   search: {\n      prev: string;\n      current: string;\n   };\n   blur: boolean;\n   page: PageProps;\n   limit: number;\n   refresh: boolean;\n   _updateCovers: boolean;\n   scrollDown: boolean;\n}\n\nconst initialState = {\n   blur: true,\n   zoom: 5,\n   page: {\n      current: 0,\n   },\n   limit: 10,\n   brightness: true,\n   search: {\n      current: '',\n   },\n} as ControlState;\n\nconst ControlSlice = createSlice({\n   initialState,\n   name: 'control',\n   reducers: {\n      setZoom(state, action: PayloadAction<number>) {\n         state.zoom = action.payload;\n      },\n      toggleBrightness(state) {\n         state.brightness = !state.brightness;\n      },\n      setSearch(state, action: PayloadAction<string>) {\n         state.search = {\n            prev: state.search.current || state.search.prev,\n            current: action.payload,\n         };\n      },\n      toggleBlur(state) {\n         state.blur = !state.blur;\n      },\n      toggleRefresh(state) {\n         state.refresh = !state.refresh;\n      },\n      toggleCovers(state) {\n         state._updateCovers = !state._updateCovers;\n      },\n      setPage(state, action?: PayloadAction<PageProps>) {\n         if (action) {\n            state.page = action.payload;\n         }\n      },\n      gotoPage(state, action: PayloadAction<number>) {\n         state.page.current =\n            action.payload > state.page.total - 1\n               ? 9\n               : action.payload < 0\n               ? 0\n               : action.payload;\n      },\n      toggleScroll(state) {\n         state.scrollDown = !state.scrollDown;\n      },\n   },\n});\n\nexport const {\n   setZoom,\n   toggleScroll,\n   toggleBrightness,\n   setSearch,\n   toggleBlur,\n   toggleCovers,\n   toggleRefresh,\n   setPage,\n   gotoPage,\n} = ControlSlice.actions;\n\nexport default ControlSlice.reducer;\n","import {\n   BaseQueryFn,\n   createApi,\n   FetchArgs,\n   fetchBaseQuery,\n   FetchBaseQueryError,\n   FetchBaseQueryMeta,\n} from '@reduxjs/toolkit/query/react';\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\nimport _ from 'lodash';\nimport qs from 'qs';\nimport { Manga, SearchResult, MangasResult } from '../../../src/types';\n\ninterface MangasQuery {\n   offset?: number;\n   limit?: number;\n   order?: any;\n   sort?: string | string[];\n   refresh?: any;\n   _updateCovers?: any;\n   page?: number;\n}\n\ninterface Meta {\n   nextPage?: number;\n   prevPage?: number;\n   firstPage?: number;\n   lastPage?: number;\n}\n\nconst ApiSlice = createApi({\n   reducerPath: 'MangaApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api',\n   }),\n   endpoints: (builder) => ({\n      allMangas: builder.query<MangasResult, MangasQuery | void>({\n         query(opts) {\n            return {\n               url: '/mangas',\n               params: opts || {\n                  page: 0,\n                  limit: 10,\n               },\n            };\n         },\n      }),\n      getManga: builder.query<Manga, number>({\n         query(id) {\n            return {\n               url: `/manga`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<SearchResult[], string>({\n         query(q) {\n            return `/search?q=${q || ''}`;\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useAllMangasQuery,\n   useGetMangaQuery,\n   useLazySearchQuery,\n   useSearchQuery,\n   useLazyAllMangasQuery,\n   useLazyGetMangaQuery,\n   usePrefetch,\n} = ApiSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n   useDispatch as useReduxDispatch,\n   useSelector as useReduxSelector,\n   TypedUseSelectorHook,\n} from 'react-redux';\nimport ControlReducer from './slices/ControlSlice';\nimport ApiSlice from './slices/MangaApi';\n\nconst store = configureStore({\n   reducer: {\n      controls: ControlReducer,\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\n   },\n   middleware: (getDefMid) => getDefMid().concat(ApiSlice.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\nexport default store;\n","/* eslint-disable jsx-a11y/alt-text */\nimport classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from '../../store';\nimport { ReaderItemProps } from '../props';\n\nconst ReaderItem: FC<ReaderItemProps> = (props) => {\n   const { item } = props;\n   const isBlur = useSelector((state) => state.controls.blur);\n\n   return (\n      <Link className=\"flex-item\" title={item.name} to={`/manga?id=${item.id}`}>\n         {true ? (\n            <img\n               className={classNames('bg-img', isBlur ? 'blur-img' : 'non-blur-img')}\n               src={item.cover || undefined}\n            />\n         ) : (\n            <div\n               className=\"bg-img\"\n               style={{\n                  filter: 'none',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}\n            >\n               Loading...\n            </div>\n         )}\n         <div className=\"description\">\n            <p>{item.name}</p>\n         </div>\n      </Link>\n   );\n};\n\nexport default ReaderItem;\n","import { FC } from 'react';\nimport styles from '../../style.module.scss';\n\nconst Loading: FC = () => (\n   <div className={styles.loading_style}>\n      <h3>\n         <div className=\"loading-animation\">Loading...</div>\n      </h3>\n   </div>\n);\n\nexport default Loading;\n","/* eslint-disable no-script-url */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/alt-text */\nimport ReaderItem from './sub-components/ReaderItem';\nimport classname from 'classnames';\nimport {\n   FaAngleLeft,\n   FaAngleRight,\n   FaAngleDoubleLeft,\n   FaAngleDoubleRight,\n} from 'react-icons/fa';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _, { add } from 'lodash';\nimport { FC, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { NavProps, ReaderProps } from './props';\nimport Loading from './sub-components/Loading';\nimport { useSelector } from '../store';\nimport QueryString from 'qs';\n\nconst CurryNav = _.curry((cur: number, max: number, addUpTo: number) => {\n   const next: number[] = [];\n   const prev: number[] = [];\n   for (let i = cur; i < max - 1 && i < cur + addUpTo; i++) {\n      next.push(i + 1);\n   }\n   for (let i = cur; i > 0 && i > cur - addUpTo; i--) {\n      prev.push(i - 1);\n   }\n   return {\n      next,\n      prev: prev.reverse(),\n   };\n});\n\nconst Navigation: FC<NavProps> = (props) => {\n   const addPages = 2;\n   const history = useHistory();\n   const location = useLocation();\n   const { page, limit } = useSelector((state) => state.controls);\n   const [navState, setNav] = useState(\n      CurryNav(Number(page.current), page.total, addPages)\n   );\n   const pushPage = (_page: number) => {\n      const currentParams = QueryString.parse(location.search.slice(1));\n      history.push({\n         search:\n            '?' +\n            QueryString.stringify(\n               Object.assign(currentParams, {\n                  page: _page,\n               })\n            ),\n      });\n      // props.refetch({\n      //    page: _page,\n      //    limit,\n      // });\n   };\n   useEffect(() => {\n      if (page.current === page.total - 1 || page.current === 0) {\n         setNav(CurryNav(Number(page.current), page.total, addPages + 2));\n      } else if (page.total - 1 - page.current === 1 || page.current === 1) {\n         setNav(CurryNav(Number(page.current), page.total, addPages + 1));\n      } else {\n         setNav(CurryNav(Number(page.current), page.total, addPages));\n      }\n      // console.log(page.total - 1 - page.current, page.current);\n   }, [page]);\n   return (\n      <div className=\"nav\">\n         <button\n            disabled={\n               typeof page.first !== 'number' || page.current === page.first\n            }\n            onClick={() => pushPage(page.first)}\n         >\n            <FaAngleDoubleLeft />\n         </button>\n         <button\n            disabled={\n               typeof page.prev !== 'number' || page.current === page.first\n            }\n            onClick={() => pushPage(page.prev)}\n         >\n            <FaAngleLeft />\n         </button>\n         {navState.prev.map((v) => {\n            return (\n               <button key={v} onClick={() => pushPage(v)}>\n                  {v}\n               </button>\n            );\n         })}\n         <button className=\"current\">{page.current}</button>\n         {navState.next.map((v) => {\n            return (\n               <button key={v} onClick={() => pushPage(v)}>\n                  {v}\n               </button>\n            );\n         })}\n         <button\n            disabled={\n               typeof page.next !== 'number' || page.current === page.last\n            }\n            onClick={() => pushPage(page.next)}\n         >\n            <FaAngleRight />\n         </button>\n         <button\n            disabled={\n               typeof page.last !== 'number' || page.current === page.last\n            }\n            onClick={() => pushPage(page.last)}\n         >\n            <FaAngleDoubleRight />\n         </button>\n      </div>\n   );\n};\n\nconst Reader: FC<ReaderProps> = (props) => {\n   const controls = useSelector((state) => state.controls);\n   const limitOptions = _.times(10, (n) => ({\n      value: n + 5,\n      label: n + 5,\n   }));\n   return (\n      <div className=\"main-reader\">\n         {typeof controls.page.total === 'number' && (\n            <>\n               <Navigation refetch={props.refetch} />\n            </>\n         )}\n         <div className=\"main-reader-box\">\n            {!props.loading && props.data ? (\n               <div className={classname('main-reader-flex', 'current')}>\n                  {props.data?.map((item) => (\n                     <ReaderItem key={item.id} item={item} />\n                  ))}\n               </div>\n            ) : (\n               <Loading />\n            )}\n         </div>\n      </div>\n   );\n};\n\nexport default Reader;\n","import { FC } from 'react';\nimport styles from '../../style.module.scss';\nimport { ErrorProps } from '../props';\n\nconst ErrorBlock: FC<ErrorProps> = ({\n   children,\n   hasErrors,\n   errors,\n   retry,\n   isFetching,\n}) => {\n   if (hasErrors) {\n      console.log(errors);\n      return (\n         <div className={styles.errorBlock}>\n            <h3>Something went wrong...</h3>\n            <button\n               className={styles.retryBtn}\n               onClick={() => retry()}\n               style={{ cursor: isFetching ? 'progress' : 'pointer' }}\n            >\n               {isFetching ? 'Retrying...' : 'Retry?'}\n            </button>\n            <code className={styles.errorMsg}>\n               {errors?.message || errors?.originalStatus === 404\n                  ? 'Connection to server cannot be reached.'\n                  : errors.error}\n            </code>\n         </div>\n      );\n   }\n   return <>{children}</>;\n};\n\nexport default ErrorBlock;\n","import { Link, useLocation } from 'react-router-dom';\r\nimport { MdRefresh } from 'react-icons/md';\r\nimport { FC, MouseEventHandler } from 'react';\r\nimport Reader from './Reader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport { useEffect, ChangeEventHandler } from 'react';\r\nimport styles from '../style.module.scss';\r\nimport {\r\n   useAllMangasQuery,\r\n   useLazyAllMangasQuery,\r\n   useSearchQuery,\r\n} from '../slices/MangaApi';\r\nimport { useDispatch, useSelector } from '../store';\r\nimport { setPage, setSearch, toggleBlur } from '../slices/ControlSlice';\r\nimport { SearchBarProps } from './props';\r\nimport _ from 'lodash';\r\nimport { SearchResult } from '../../../src/types';\r\nimport classNames from 'classnames';\r\nimport { useToggle } from 'react-use';\r\nimport QueryString from 'qs';\r\n\r\nconst SearchComponent: FC<SearchResult & { clickFunc: any }> = (props) => (\r\n   <Link\r\n      to={`/manga?id=${props.item.id}`}\r\n      className=\"search-item\"\r\n      title={props.item.name}\r\n      onClick={props.clickFunc}\r\n   >\r\n      <div\r\n         className=\"cover-img\"\r\n         style={{\r\n            backgroundImage: `url('${props.item.cover}')`,\r\n         }}\r\n      ></div>\r\n      <div className=\"name\">\r\n         {_.chunk(props.item.name.split(' '), 8).map((e, i) => (\r\n            <p key={i}>{e.join(' ')}</p>\r\n         ))}\r\n      </div>\r\n   </Link>\r\n);\r\n\r\nconst SearchBar: FC<SearchBarProps> = (props) => {\r\n   const searchQuery = useSelector((state) => state.controls.search);\r\n   const [isFocused, toggleFocus] = useToggle(false);\r\n   const dispatch = useDispatch();\r\n   const handleSearchChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n      dispatch(setSearch(e.target.value));\r\n   };\r\n   const handleClick: MouseEventHandler<HTMLAnchorElement> = (e) => {\r\n      dispatch(setSearch(''));\r\n   };\r\n   // useEffect(() => () => dispatch(setSearch()))\r\n   const search = useSearchQuery(searchQuery.current);\r\n   return (\r\n      <>\r\n         <div className=\"search-bar\">\r\n            <input\r\n               type=\"text\"\r\n               name=\"search\"\r\n               placeholder=\"Search...\"\r\n               onChange={handleSearchChange}\r\n               autoComplete=\"off\"\r\n               autoCorrect=\"off\"\r\n               onFocus={() => toggleFocus(true)}\r\n               onBlur={() => toggleFocus(false)}\r\n               defaultValue={searchQuery.current || searchQuery.prev || ''}\r\n            />\r\n            {!!searchQuery.current && (\r\n               <div className=\"search-list\">\r\n                  {!!searchQuery.current && search.isFetching && (\r\n                     <div className=\"search-loading loading-animation\">\r\n                        Loading results...\r\n                     </div>\r\n                  )}\r\n                  {search.isSuccess &&\r\n                     search.data.length === 0 &&\r\n                     isFocused &&\r\n                     !search.isFetching &&\r\n                     !!searchQuery.current && (\r\n                        <div className=\"search-loading\">\r\n                           Nothing Found! {':('}\r\n                        </div>\r\n                     )}\r\n                  {search.isSuccess &&\r\n                     search.data.map((manga) => (\r\n                        <SearchComponent\r\n                           key={manga.item.id}\r\n                           clickFunc={handleClick}\r\n                           {...manga}\r\n                        />\r\n                     ))}\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst Main = () => {\r\n   const { page, limit } = useSelector((state) => state.controls);\r\n   const location = useLocation();\r\n   const pageQuery = QueryString.parse(location.search.slice(1)).page;\r\n   const [getMangas, mangas] = useLazyAllMangasQuery();\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      getMangas({\r\n         page: pageQuery ? Number(pageQuery) : page.current,\r\n         limit,\r\n      });\r\n   }, [pageQuery]);\r\n\r\n   useEffect(() => {\r\n      dispatch(\r\n         setPage({\r\n            current: pageQuery ? Number(pageQuery) : page.current,\r\n            next:\r\n               typeof mangas.data?.next === 'number'\r\n                  ? mangas.data?.next\r\n                  : page.next,\r\n            prev:\r\n               typeof mangas.data?.prev === 'number'\r\n                  ? mangas.data?.prev\r\n                  : page.prev,\r\n            last:\r\n               typeof mangas.data?.last === 'number'\r\n                  ? mangas.data?.last\r\n                  : page.last,\r\n            first:\r\n               typeof mangas.data?.first === 'number'\r\n                  ? mangas.data?.first\r\n                  : page.first,\r\n            total:\r\n               typeof mangas.data?.total === 'number'\r\n                  ? mangas.data?.total\r\n                  : page.total,\r\n         })\r\n      );\r\n   }, [mangas.data, pageQuery]);\r\n\r\n   return (\r\n      <div id=\"main\">\r\n         <div className={styles.header_flex}>\r\n            <h1 className=\"logo\">\r\n               <Link to=\"/\">\r\n                  <div>Reader</div>\r\n               </Link>\r\n            </h1>\r\n            <div className=\"btn-flex\">\r\n               <button\r\n                  onClick={() =>\r\n                     getMangas({\r\n                        refresh: true,\r\n                        page: pageQuery ? Number(pageQuery) : page.current,\r\n                        limit,\r\n                     })\r\n                  }\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <div>Refresh</div>\r\n               </button>\r\n               <button\r\n                  onClick={() =>\r\n                     getMangas({\r\n                        _updateCovers: true,\r\n                        page: pageQuery ? Number(pageQuery) : page.current,\r\n                        limit,\r\n                     })\r\n                  }\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <div>Covers</div>\r\n               </button>\r\n               <button\r\n                  onClick={() => dispatch(toggleBlur())}\r\n                  className={classNames('is-blur-check', styles.refresh_btn)}\r\n               >\r\n                  <div>Blur</div>\r\n               </button>\r\n            </div>\r\n         </div>\r\n         <SearchBar />\r\n         <ErrorBlock\r\n            retry={() => getMangas()}\r\n            hasErrors={mangas.isError}\r\n            errors={mangas.error}\r\n            isFetching={mangas.isFetching}\r\n         >\r\n            <Reader\r\n               total={mangas?.data?.items.length}\r\n               data={mangas?.data?.items}\r\n               loading={mangas.isFetching}\r\n               refetch={getMangas}\r\n            />\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/404.6a579c40.jpg\";","import { FC } from 'react';\nimport Image from 'react-cool-img';\nimport errorImg from '../img/404.jpg';\nimport { MangaViewProps } from './props';\n\nconst MangaView: FC<MangaViewProps> = ({ panelImg }) => (\n   <div className=\"panel\">\n      <Image\n         src={panelImg.path}\n         alt={panelImg.name}\n         error={errorImg}\n         style={!panelImg ? { background: '#444', height: '500px' } : {}}\n      />\n   </div>\n);\n\nexport default MangaView;\n","/* eslint-disable no-restricted-globals */\nimport { FC, useEffect, useState } from 'react';\nimport {\n   MdZoomIn,\n   MdZoomOut,\n   MdBrightnessHigh,\n   MdBrightnessLow,\n   MdStop,\n   MdPlayCircleFilled,\n} from 'react-icons/md';\nimport { setZoom, toggleBrightness } from '../slices/ControlSlice';\nimport { useDispatch, useSelector } from '../store';\nimport { MangaHeaderProps } from './props';\nimport gsap from 'gsap';\nimport _times from 'lodash/times';\nimport { useToggle } from 'react-use';\n\nconst snapNum = gsap.utils.snap({ values: _times(10, (n) => n++), radius: 1 });\n\nconst MangaHeader: FC<MangaHeaderProps> = ({ manga }) => {\n   const [scrollID, setScrollID] = useState<any>();\n   const [scrollDown, toggleScrollDown] = useToggle(false);\n   const dispatch = useDispatch();\n   const { zoom, brightness } = useSelector((state) => state.controls);\n   const scrollIt = (speed: number) =>\n      setInterval(\n         () => scrollBy({ top: speed, left: 0, behavior: 'smooth' }),\n         80\n      );\n\n   const handleScrollClick = () => {\n      toggleScrollDown();\n   };\n\n   useEffect(() => {\n      if (scrollDown) {\n         setScrollID(scrollIt(4));\n      } else {\n         clearInterval(scrollID);\n         setScrollID(undefined);\n      }\n      console.log(scrollDown);\n   }, [scrollDown]);\n\n   useEffect(() => () => {\n      console.log(window.location.pathname);\n      if (window.location.pathname !== '/manga') {\n         clearInterval(scrollID);\n         setScrollID(undefined);\n      }\n   });\n   return (\n      <header>\n         <h2 className=\"logo\">{manga?.name || '...'}</h2>\n         <nav>\n            <div className=\"speed-control\" onClick={handleScrollClick}>\n               <button>\n                  {scrollDown ? <MdStop /> : <MdPlayCircleFilled />}\n               </button>\n            </div>\n            <div className=\"bright-control\">\n               <button onClick={() => dispatch(toggleBrightness())}>\n                  {brightness ? (\n                     <MdBrightnessHigh fontSize=\"1.1rem\" />\n                  ) : (\n                     <MdBrightnessLow fontSize=\"1.1rem\" />\n                  )}\n               </button>\n            </div>\n            <div className=\"zoom-control\">\n               <button\n                  type=\"button\"\n                  onClick={() => dispatch(setZoom(snapNum(zoom - 1)))}\n               >\n                  <MdZoomOut fontSize=\"1.2rem\" />\n               </button>\n               <button\n                  type=\"button\"\n                  onClick={() => dispatch(setZoom(snapNum(zoom + 1)))}\n               >\n                  <MdZoomIn fontSize=\"1.2rem\" />\n               </button>\n            </div>\n         </nav>\n      </header>\n   );\n};\n\nexport default MangaHeader;\n","import { useEffect } from 'react';\r\nimport { useSearchParam } from 'react-use';\r\nimport { ProgressBar } from 'scrolling-based-progressbar';\r\nimport MangaView from './MangaView';\r\nimport MangaHeader from './MangaHeader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\nimport { useSelector } from '../store';\r\n// import classNames from 'classnames';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport Loading from './sub-components/Loading';\r\n\r\nconst Manga = () => {\r\n   const mangaID = useSearchParam('id') || '';\r\n   const {\r\n      data: manga,\r\n      isLoading: loading,\r\n      error,\r\n      refetch,\r\n      isFetching,\r\n      isError,\r\n   } = useGetMangaQuery(Number(mangaID));\r\n   const controls = useSelector((state) => state.controls);\r\n   const widthValue = (controls.zoom / 10 + 0.5) * 700;\r\n   const styles = StyleSheet.create({\r\n      main: {\r\n         filter: controls.brightness ? 'brightness(100%)' : 'brightness(60%)',\r\n         maxWidth: `${widthValue}px`,\r\n         transition: '0.3s',\r\n      },\r\n   });\r\n   useEffect(() => {\r\n      if (loading) {\r\n         document.title = 'Loading...';\r\n      } else {\r\n         if (manga) {\r\n            document.title = manga?.name;\r\n         }\r\n      }\r\n   });\r\n\r\n   useEffect(() => {\r\n      window.scroll({\r\n         top: 0,\r\n         left: 0,\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"manga-container\">\r\n         {loading && <Loading />}\r\n         <ErrorBlock\r\n            hasErrors={isError}\r\n            errors={error}\r\n            retry={refetch}\r\n            isFetching={isFetching}\r\n         >\r\n            <div className=\"wrapper\">\r\n               {!loading && (\r\n                  <ProgressBar\r\n                     height=\"5px\"\r\n                     bgColor=\"#1c2122\"\r\n                     top=\"30px\"\r\n                     color=\"#50d8d7\"\r\n                  />\r\n               )}\r\n               <MangaHeader manga={manga} />\r\n               <div className={css(styles.main)} id=\"viewer\">\r\n                  {!loading &&\r\n                     manga?.data?.map((d, k: number) => (\r\n                        <MangaView key={k} panelImg={d} />\r\n                     ))}\r\n               </div>\r\n            </div>\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import { Link } from 'react-router-dom'\nimport styles from '../../style.module.scss'\n\nconst NotFound = () => (\n  <div className={styles.NotFoundBlock}>\n    <h1>404 Not Found</h1>\n    <code className={styles.NotFoundCodeBlock}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={styles.GoHomeLink} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './components/Main';\nimport Manga from './components/Manga';\nimport NotFound from './components/sub-components/404';\nimport './stylesheets/App.scss';\n\nconst App = () => {\n   return (\n      <Switch>\n         <Route exact path=\"/\" component={Main} />\n         <Route path=\"/manga\" component={Manga} />\n         <Route component={NotFound} />\n      </Switch>\n   );\n};\n\nexport default App;\n","import { FaHeart } from 'react-icons/fa';\nimport styles from './style.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.p_overflow}>\n        Thanks for Reading my manga reader <FaHeart fontSize=\"1.2rem\" />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n   BrowserRouter as Router,\n   Link,\n   useLocation,\n   useHistory,\n} from 'react-router-dom';\nimport store from './store';\nimport { FaAngleUp } from 'react-icons/fa';\nimport App from './App';\nimport styles from './style.module.scss';\nimport './stylesheets/index.scss';\nimport Footer from './Footer';\n\nconst ToTopComponent: React.FC = () => {\n   const location = useLocation();\n   const history = useHistory();\n   // console.log(location.pathname);\n   return (\n      <div className={styles.StickyBar}>\n         <button\n            onClick={() =>\n               window.scroll({\n                  behavior: 'smooth',\n                  top: 0,\n                  left: 0,\n               })\n            }\n         >\n            <FaAngleUp fontSize=\"3rem\" />\n         </button>\n         {location.pathname.trim() !== '/' && (\n            <button onClick={() => history.goBack()}>Go Back</button>\n         )}\n      </div>\n   );\n};\n\nReactDOM.render(\n   <Router>\n      <Provider store={store}>\n         <App />\n         <ToTopComponent />\n         <Footer />\n      </Provider>\n   </Router>,\n   document.querySelector('#container')\n);\n"],"sourceRoot":""}