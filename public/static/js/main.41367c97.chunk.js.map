{"version":3,"sources":["style.module.scss","slices/ControlSlice.ts","slices/MangaApi.ts","store.ts","components/sub-components/ReaderItem.tsx","components/sub-components/Loading.tsx","components/Reader.tsx","components/sub-components/ErrorBlock.tsx","components/Main.tsx","img/404.jpg","components/MangaView.tsx","components/MangaHeader.tsx","components/Manga.tsx","components/sub-components/404.tsx","App.tsx","Footer.tsx","index.tsx"],"names":["module","exports","ControlSlice","createSlice","initialState","blur","zoom","page","current","limit","brightness","search","refresh","_updateCovers","name","reducers","setZoom","state","action","payload","setBrightness","setSearch","clearSearch","toggleBlur","toggleRefresh","toggleCpvers","setPage","Object","assign","gotoPage","actions","ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","url","params","getManga","id","q","useAllMangasQuery","useGetMangaQuery","useSearchQuery","useLazySearchQuery","store","useLazyAllMangasQuery","useLazyGetMangaQuery","usePrefetch","configureStore","reducer","controls","ControlReducer","middleware","getDefMid","concat","useSelector","useReduxSelector","useDispatch","useReduxDispatch","ReaderItem","props","item","isBlur","className","title","to","classNames","src","cover","undefined","Loading","styles","loading_style","Navigation","history","useHistory","pushPage","currentParams","QueryString","parse","location","slice","push","stringify","_","merge","disabled","isUndefined","first","onClick","next","prev","last","Reader","loading","data","classname","map","ErrorBlock","children","hasErrors","errors","retry","isFetching","console","log","errorBlock","retryBtn","style","cursor","errorMsg","message","originalStatus","error","SearchComponent","backgroundImage","chunk","split","e","i","join","SearchBar","searchQuery","dispatch","type","placeholder","onChange","target","value","autoComplete","isSuccess","length","manga","Main","mangas","useEffect","total","header_flex","refetch","refresh_btn","fontSize","checked","isError","items","MangaView","panelImg","path","alt","errorImg","background","height","MangaHeader","zoomValue","brightVal","contentEditable","Manga","mangaID","useSearchParam","Number","isLoading","widthValue","StyleSheet","create","main","filter","maxWidth","transition","document","window","scroll","top","left","Boolean","bgColor","color","css","d","k","NotFound","NotFoundBlock","NotFoundCodeBlock","GoHomeLink","App","exact","component","Footer","p_overflow","ToTopComponent","TopComponent","behavior","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.41367c97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_btn\":\"style_scroll_btn__2DVon\",\"center\":\"style_center__2ktxo\",\"header\":\"style_header__QLGaS\",\"flex_column\":\"style_flex_column__2GipV\",\"transitionize\":\"style_transitionize__2Cutg\",\"NotFoundBlock\":\"style_NotFoundBlock__3nBZt\",\"NotFoundCodeBlock\":\"style_NotFoundCodeBlock__3eTYR\",\"GoHomeLink\":\"style_GoHomeLink__FUFnD\",\"errorMsg\":\"style_errorMsg__3EXXt\",\"errorBlock\":\"style_errorBlock__2rrBe\",\"retryBtn\":\"style_retryBtn__obQzX\",\"p_overflow\":\"style_p_overflow__2lbNJ\",\"loading_style\":\"style_loading_style__Q5HdP\",\"header_flex\":\"style_header_flex__BGuEN\",\"logo\":\"style_logo__1aLeU\",\"refresh_btn\":\"style_refresh_btn__3OP8f\",\"TopComponent\":\"style_TopComponent__U8fwL\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\ntype PageProps = {\n   current: number;\n   prev: number;\n   next: number;\n   first: number;\n   last: number;\n   total: number;\n};\n\ninterface ControlState {\n   zoom: number;\n   brightness: number;\n   search: string;\n   blur: boolean;\n   page: PageProps;\n   limit: number;\n   refresh: boolean;\n   _updateCovers: boolean;\n}\n\nconst initialState = {\n   blur: true,\n   zoom: 5,\n   page: {\n      current: 0,\n   },\n   limit: 10,\n   brightness: 100,\n   search: '',\n   refresh: false,\n   _updateCovers: false,\n} as ControlState;\n\nconst ControlSlice = createSlice({\n   initialState,\n   name: 'control',\n   reducers: {\n      setZoom(state, action: PayloadAction<number>) {\n         state.zoom = action.payload;\n      },\n      setBrightness(state, action: PayloadAction<number>) {\n         state.brightness = action.payload;\n      },\n      setSearch(state, action: PayloadAction<string>) {\n         state.search = action.payload;\n      },\n      clearSearch(state) {\n         state.search = '';\n      },\n      toggleBlur(state) {\n         state.blur = !state.blur;\n      },\n      toggleRefresh(state) {\n         state.refresh = !state.refresh;\n      },\n      toggleCpvers(state) {\n         state._updateCovers = !state._updateCovers;\n      },\n      setPage(state, action: PayloadAction<Partial<PageProps>>) {\n         Object.assign(state.page, action.payload);\n      },\n      gotoPage(\n         state,\n         action: PayloadAction<Exclude<keyof PageProps, 'total' | 'current'>>\n      ) {\n         state.page.current = state.page[action.payload];\n      },\n   },\n});\n\nexport const {\n   setZoom,\n   setBrightness,\n   setSearch,\n   clearSearch,\n   toggleBlur,\n   toggleCpvers,\n   toggleRefresh,\n   setPage,\n   gotoPage,\n} = ControlSlice.actions;\n\nexport default ControlSlice.reducer;\n","import {\n   BaseQueryFn,\n   createApi,\n   FetchArgs,\n   fetchBaseQuery,\n   FetchBaseQueryError,\n   FetchBaseQueryMeta,\n} from '@reduxjs/toolkit/query/react';\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\nimport _ from 'lodash';\nimport qs from 'qs';\nimport { Manga, SearchResult, MangasResult } from '../../../src/types';\n\ninterface MangasQuery {\n   offset?: number;\n   limit?: number;\n   order?: any;\n   sort?: string | string[];\n   refresh?: any;\n   _updateCovers?: any;\n   page?: number;\n}\n\ninterface Meta {\n   nextPage?: {\n      limit: number;\n      page: number;\n   };\n   prevPage?: {\n      limit: number;\n      page: number;\n   };\n   firstPage?: {\n      limit: number;\n      page: number;\n   };\n   lastPage?: {\n      limit: number;\n      page: number;\n   };\n}\n\nconst ApiSlice = createApi({\n   reducerPath: 'MangaApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api',\n   }),\n   endpoints: (builder) => ({\n      allMangas: builder.query<MangasResult, MangasQuery | void>({\n         query(opts) {\n            return {\n               url: '/mangas',\n               params: opts || {\n                  page: 0,\n                  limit: 10,\n               },\n            };\n         },\n      }),\n      getManga: builder.query<Manga, number>({\n         query(id) {\n            return `/manga/${id}`;\n         },\n      }),\n      search: builder.query<SearchResult[], string>({\n         query(q) {\n            return `/search?q=${q || ''}`;\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useAllMangasQuery,\n   useGetMangaQuery,\n   useLazySearchQuery,\n   useSearchQuery,\n   useLazyAllMangasQuery,\n   useLazyGetMangaQuery,\n   usePrefetch,\n} = ApiSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n   useDispatch as useReduxDispatch,\n   useSelector as useReduxSelector,\n   TypedUseSelectorHook,\n} from 'react-redux';\nimport ControlReducer from './slices/ControlSlice';\nimport ApiSlice from './slices/MangaApi';\n\nconst store = configureStore({\n   reducer: {\n      controls: ControlReducer,\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\n   },\n   middleware: (getDefMid) => getDefMid().concat(ApiSlice.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\nexport default store;\n","/* eslint-disable jsx-a11y/alt-text */\nimport classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from '../../store';\nimport { ReaderItemProps } from '../props';\n\nconst ReaderItem: FC<ReaderItemProps> = (props) => {\n   const { item } = props;\n   const isBlur = useSelector((state) => state.controls.blur);\n\n   return (\n      <Link className=\"flex-item\" title={item.name} to={`/manga?id=${item.id}`}>\n         {true ? (\n            <img\n               className={classNames('bg-img', isBlur && 'blur-img')}\n               src={item.cover || undefined}\n            />\n         ) : (\n            <div\n               className=\"bg-img\"\n               style={{\n                  filter: 'none',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}\n            >\n               Loading...\n            </div>\n         )}\n         <div className=\"description\">\n            <p>{item.name}</p>\n         </div>\n      </Link>\n   );\n};\n\nexport default ReaderItem;\n","import { FC } from 'react';\nimport styles from '../../style.module.scss';\n\nconst Loading: FC = () => (\n   <div className={styles.loading_style}>\n      <h3>\n         <div className=\"loading-animation\">Loading...</div>\n      </h3>\n   </div>\n);\n\nexport default Loading;\n","/* eslint-disable no-script-url */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/alt-text */\nimport ReaderItem from './sub-components/ReaderItem';\nimport classname from 'classnames';\nimport {\n   FaAngleLeft,\n   FaAngleRight,\n   FaAngleDoubleLeft,\n   FaAngleDoubleRight,\n} from 'react-icons/fa';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _ from 'lodash';\nimport { FC } from 'react';\nimport { ReaderProps } from './props';\nimport Loading from './sub-components/Loading';\nimport { useSelector } from '../store';\nimport QueryString from 'qs';\nimport { current } from '@reduxjs/toolkit';\n\nconst Navigation: FC = (props) => {\n   const page = useSelector((state) => state.controls.page);\n   const history = useHistory();\n   const pushPage = (page: any) => {\n      const currentParams = QueryString.parse(history.location.search.slice(1));\n      history.push({\n         search:\n            '?' +\n            QueryString.stringify(\n               _.merge(currentParams, {\n                  page,\n               })\n            ),\n      });\n   };\n   return (\n      <div className=\"nav\">\n         <button\n            disabled={_.isUndefined(page.first) || page.current === page.first}\n            onClick={() => pushPage(page.first)}\n         >\n            <FaAngleDoubleLeft />\n         </button>\n         <button\n            disabled={_.isUndefined(page.next) || page.current === page.first}\n            onClick={() => pushPage(page.prev)}\n         >\n            <FaAngleLeft />\n         </button>\n         <button\n            disabled={_.isUndefined(page.next) || page.current === page.last}\n            onClick={() => pushPage(page.next)}\n         >\n            <FaAngleRight />\n         </button>\n         <button\n            disabled={_.isUndefined(page.last) || page.current === page.last}\n            onClick={() => pushPage(page.last)}\n         >\n            <FaAngleDoubleRight />\n         </button>\n      </div>\n   );\n};\n\nconst Reader: FC<ReaderProps> = (props) => {\n   return (\n      <div className=\"main-reader\">\n         <Navigation />\n         <div className=\"main-reader-box\">\n            {!props.loading && props.data ? (\n               <div className={classname('main-reader-flex', 'current')}>\n                  {props.data?.map((item) => (\n                     <ReaderItem key={item.id} item={item} />\n                  ))}\n               </div>\n            ) : (\n               <Loading />\n            )}\n         </div>\n      </div>\n   );\n};\n\nexport default Reader;\n","import { FC } from 'react';\nimport styles from '../../style.module.scss';\nimport { ErrorProps } from '../props';\n\nconst ErrorBlock: FC<ErrorProps> = ({\n   children,\n   hasErrors,\n   errors,\n   retry,\n   isFetching,\n}) => {\n   if (hasErrors) {\n      console.log(errors);\n      return (\n         <div className={styles.errorBlock}>\n            <h3>Something went wrong...</h3>\n            <button\n               className={styles.retryBtn}\n               onClick={() => retry()}\n               style={{ cursor: isFetching ? 'progress' : 'pointer' }}\n            >\n               {isFetching ? 'Retrying...' : 'Retry?'}\n            </button>\n            <code className={styles.errorMsg}>\n               {errors?.message || errors?.originalStatus === 404\n                  ? 'Connection to server cannot be reached.'\n                  : errors.error}\n            </code>\n         </div>\n      );\n   }\n   return <>{children}</>;\n};\n\nexport default ErrorBlock;\n","import { Link } from 'react-router-dom';\r\nimport { MdRefresh } from 'react-icons/md';\r\nimport { FC } from 'react';\r\nimport Reader from './Reader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport { useState, useEffect, ChangeEventHandler } from 'react';\r\nimport styles from '../style.module.scss';\r\nimport {\r\n   useAllMangasQuery,\r\n   useLazyAllMangasQuery,\r\n   useSearchQuery,\r\n} from '../slices/MangaApi';\r\nimport { useDispatch, useSelector } from '../store';\r\nimport {\r\n   clearSearch,\r\n   setPage,\r\n   setSearch,\r\n   toggleBlur,\r\n} from '../slices/ControlSlice';\r\nimport { SearchBarProps } from './props';\r\nimport _ from 'lodash';\r\nimport { SearchResult } from '../../../src/types';\r\nimport classNames from 'classnames';\r\n\r\nconst SearchComponent: FC<SearchResult> = (props) => (\r\n   <Link\r\n      to={`/manga?id=${props.item.id}`}\r\n      className=\"search-item\"\r\n      title={props.item.name}\r\n   >\r\n      <div\r\n         className=\"cover-img\"\r\n         style={{\r\n            backgroundImage: `url('${props.item.cover}')`,\r\n         }}\r\n      ></div>\r\n      <div>\r\n         {_.chunk(props.item.name.split(' '), 8).map((e, i) => (\r\n            <div key={i}>{e.join(' ')}</div>\r\n         ))}\r\n         ...\r\n      </div>\r\n   </Link>\r\n);\r\n\r\nconst SearchBar: FC<SearchBarProps> = (props) => {\r\n   const searchQuery = useSelector((state) => state.controls.search);\r\n   const dispatch = useDispatch();\r\n   const handleSearchChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n      if (!e.target.value) {\r\n         dispatch(clearSearch());\r\n      } else {\r\n         dispatch(setSearch(e.target.value));\r\n      }\r\n   };\r\n   const search = useSearchQuery(searchQuery);\r\n   return (\r\n      <div className=\"search-bar\">\r\n         <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search...\"\r\n            onChange={handleSearchChange}\r\n            autoComplete=\"off\"\r\n         />\r\n         {search.isSuccess && search.data.length > 0 && (\r\n            <div className=\"search-list\">\r\n               {search.data.map((manga) => (\r\n                  <SearchComponent {...manga} />\r\n               ))}\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst Main = () => {\r\n   const { page, limit } = useSelector((state) => state.controls);\r\n   const isBlur = useSelector((state) => state.controls.blur);\r\n   const mangas = useAllMangasQuery({\r\n      page: page.current,\r\n      limit,\r\n   });\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(\r\n         setPage({\r\n            current: 0,\r\n            next: mangas.data?.next?.page,\r\n            prev: mangas.data?.prev?.page,\r\n            last: mangas.data?.last?.page,\r\n            first: mangas.data?.first?.page,\r\n            total: mangas.data?.total,\r\n         })\r\n      );\r\n   }, [mangas, dispatch, setPage]);\r\n\r\n   return (\r\n      <div id=\"main\">\r\n         <div className={styles.header_flex}>\r\n            <h1 className=\"logo\">\r\n               <Link to=\"/\">\r\n                  <div>Reader</div>\r\n               </Link>\r\n            </h1>\r\n            <div className=\"btn-flex\">\r\n               <button\r\n                  onClick={() => mangas.refetch()}\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <div>Refresh</div>\r\n               </button>\r\n               <button\r\n                  onClick={() => mangas.refetch()}\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <div>Covers</div>\r\n               </button>\r\n               <button\r\n                  onClick={() => dispatch(toggleBlur())}\r\n                  className={classNames('is-blur-check', styles.refresh_btn)}\r\n               >\r\n                  <input\r\n                     type=\"checkbox\"\r\n                     checked={isBlur}\r\n                     onChange={() => dispatch(toggleBlur())}\r\n                  />\r\n                  <div>Blur</div>\r\n               </button>\r\n            </div>\r\n         </div>\r\n         <SearchBar />\r\n         <ErrorBlock\r\n            retry={() => mangas.refetch()}\r\n            hasErrors={mangas.isError}\r\n            errors={mangas.error}\r\n            isFetching={mangas.isFetching}\r\n         >\r\n            <Reader\r\n               total={mangas?.data?.items.length}\r\n               data={mangas?.data?.items}\r\n               loading={mangas.isFetching}\r\n               refetch={() => mangas.refetch()}\r\n            />\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/404.6a579c40.jpg\";","import { FC } from 'react';\nimport Image from 'react-cool-img';\nimport errorImg from '../img/404.jpg';\nimport { MangaViewProps } from './props';\n\nconst MangaView: FC<MangaViewProps> = ({ panelImg }) => (\n   <div className=\"panel\">\n      <Image\n         src={`/${panelImg.path}`}\n         alt={panelImg.name}\n         error={errorImg}\n         style={!panelImg ? { background: '#444', height: '500px' } : {}}\n      />\n   </div>\n);\n\nexport default MangaView;\n","import { FC } from 'react';\nimport { FaPlus, FaMinus, FaSun, FaLightbulb } from 'react-icons/fa';\nimport { setBrightness, setZoom } from '../slices/ControlSlice';\nimport { useDispatch } from '../store';\nimport { MangaHeaderProps } from './props';\n// import styles from '../css_modules/Manga.module.scss';\n\nconst MangaHeader: FC<MangaHeaderProps> = ({\n   manga,\n   zoomValue = 5,\n   brightVal = 100,\n}) => {\n   const dispatch = useDispatch();\n   return (\n      <header>\n         <h2 className=\"logo\">{manga?.name || '...'}</h2>\n         <nav>\n            <div className=\"bright-control\">\n               <button>\n                  <FaLightbulb fontSize=\"1.1rem\" />\n               </button>\n            </div>\n            <div className=\"zoom-control\">\n               <button\n                  type=\"button\"\n                  onClick={() =>\n                     dispatch(setZoom(zoomValue > 1 ? zoomValue - 1 : 1))\n                  }\n               >\n                  <FaMinus />\n               </button>\n               <input type=\"text\" value={zoomValue} contentEditable=\"false\" />\n               <button\n                  type=\"button\"\n                  onClick={() =>\n                     dispatch(setZoom(zoomValue < 10 ? zoomValue + 1 : 10))\n                  }\n               >\n                  <FaPlus />\n               </button>\n            </div>\n         </nav>\n      </header>\n   );\n};\n\nexport default MangaHeader;\n","import { useEffect } from 'react';\r\nimport { useSearchParam } from 'react-use';\r\nimport { ProgressBar } from 'scrolling-based-progressbar';\r\nimport MangaView from './MangaView';\r\nimport MangaHeader from './MangaHeader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\nimport { useSelector } from '../store';\r\n// import classNames from 'classnames';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport Loading from './sub-components/Loading';\r\n\r\nconst Manga = () => {\r\n   const mangaID = useSearchParam('id') || '';\r\n   const {\r\n      data: manga,\r\n      isLoading: loading,\r\n      error,\r\n      refetch,\r\n      isFetching,\r\n   } = useGetMangaQuery(Number(mangaID));\r\n   const controls = useSelector((state) => state.controls);\r\n   const widthValue = (controls.zoom / 10 + 0.5) * 700;\r\n   const styles = StyleSheet.create({\r\n      main: {\r\n         filter: `brightness(${controls.brightness}%)`,\r\n         maxWidth: `${widthValue}px`,\r\n         transition: '0.3s',\r\n      },\r\n   });\r\n   useEffect(() => {\r\n      if (loading) {\r\n         document.title = 'Loading...';\r\n      } else {\r\n         if (manga) {\r\n            document.title = manga?.name;\r\n         }\r\n      }\r\n   });\r\n\r\n   useEffect(() => {\r\n      window.scroll({\r\n         top: 0,\r\n         left: 0,\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         {loading && <Loading />}\r\n         <ErrorBlock\r\n            hasErrors={Boolean(error)}\r\n            errors={error}\r\n            retry={refetch}\r\n            isFetching={isFetching}\r\n         >\r\n            <div className=\"wrapper\">\r\n               {!loading && (\r\n                  <ProgressBar\r\n                     height=\"5px\"\r\n                     bgColor=\"#1c2122\"\r\n                     top=\"30px\"\r\n                     color=\"#50d8d7\"\r\n                  />\r\n               )}\r\n               <MangaHeader\r\n                  manga={manga}\r\n                  zoomValue={controls.zoom}\r\n                  brightVal={controls.brightness}\r\n               />\r\n               <div className={css(styles.main)} id=\"viewer\">\r\n                  {!loading &&\r\n                     manga?.data?.map((d, k: number) => (\r\n                        <MangaView key={k} panelImg={d} />\r\n                     ))}\r\n               </div>\r\n            </div>\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import { Link } from 'react-router-dom'\nimport styles from '../../style.module.scss'\n\nconst NotFound = () => (\n  <div className={styles.NotFoundBlock}>\n    <h1>404 Not Found</h1>\n    <code className={styles.NotFoundCodeBlock}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={styles.GoHomeLink} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSearchParam } from 'react-use';\nimport Main from './components/Main';\nimport Manga from './components/Manga';\nimport NotFound from './components/sub-components/404';\nimport { setPage } from './slices/ControlSlice';\nimport { useDispatch } from './store';\nimport './stylesheets/App.scss';\n\nconst App = () => {\n   const page = useSearchParam('page');\n   const dispatch = useDispatch();\n   useEffect(() => {\n      if (page) {\n         dispatch(\n            setPage({\n               current: Number(page),\n            })\n         );\n      }\n   }, [page]);\n   return (\n      <Switch>\n         <Route exact path=\"/\" component={Main} />\n         <Route path=\"/manga\" component={Manga} />\n         <Route component={NotFound} />\n      </Switch>\n   );\n};\n\nexport default App;\n","import { FaHeart } from 'react-icons/fa';\nimport styles from './style.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.p_overflow}>\n        Thanks for Reading my manga reader <FaHeart fontSize=\"1.2rem\" />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport { FaChevronUp } from 'react-icons/fa';\nimport App from './App';\nimport styles from './style.module.scss';\nimport './stylesheets/index.scss';\nimport Footer from './Footer';\n\nconst ToTopComponent: React.FC = () => {\n  return (\n    <button\n      className={styles.TopComponent}\n      onClick={() =>\n        window.scroll({\n          behavior: 'smooth',\n          top: 0,\n          left: 0,\n        })\n      }>\n      <FaChevronUp fontSize=\"2rem\" />\n    </button>\n  );\n};\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n      <ToTopComponent />\n      <Footer />\n    </Provider>\n  </>,\n  document.querySelector('#container')\n);\n"],"sourceRoot":""}