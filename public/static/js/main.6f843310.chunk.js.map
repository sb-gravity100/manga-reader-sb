{"version":3,"sources":["main/css_modules/Manga.module.scss","main/css_modules/Footer.module.scss","main/components/MangaView.js","main/components/MangaHeader.js","main/components/sub-components/ErrorBlock.js","main/data/queries.js","main/components/Manga.js","main/components/sub-components/TableComponent.js","main/components/Reader.js","main/components/Main.js","main/components/sub-components/404.js","main/App.js","main/Footer.js","index.js","main/css_modules/main.module.scss","main/css_modules/reader.module.scss","main/css_modules/ErrorBlock.module.scss"],"names":["module","exports","MangaView","panelImg","className","src","path","alt","name","MangaHeader","manga","zoomValue","brightVal","setBright","setZoomVal","scrollDown","onClick","styles","scroll_btn","type","min","max","onChange","e","target","value","defaultProps","data","ErrorBlock","children","hasErrors","errors","retry","status","loading","console","log","errorBlock","retryBtn","style","cursor","errorMsg","message","GET_MANGAS","gql","GET_MANGA","scroll","Scroll","ScrollEvents","Manga","useState","loading_props","text","useSpring","from","opacity","loop","reverse","location","useLocation","mangaID","URLSearchParams","search","get","useQuery","variables","id","error","refetch","viewerStyles","StyleSheet","create","brightnessAdjust","filter","widthAdjust","maxWidth","transition","useEffect","scrollEvent","register","to","el","scrollToTop","height","top","color","bgColor","scrollToBottom","duration","d","delay","smooth","css","flexGrow","loading_style","span","map","k","TableComponents","props","_rows","hGs","columns","useMemo","Header","accessor","sortDescFirst","Cell","replace","toFixed","Date","toDateString","tableInstance","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","filterValue","headerGroup","getHeaderGroupProps","headers","column","classNames","flex_column","getHeaderProps","getSortByToggleProps","title","sort_logo","render","isSorted","isSortedDesc","sort_down","sort_up","sort_none","fontSize","transitionize","row","getRowProps","cells","cell","getCellProps","original","Reader","Main","setFilterValue","mangas","partialRefetch","notifyOnNetworkStatusChange","reset","header_flex","refresh_btn","search_bar","placeholder","networkStatus","list","NotFoundBlock","width","display","flexDirection","alignItems","justifyContent","NotFoundCodeBlock","padding","backgroundColor","fontFamily","GoHomeLink","content","borderBottom","NotFound","App","exact","component","Footer","ref","useRef","next","a","translateY","rotateZ","config","tension","translateX","mass","current","p_overflow","apollo_client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","StrictMode","client","document","querySelector"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,WAAa,4B,oBCA/BD,EAAOC,QAAU,CAAC,WAAa,6B,0LCWhBC,EATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAU,QAAf,SACE,cAAC,gBAAD,CACEC,IAAG,WAAMF,EAASG,MAClBC,IAAKJ,EAASK,U,0CCJdC,EAAc,SAAC,GAAD,IACjBC,EADiB,EACjBA,MACAC,EAFiB,EAEjBA,UACAC,EAHiB,EAGjBA,UACAC,EAJiB,EAIjBA,UACAC,EALiB,EAKjBA,WACAC,EANiB,EAMjBA,WANiB,OAQjB,mCACG,oBAAIX,UAAU,OAAd,SAAsBM,EAAQA,EAAMF,KAAO,QAC3C,gCACG,8BACG,wBAAQQ,QAASD,EAAYX,UAAWa,IAAOC,WAA/C,SACG,cAAC,IAAD,QAGN,sBAAKd,UAAU,iBAAf,UACG,+BAAOQ,IACP,uBACGO,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOC,QAClCA,MAAOb,OAGb,sBAAKR,UAAU,eAAf,UACG,wBACGe,KAAK,SACLH,QAAS,kBAAMF,EAAWH,EAAY,EAAIA,EAAY,EAAI,IAF7D,SAGG,cAAC,IAAD,MAEH,uBACGQ,KAAK,OACLG,SAAU,SAAAC,GAAC,OACPA,EAAEC,OAAOC,OAAS,GAAOF,EAAEC,OAAOC,MAAQ,GAC3CX,EAAWS,EAAEC,OAAOC,QAEvBA,MAAOd,IAEV,wBACGQ,KAAK,SACLH,QAAS,kBAAMF,EAAWH,EAAY,GAAKA,EAAY,EAAI,KAF9D,SAGG,cAAC,IAAD,gBAOfF,EAAYiB,aAAe,CACxBhB,MAAO,CACJF,KAAM,GACNmB,KAAM,KAIGlB,I,IAAAA,I,iBCnCAmB,EAtBI,SAAC,GAEb,IADNC,EACK,EADLA,SAAUC,EACL,EADKA,UAAWC,EAChB,EADgBA,OAAQC,EACxB,EADwBA,MAAgBC,GACxC,EAD+BC,QAC/B,EADwCD,QAE5C,OAAIH,GACFK,QAAQC,IAAIN,GAEV,sBAAK1B,UAAWa,IAAOoB,WAAvB,UACE,yDACA,wBACEjC,UAAWa,IAAOqB,SAClBtB,QAAS,kBAAMgB,KACfO,MAAO,CAAEC,OAAmB,IAAXP,EAAe,WAAa,WAH/C,SAKc,IAAXA,EAAe,cAAgB,WAElC,sBAAM7B,UAAWa,IAAOwB,SAAxB,SAAmCV,EAAOW,cAIzCb,G,QCpBIc,EAAaC,cAAH,0OAeVC,EAAYD,cAAH,wP,iBCJhBE,EAASC,gBACTC,EAAeD,SAgGNE,EA9FD,WAAO,IAAD,EACeC,mBAAS,GADxB,mBACVvC,EADU,KACCG,EADD,OAEcoC,mBAAS,KAFvB,mBAEVtC,EAFU,KAECC,EAFD,KAGXsC,EAAgB,CACnBC,KAAMC,oBAAU,CACbC,KAAM,CACHC,QAAS,GAEZA,QAAS,EACTC,KAAM,CAAEC,SAAS,MAGjBC,EAAWC,cACXC,EAAU,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,MAbxC,EAcyBC,mBAASnB,EAAW,CAC3DoB,UAAW,CACRC,GAAIN,KAFF1B,EAdS,EAcTA,QAASP,EAdA,EAcAA,KAAMwC,EAdN,EAcMA,MAAOC,EAdb,EAcaA,QAcxBC,EAAeC,IAAWC,OAAO,CACpCC,iBAAkB,CACfC,OAAO,cAAD,OAAgB7D,EAAhB,OAET8D,YAAa,CACVC,SAAS,GAAD,OAA8B,KAAxBhE,EAAY,GAAK,IAAvB,MACRiE,WAAY,UAclB,OAVAC,qBAAU,WACP7B,EAAa8B,YAAYC,SAAS,SAAS,SAACC,EAAIC,GAC7C9C,QAAQC,IAAI,QAAS4C,EAAIC,MAE5BjC,EAAa8B,YAAYC,SAAS,OAAO,SAACC,EAAIC,GAC3C9C,QAAQC,IAAI,MAAO4C,EAAIC,MAE1BnC,EAAOoC,iBAIP,8BACG,cAAC,EAAD,CAAYpD,UAAWqC,IAAS,EAAMpC,OAAQoC,EAAOnC,MAAOoC,EAA5D,SACG,sBAAKhE,UAAU,UAAf,UACG,cAAC,IAAD,CACG+E,OAAO,MACPC,IAAI,OACJC,MAAM,OACNC,QAAQ,SAEX,cAAC,EAAD,CACG5E,OAAQwB,GAAWP,EAAKjB,MACxBC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,WAAYA,EACZC,WA7CI,WAChB+B,EAAOyC,eAAe,CACnBC,SAAU,SAAAC,GACP,OAAW,IAAJA,GAEVC,MAAO,IACPC,OAAQ,cAyCF,qBACGvF,UAAWwF,YACRvB,EAAaG,iBACbH,EAAaK,aAEhBR,GAAG,SALN,SAMIhC,EACE,qBACGK,MAAO,CAAEsD,SAAU,GACnBzF,UAAWa,IAAO6E,cAFrB,SAGG,6BACG,cAAC,WAAKC,KAAN,CAAWxD,MAAOY,EAAcC,KAAhC,4BAMNzB,EAAKjB,MAAMiB,KAAKqE,KAAI,SAACP,EAAGQ,GAAJ,OACjB,cAAC,EAAD,CAAmB9F,SAAUsF,GAAbQ,gB,mECkBzBC,EA9GS,SAAAC,GACrB,IAiEgBC,EA9BGC,EAnCbC,EAAUC,mBACb,iBAAM,CACH,CACGC,OAAQ,OACRC,SAAU,OACVC,eAAe,EACfC,KAAM,qBAAGlF,MAAkBmF,QAAQ,cAAe,MAErD,CACGJ,OAAQ,OACRC,SAAU,OACVC,eAAe,EACfC,KAAM,gBAAGlF,EAAH,EAAGA,MAAH,iBAAmBA,EAAQ,KAASoF,QAAQ,GAA5C,QAET,CACGL,OAAQ,OACRC,SAAU,YACVE,KAAM,gBAAGlF,EAAH,EAAGA,MAAH,OAAe,IAAIqF,KAAKrF,GAAOsF,gBACrCL,eAAe,MAGrB,IAEG/E,EAAO4E,mBAAQ,kBAAMJ,EAAMxE,OAAM,IAEjCqF,EAAgBC,mBAAS,CAAEX,UAAS3E,QAAQuF,aAAYC,aAE3DC,EAMCJ,EANDI,cACAC,EAKCL,EALDK,kBACAC,EAICN,EAJDM,aACAC,EAGCP,EAHDO,KACAC,EAECR,EAFDQ,WACAC,EACCT,EADDS,UA4DH,OAJA5C,qBAAU,WACP4C,EAAU,OAAQtB,EAAMuB,eACxB,CAACvB,EAAMuB,YAAaD,IAGpB,gDAAOrH,UAAU,QAAWgH,KAA5B,cACG,qCACG,qBAAKhH,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,qBAElB,iCAhEaiG,EAgEMiB,EA/DtBjB,EAAIL,KAAI,SAAA2B,GAAW,OAChB,8CAAQA,EAAYC,uBAApB,aACID,EAAYE,QAAQ7B,KAAI,SAAA8B,GAAM,OAC5B,4CACG1H,UAAW2H,IAAWD,EAAO5D,GAAIjD,IAAO+G,cACpCF,EAAOG,eACRH,EAAOI,qBAAqB,CACzBC,MAAO,WAAaL,EAAOtB,WAJpC,aAOG,sBAAKpG,UAAWa,IAAOmH,UAAvB,UACG,oBAAIhI,UAAW0H,EAAO5D,GAAtB,SAA2B4D,EAAOO,OAAO,YACzC,8BACG,cAAC,IAAD,CACGjI,UAAW2H,IACRD,EAAOQ,SACFR,EAAOS,aACJtH,IAAOuH,UACPvH,IAAOwH,QACVxH,IAAOyH,WAEfC,SAAS,+BA2C3B,+CACGvI,UAAW2H,IAAW9G,IAAO2H,gBACzBvB,KAFP,cAnCUjB,EAsCEmB,EArCfnB,EAAMJ,KAAI,SAAA6C,GAEP,OADArB,EAAWqB,GAER,8CAAQA,EAAIC,eAAZ,aACID,EAAIE,MAAM/C,KAAI,SAAAgD,GAAI,OAChB,4CACGb,MACsB,cAAnBa,EAAKlB,OAAO5D,GACP,IAAI4C,KAAKkC,EAAKvH,OAAOsF,eACrBiC,EAAKvH,MAEbrB,UAAW4I,EAAKlB,OAAO5D,IACnB8E,EAAKC,gBAPZ,aAQG,cAAC,IAAD,CAAMjE,GAAE,oBAAegE,EAAKH,IAAIK,SAAShF,IAAzC,SACG,+BAAO8E,EAAKX,OAAO,iCC7E5Bc,EATA,SAAAhD,GACb,OAAO,cAAC,EAAD,CAAYxE,KAAMwE,EAAMxE,KAAM+F,YAAavB,EAAMuB,eCoE3C0B,EA9DF,WAAO,IAAD,EACsBlG,mBAAS,IAD/B,mBACTwE,EADS,KACI2B,EADJ,KAEVC,EAAStF,mBAASrB,EAAY,CACjC4G,gBAAgB,EAChBC,6BAA6B,IAE1BrG,EAAgB,CACnBC,KAAMC,oBAAU,CACbC,KAAM,CACHC,QAAS,GAEZA,QAAS,EACTC,KAAM,CAAEC,SAAS,GACjBgG,OAAO,KAIb,OACG,sBAAKvF,GAAG,OAAR,UACG,sBAAK9D,UAAWa,IAAOyI,YAAvB,UACG,oBAAItJ,UAAU,OAAd,SACG,cAAC,IAAD,CAAM4E,GAAG,IAAIzC,MAAO,CAAE8C,MAAO,SAA7B,SACG,6CAGN,8BACG,yBACGrE,QAAS,kBAAMsI,EAAOlF,WACtBhE,UAAWa,IAAO0I,YAFrB,UAGG,cAAC,IAAD,CAAWhB,SAAS,WACpB,mDAIT,uBACGrH,SAAU,SAAAC,GAAC,OAAI8H,EAAe9H,EAAEC,OAAOC,QACvCrB,UAAWa,IAAO2I,WAClBzI,KAAK,SACL0I,YAAY,SACZpI,MAAOiG,IAEV,cAAC,EAAD,CACGzF,OAAQqH,EAAOQ,cACf5H,QAASoH,EAAOpH,QAChBF,MAAOsH,EAAOlF,QACdtC,UAAWwH,EAAOnF,QAAS,EAC3BpC,OAAQuH,EAAOnF,MALlB,SAMKmF,EAAOpH,QAGN,qBAAK9B,UAAWa,IAAO6E,cAAvB,SACG,6BACG,cAAC,WAAKC,KAAN,CAAWxD,MAAOY,EAAcC,KAAhC,4BAJN,cAAC,EAAD,CAAQzB,KAAM2H,EAAO3H,KAAKoI,KAAMrC,YAAaA,UCvDtDzG,EAASqD,IAAWC,OAAO,CAC9ByF,cAAe,CACZC,MAAO,OACP9E,OAAQ,SACR+E,QAAS,QACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAEnBC,kBAAmB,CAChBC,QAAS,OACTC,gBAAiB,OACjBnF,MAAO,OACPsD,SAAU,SACV8B,WAAY,+BAEfC,WAAY,CACTH,QAAS,QACT,SAAU,CACPI,QAAS,GACTT,QAAS,QACTU,aAAc,kBAEjB,SAAU,CACPvF,MAAO,WAiBDwF,EAZE,kBACf,sBAAKzK,UAAWwF,YAAI3E,EAAO+I,eAA3B,UACE,+CACA,sBAAM5J,UAAWwF,YAAI3E,EAAOqJ,mBAA5B,wDAGA,cAAC,IAAD,CAAMlK,UAAWwF,YAAI3E,EAAOyJ,YAAa1F,GAAG,IAA5C,6BCvBW8F,G,OARH,kBACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACzK,KAAK,IAAI0K,UAAW5B,IACjC,cAAC,IAAD,CAAO9I,KAAK,SAAS0K,UAAW/H,IAChC,cAAC,IAAD,CAAO+H,UAAWH,S,oDC2BPI,GAjCA,WACb,IAAMC,EAAMC,iBAAO,GACbhF,EAAQ9C,oBAAU,CACtB2B,GAAG,WAAD,4BAAE,WAAMoG,GAAN,SAAAC,EAAA,sEACID,EAAK,CAAE/F,MAAO,OAAQiG,YAAa,EAAG/H,QAAS,IADnD,uBAEI6H,EAAK,CAAEG,QAAS,KAFpB,uBAGIH,EAAK,CAAEG,SAAU,KAHrB,uBAIIH,EAAK,CAAEG,QAAS,IAAKC,OAAQ,CAAEC,QAAS,OAJ5C,wBAKIL,EAAK,CAAEM,WAAY,KAAMF,OAAQ,CAAEG,KAAM,GAAIF,QAAS,OAL1D,4CAAF,mDAAC,GAOHnI,KAAM,CACJ+B,MAAO,QACPiG,WAAY,GACZ/H,QAAS,EACTgI,QAAS,EACTG,WAAY,IAEdlI,KAAM,kBAAM0H,EAAIU,UAAY,GAC5BnC,OAAO,EACP/D,MAAO,MAET,OACA,iCACE,oBAAGtF,UAAWa,IAAO4K,WAArB,+CAEG,IACD,cAAC,WAAS9F,KAAV,CAAexD,MAAO4D,EAAtB,SAA8B,cAAC,IAAD,CAASwC,SAAS,aAC/C,UCxBDmD,GAAgB,IAAIC,eAAa,CACpCC,IAAK,UACLC,MAAO,IAAIC,gBACX1L,KAAM,YAGT2L,IAAS9D,OACN,eAAC,IAAM+D,WAAP,WACG,cAAC,IAAD,UACG,cAAC,iBAAD,CAAgBC,OAAQP,GAAxB,SACG,cAAC,EAAD,QAGN,cAAC,GAAD,OAEHQ,SAASC,cAAc,gB,mBCtB1BvM,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,2B,mBCA3JD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,0BAA0B,QAAU,wBAAwB,UAAY,0BAA0B,OAAS,uBAAuB,OAAS,uBAAuB,YAAc,4BAA4B,cAAgB,gC,mBCAhSD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,WAAa,+BAA+B,SAAW,gC","file":"static/js/main.6f843310.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_btn\":\"Manga_scroll_btn__khE-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p_overflow\":\"Footer_p_overflow__1CB30\"};","import PropTypes from 'prop-types'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nconst MangaView = ({ panelImg }) => (\n  <div className=\"panel\">\n    <LazyLoadImage\n      src={`/${panelImg.path}`}\n      alt={panelImg.name}\n    />\n  </div>\n  )\n\nexport default MangaView\n","import { FaPlus, FaMinus, FaAngleDown } from 'react-icons/fa';\nimport styles from '../css_modules/Manga.module.scss';\n\nconst MangaHeader = ({\n   manga,\n   zoomValue,\n   brightVal,\n   setBright,\n   setZoomVal,\n   scrollDown\n}) => (\n   <header>\n      <h2 className=\"logo\">{manga ? manga.name : '...'}</h2>\n      <nav>\n         <div>\n            <button onClick={scrollDown} className={styles.scroll_btn}>\n               <FaAngleDown />\n            </button>\n         </div>\n         <div className=\"bright-control\">\n            <span>{brightVal}</span>\n            <input\n               type=\"range\"\n               min=\"0\"\n               max=\"100\"\n               onChange={e => setBright(e.target.value)}\n               value={brightVal}\n            />\n         </div>\n         <div className=\"zoom-control\">\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue > 1 ? zoomValue - 1 : 1)}>\n               <FaMinus />\n            </button>\n            <input\n               type=\"text\"\n               onChange={e =>\n                  (e.target.value <= 10) & (e.target.value > 0) &&\n                  setZoomVal(e.target.value)\n               }\n               value={zoomValue}\n            />\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue < 10 ? zoomValue + 1 : 10)}>\n               <FaPlus />\n            </button>\n         </div>\n      </nav>\n   </header>\n);\n\nMangaHeader.defaultProps = {\n   manga: {\n      name: '',\n      data: [],\n   },\n};\n\nexport default MangaHeader;\n","import { useState } from 'react'\nimport styles from '../../css_modules/ErrorBlock.module.scss'\n\nconst ErrorBlock = ({\n children, hasErrors, errors, retry, loading, status\n}) => {\n  if (hasErrors) {\n    console.log(hasErrors)\n    return (\n      <div className={styles.errorBlock}>\n        <h3>Something went wrong...</h3>\n        <button\n          className={styles.retryBtn}\n          onClick={() => retry()}\n          style={{ cursor: status === 4 ? 'progress' : 'pointer' }}\n        >\n          {status === 4 ? 'Retrying...' : 'Retry?'}\n        </button>\n        <code className={styles.errorMsg}>{errors.message}</code>\n      </div>\n    )\n  }\n  return children\n}\n\nexport default ErrorBlock\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_MANGAS = gql`\r\nquery AllMangas($all: Boolean = false) {\r\n  list: mangas {\r\n    id\r\n    name\r\n    pathname @include(if: $all)\r\n    createdAt\r\n    size\r\n    data @include(if: $all) {\r\n      name\r\n      path\r\n    }\r\n  }\r\n}\r\n`\r\nexport const GET_MANGA = gql`\r\nquery getManga($id: ID!, $all: Boolean = false) {\r\n   manga(id: $id) {\r\n      id\r\n      name\r\n      pathname @include(if: $all)\r\n      createdAt\r\n      size\r\n      data {\r\n         name\r\n         path\r\n      }\r\n   }\r\n}\r\n`\r\n","import { useState, useEffect } from 'react';\nimport { css, StyleSheet } from 'aphrodite';\nimport { useLocation } from 'react-router-dom';\nimport { ProgressBar } from 'scrolling-based-progressbar';\nimport { useQuery } from '@apollo/client';\nimport MangaView from './MangaView';\nimport { useSpring, animated as anim } from 'react-spring';\nimport * as Scroll from 'react-scroll';\nimport MangaHeader from './MangaHeader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport { GET_MANGA } from '../data/queries';\nimport styles from '../css_modules/main.module.scss';\n\nconst scroll = Scroll.animateScroll;\nconst ScrollEvents = Scroll.Events;\n\nconst Manga = () => {\n   const [zoomValue, setZoomVal] = useState(5);\n   const [brightVal, setBright] = useState(100);\n   const loading_props = {\n      text: useSpring({\n         from: {\n            opacity: 1,\n         },\n         opacity: 0,\n         loop: { reverse: true },\n      }),\n   };\n   const location = useLocation();\n   const mangaID = new URLSearchParams(location.search).get('id');\n   const { loading, data, error, refetch } = useQuery(GET_MANGA, {\n      variables: {\n         id: mangaID,\n      },\n   });\n   const scrollDown = () => {\n      scroll.scrollToBottom({\n         duration: d => {\n            return d * 200;\n         },\n         delay: 500,\n         smooth: 'linear'\n      });\n   };\n   const viewerStyles = StyleSheet.create({\n      brightnessAdjust: {\n         filter: `brightness(${brightVal}%)`,\n      },\n      widthAdjust: {\n         maxWidth: `${(zoomValue / 10 + 0.5) * 700}px`,\n         transition: '0.3s',\n      },\n   });\n\n   useEffect(() => {\n      ScrollEvents.scrollEvent.register('begin', (to, el) => {\n         console.log('begin', to, el);\n      });\n      ScrollEvents.scrollEvent.register('end', (to, el) => {\n         console.log('end', to, el);\n      });\n      scroll.scrollToTop();\n   });\n\n   return (\n      <div>\n         <ErrorBlock hasErrors={error && true} errors={error} retry={refetch}>\n            <div className=\"wrapper\">\n               <ProgressBar\n                  height=\"3px\"\n                  top=\"30px\"\n                  color=\"#546\"\n                  bgColor=\"#aae\"\n               />\n               <MangaHeader\n                  manga={!loading && data.manga}\n                  zoomValue={zoomValue}\n                  brightVal={brightVal}\n                  setBright={setBright}\n                  setZoomVal={setZoomVal}\n                  scrollDown={scrollDown}\n               />\n               <div\n                  className={css(\n                     viewerStyles.brightnessAdjust,\n                     viewerStyles.widthAdjust\n                  )}\n                  id=\"viewer\">\n                  {loading ? (\n                     <div\n                        style={{ flexGrow: 1 }}\n                        className={styles.loading_style}>\n                        <h3>\n                           <anim.span style={loading_props.text}>\n                              Loading...\n                           </anim.span>\n                        </h3>\n                     </div>\n                  ) : (\n                     data.manga.data.map((d, k) => (\n                        <MangaView key={k} panelImg={d} />\n                     ))\n                  )}\n               </div>\n            </div>\n         </ErrorBlock>\n      </div>\n   );\n};\n\nexport default Manga;\n","import { FaAngleDown } from 'react-icons/fa';\r\nimport { useMemo, useEffect } from 'react';\r\nimport { useTable, useFilters, useSortBy } from 'react-table';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport styles from '../../css_modules/reader.module.scss';\r\n\r\nconst TableComponents = props => {\r\n   const columns = useMemo(\r\n      () => [\r\n         {\r\n            Header: 'Name',\r\n            accessor: 'name',\r\n            sortDescFirst: true,\r\n            Cell: ({ value }) => value.replace(/[\\])}[{(_]/g, ''),\r\n         },\r\n         {\r\n            Header: 'Size',\r\n            accessor: 'size',\r\n            sortDescFirst: true,\r\n            Cell: ({ value }) => `${(value / 1000000).toFixed(2)}mb`,\r\n         },\r\n         {\r\n            Header: 'Date',\r\n            accessor: 'createdAt',\r\n            Cell: ({ value }) => new Date(value).toDateString(),\r\n            sortDescFirst: true,\r\n         },\r\n      ],\r\n      []\r\n   );\r\n   const data = useMemo(() => props.data, []);\r\n\r\n   const tableInstance = useTable({ columns, data }, useFilters, useSortBy);\r\n   const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n      setFilter,\r\n   } = tableInstance;\r\n\r\n   const mapHeaders = hGs =>\r\n      hGs.map(headerGroup => (\r\n         <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n               <th\r\n                  className={classNames(column.id, styles.flex_column)}\r\n                  {...column.getHeaderProps(\r\n                     column.getSortByToggleProps({\r\n                        title: 'Sort by ' + column.Header,\r\n                     })\r\n                  )}>\r\n                  <div className={styles.sort_logo}>\r\n                     <h4 className={column.id}>{column.render('Header')}</h4>\r\n                     <div>\r\n                        <FaAngleDown\r\n                           className={classNames(\r\n                              column.isSorted\r\n                                 ? column.isSortedDesc\r\n                                    ? styles.sort_down\r\n                                    : styles.sort_up\r\n                                 : styles.sort_none\r\n                           )}\r\n                           fontSize=\"1.2rem\"\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               </th>\r\n            ))}\r\n         </tr>\r\n      ));\r\n   const mapRows = _rows =>\r\n      _rows.map(row => {\r\n         prepareRow(row);\r\n         return (\r\n            <tr {...row.getRowProps()}>\r\n               {row.cells.map(cell => (\r\n                  <td\r\n                     title={\r\n                        cell.column.id === 'createdAt'\r\n                           ? new Date(cell.value).toDateString()\r\n                           : cell.value\r\n                     }\r\n                     className={cell.column.id}\r\n                     {...cell.getCellProps()}>\r\n                     <Link to={`/manga?id=${cell.row.original.id}`}>\r\n                        <span>{cell.render('Cell')}</span>\r\n                     </Link>\r\n                  </td>\r\n               ))}\r\n            </tr>\r\n         );\r\n      });\r\n\r\n   useEffect(() => {\r\n      setFilter('name', props.filterValue);\r\n   }, [props.filterValue, setFilter]);\r\n\r\n   return (\r\n      <table className=\"list\" {...getTableProps()}>\r\n         <colgroup>\r\n            <col className=\"col-name\" />\r\n            <col className=\"col-size\" />\r\n            <col className=\"col-createdAt\" />\r\n         </colgroup>\r\n         <thead>{mapHeaders(headerGroups)}</thead>\r\n         <tbody\r\n            className={classNames(styles.transitionize)}\r\n            {...getTableBodyProps()}>\r\n            {mapRows(rows)}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default TableComponents;\r\n","import PropTypes from 'prop-types'\nimport MangaTable from './sub-components/TableComponent'\n\nconst Reader = props => {\n  return <MangaTable data={props.data} filterValue={props.filterValue} />\n}\n\nReader.propTypes = {\n  data: PropTypes.array,\n  filterValue: PropTypes.string,\n}\n\nexport default Reader\n","import { useState } from 'react';\nimport { useSpring, animated as anim } from 'react-spring';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { MdRefresh } from 'react-icons/md';\nimport Reader from './Reader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport { GET_MANGAS } from '../data/queries';\nimport styles from '../css_modules/main.module.scss';\n\nconst Main = () => {\n   const [filterValue, setFilterValue] = useState('');\n   const mangas = useQuery(GET_MANGAS, {\n      partialRefetch: true,\n      notifyOnNetworkStatusChange: true,\n   });\n   const loading_props = {\n      text: useSpring({\n         from: {\n            opacity: 1,\n         },\n         opacity: 0,\n         loop: { reverse: true },\n         reset: true\n      }),\n   };\n\n   return (\n      <div id=\"main\">\n         <div className={styles.header_flex}>\n            <h1 className=\"logo\">\n               <Link to=\"/\" style={{ color: 'white' }}>\n                  <div>Reader</div>\n               </Link>\n            </h1>\n            <div>\n               <button\n                  onClick={() => mangas.refetch()}\n                  className={styles.refresh_btn}>\n                  <MdRefresh fontSize=\"1.2rem\" />\n                  <span>Refresh</span>\n               </button>\n            </div>\n         </div>\n         <input\n            onChange={e => setFilterValue(e.target.value)}\n            className={styles.search_bar}\n            type=\"search\"\n            placeholder=\"Filter\"\n            value={filterValue}\n         />\n         <ErrorBlock\n            status={mangas.networkStatus}\n            loading={mangas.loading}\n            retry={mangas.refetch}\n            hasErrors={mangas.error && true}\n            errors={mangas.error}>\n            {!mangas.loading ? (\n               <Reader data={mangas.data.list} filterValue={filterValue} />\n            ) : (\n               <div className={styles.loading_style}>\n                  <h3>\n                     <anim.span style={loading_props.text}>\n                        Loading...\n                     </anim.span>\n                  </h3>\n               </div>\n            )}\n         </ErrorBlock>\n      </div>\n   );\n};\nexport default Main;\n","import { css, StyleSheet } from 'aphrodite'\nimport { Link } from 'react-router-dom'\n\nconst styles = StyleSheet.create({\n   NotFoundBlock: {\n      width: '100%',\n      height: '94.5vh',\n      display: ' flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n   },\n   NotFoundCodeBlock: {\n      padding: '1rem',\n      backgroundColor: '#335',\n      color: '#eee',\n      fontSize: '1.4rem',\n      fontFamily: \"'Jetbrains Mono', monospace\",\n   },\n   GoHomeLink: {\n      padding: '.5rem',\n      ':after': {\n         content: '',\n         display: 'block',\n         borderBottom: '3px solid #889',\n      },\n      ':hover': {\n         color: '#778',\n      },\n   },\n})\n\nconst NotFound = () => (\n  <div className={css(styles.NotFoundBlock)}>\n    <h1>404 Not Found</h1>\n    <code className={css(styles.NotFoundCodeBlock)}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={css(styles.GoHomeLink)} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Manga from './components/Manga'\nimport Main from './components/Main'\nimport NotFound from './components/sub-components/404'\nimport '../stylesheets/App.scss'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route path=\"/manga\" component={Manga} />\n    <Route component={NotFound} />\n  </Switch>\n   )\n\nexport default App\n","import { FaHeart } from 'react-icons/fa'\nimport { useRef } from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport styles from './css_modules/Footer.module.scss'\n\nconst Footer = () => {\n  const ref = useRef(0)\n  const props = useSpring({\n    to: async next => {\n      await next({ color: '#afe', translateY: -2, opacity: 1 })\n      await next({ rotateZ: 30 })\n      await next({ rotateZ: -30 })\n      await next({ rotateZ: 360, config: { tension: 100 } })\n      await next({ translateX: 1200, config: { mass: 10, tension: 150 } })\n    },\n    from: {\n      color: 'white',\n      translateY: 10,\n      opacity: 0,\n      rotateZ: 0,\n      translateX: 10\n    },\n    loop: () => ref.current++ < 5,\n    reset: true,\n    delay: 500\n  })\n  return (\n  <footer>\n    <p className={styles.p_overflow} >\n      Thanks for Reading my manga reader\n      {' '}\n      <animated.span style={props} ><FaHeart fontSize=\"1.2rem\" /></animated.span>\n      {' '}\n    </p>\n  </footer>\n   )\n}\n\nexport default Footer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport App from './main/App';\nimport './stylesheets/index.scss';\nimport Footer from './main/Footer';\n\nconst apollo_client = new ApolloClient({\n   uri: '/api/ql',\n   cache: new InMemoryCache(),\n   name: 'MangaQL'\n});\n\nReactDOM.render(\n   <React.StrictMode>\n      <Router>\n         <ApolloProvider client={apollo_client} >\n            <App />\n         </ApolloProvider>\n      </Router>\n      <Footer />\n   </React.StrictMode>,\n   document.querySelector('#container')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading_style\":\"main_loading_style__1Lm1M\",\"header_flex\":\"main_header_flex__1ylRE\",\"refresh_btn\":\"main_refresh_btn__2iuFG\",\"search_bar\":\"main_search_bar__3gPIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort_logo\":\"reader_sort_logo__2FeFC\",\"sort_down\":\"reader_sort_down__3mXiQ\",\"sort_up\":\"reader_sort_up__1SwmL\",\"sort_none\":\"reader_sort_none__1JKuy\",\"center\":\"reader_center__2dnH_\",\"header\":\"reader_header__1o9hK\",\"flex_column\":\"reader_flex_column__2DQPt\",\"transitionize\":\"reader_transitionize__30Yx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"ErrorBlock_errorMsg__1O09I\",\"errorBlock\":\"ErrorBlock_errorBlock__39bVM\",\"retryBtn\":\"ErrorBlock_retryBtn__1YTZ1\"};"],"sourceRoot":""}