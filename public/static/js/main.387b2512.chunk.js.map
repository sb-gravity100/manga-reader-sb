{"version":3,"sources":["main/css_modules/TopComponent.module.scss","main/css_modules/Footer.module.scss","main/components/sub-components/ReaderItem.tsx","main/components/Reader.tsx","main/components/sub-components/ErrorBlock.tsx","types.tsx","main/components/Main.tsx","main/img/404.jpg","main/components/MangaView.tsx","main/components/MangaHeader.tsx","main/components/Manga.tsx","main/components/sub-components/404.tsx","main/App.tsx","main/Footer.tsx","apollo_client.ts","index.tsx","main/css_modules/main.module.scss","main/css_modules/ErrorBlock.module.scss","main/css_modules/404.module.scss"],"names":["module","exports","ReaderItem","props","item","className","title","name","to","id","src","cover","undefined","Reader","p_index","useSearchParam","chunks","_","chunk","data","loading_props","text","useSpring","from","opacity","loop","reverse","reset","isCurrent","i","Number","length","match","disabled","loading","classname","map","styles","loading_style","span","style","ErrorBlock","children","hasErrors","errors","retry","status","console","log","errorBlock","retryBtn","onClick","cursor","errorMsg","message","defaultOptions","AllMangasDocument","gql","GetMangaDocument","SearchMangaDocument","UpdateDataDocument","Main","mangas","baseOptions","options","Apollo","useAllMangasQuery","partialRefetch","notifyOnNetworkStatusChange","useState","isSearched","searchList","setSearchList","useUpdateDataLazyQuery","REFRESH_COVERS","useSearchMangaLazyQuery","GET_SEARCH","search","useEffect","called","header_flex","color","refetch","refresh","refresh_btn","fontSize","type","placeholder","onChange","e","target","value","variables","s","onBlur","backgroundImage","backgroundSize","backgroundPosition","minWidth","height","backgroundColor","networkStatus","Boolean","error","total","list","MangaView","panelImg","path","alt","errorImg","background","MangaHeader","manga","zoomValue","brightVal","setBright","setZoomVal","min","max","valueAsNumber","defaultProps","scroll","Scroll","Manga","location","useLocation","useGetMangaQuery","URLSearchParams","get","useLocalStorage","viewerStyles","StyleSheet","create","brightnessAdjust","filter","widthAdjust","maxWidth","transition","document","scrollToTop","top","bgColor","css","d","k","NotFound","NotFoundBlock","NotFoundCodeBlock","GoHomeLink","App","exact","component","Footer","p_overflow","apollo_client","ApolloClient","uri","cache","InMemoryCache","ToTopComponent","TopComponent","window","behavior","left","ReactDOM","render","ApolloProvider","client","querySelector"],"mappings":"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","file":"static/js/main.387b2512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopComponent\":\"TopComponent_TopComponent__1Q20b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p_overflow\":\"Footer_p_overflow__1OIkf\"};","/* eslint-disable jsx-a11y/alt-text */\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReaderItemProps } from '../props';\n\nconst ReaderItem: FC<ReaderItemProps> = props => {\n   const { item } = props;\n\n   return (\n      <Link className=\"flex-item\" title={item.name} to={`/manga?id=${item.id}`}>\n         {true ? (\n            <img className=\"bg-img\" src={item.cover || undefined} />\n         ) : (\n            <div\n               className=\"bg-img\"\n               style={{\n                  filter: 'none',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}>\n               Loading...\n            </div>\n         )}\n         <div className=\"description\">\n            <p>{item.name}</p>\n         </div>\n      </Link>\n   );\n};\n\nexport default ReaderItem;\n","/* eslint-disable no-script-url */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/alt-text */\nimport ReaderItem from './sub-components/ReaderItem';\nimport { useSpring, animated as anim } from 'react-spring';\nimport classname from 'classnames';\nimport {\n   FaAngleLeft,\n   FaAngleRight,\n   FaAngleDoubleLeft,\n   FaAngleDoubleRight,\n} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { FC } from 'react';\nimport styles from '../css_modules/main.module.scss';\nimport { useSearchParam } from 'react-use';\nimport { ReaderProps } from './props';\n\nconst Reader: FC<ReaderProps> = props => {\n   const p_index = useSearchParam('p_index');\n   const chunks = _.chunk(props.data, 10);\n   const loading_props = {\n      text: useSpring({\n         from: {\n            opacity: 1,\n         },\n         opacity: 0,\n         loop: { reverse: true },\n         reset: true,\n      }),\n   };\n\n   const isCurrent = (i: number) => {\n      if (typeof p_index === 'string') {\n         if (Number(p_index) < chunks.length && i === Number(p_index)) {\n            return true;\n         }\n         if (p_index.match(/last/i) && i === chunks.length - 1) {\n            return true;\n         }\n         if (p_index.match(/first/i) && i === 0) {\n            return true;\n         }\n      } else {\n         if (i === 0) {\n            return true;\n         }\n      }\n      return false;\n   };\n   return (\n      <div className=\"main-reader\">\n         <div className=\"nav\">\n            {p_index && Number(p_index) !== 0 ? (\n               <>\n                  <Link to={`/?p_index=0`}>\n                     <button disabled={isCurrent(0)} className=\"prev\">\n                        <FaAngleDoubleLeft />\n                     </button>\n                  </Link>\n                  <Link to={`/?p_index=${Number(p_index) - 1}`}>\n                     <button disabled={isCurrent(0)} className=\"prev\">\n                        <FaAngleLeft />\n                     </button>\n                  </Link>\n               </>\n            ) : (\n               <>\n                  <button disabled={isCurrent(0)} className=\"prev\">\n                     <FaAngleDoubleLeft />\n                  </button>\n                  <button disabled={true} className=\"prev\">\n                     <FaAngleLeft />\n                  </button>\n               </>\n            )}\n            {Number(p_index || 0) !== chunks.length - 1 ? (\n               <>\n                  <Link to={`/?p_index=${Number(p_index || 0) + 1}`}>\n                     <button\n                        disabled={\n                           p_index\n                              ? Number(p_index) === chunks.length - 1\n                              : undefined\n                        }\n                        className=\"next\">\n                        <FaAngleRight />\n                     </button>\n                  </Link>\n                  <Link to={`/?p_index=${chunks.length - 1}`}>\n                     <button\n                        disabled={\n                           p_index\n                              ? Number(p_index) === chunks.length - 1\n                              : undefined\n                        }\n                        className=\"next\">\n                        <FaAngleDoubleRight />\n                     </button>\n                  </Link>\n               </>\n            ) : (\n               <>\n                  <button\n                     disabled={\n                        p_index\n                           ? Number(p_index) === chunks.length - 1\n                           : undefined\n                     }\n                     className=\"next\">\n                     <FaAngleRight />\n                  </button>\n                  <button\n                     disabled={\n                        p_index\n                           ? Number(p_index) === chunks.length - 1\n                           : undefined\n                     }\n                     className=\"next\">\n                     <FaAngleDoubleRight />\n                  </button>\n               </>\n            )}\n         </div>\n         <div className=\"main-reader-box\">\n            {!props.loading && props.data ? (\n               <div className={classname('main-reader-flex', 'current')}>\n                  {chunks[p_index ? Number(p_index) : 0].map(item => (\n                     <ReaderItem key={item.id} item={item} />\n                  ))}\n               </div>\n            ) : (\n               <div className={styles.loading_style}>\n                  <h3>\n                     <anim.span style={loading_props.text}>\n                        Loading...\n                     </anim.span>\n                  </h3>\n               </div>\n            )}\n         </div>\n      </div>\n   );\n};\n\nexport default Reader;\n","import { FC } from 'react';\nimport styles from '../../css_modules/ErrorBlock.module.scss';\nimport { ErrorProps } from '../props';\n\nconst ErrorBlock: FC<ErrorProps> = ({\n   children,\n   hasErrors,\n   errors,\n   retry,\n   loading,\n   status,\n}) => {\n   if (hasErrors) {\n      console.log(hasErrors);\n      return (\n         <div className={styles.errorBlock}>\n            <h3>Something went wrong...</h3>\n            <button\n               className={styles.retryBtn}\n               onClick={() => retry()}\n               style={{ cursor: status === 4 ? 'progress' : 'pointer' }}>\n               {status === 4 ? 'Retrying...' : 'Retry?'}\n            </button>\n            <code className={styles.errorMsg}>{errors?.message}</code>\n         </div>\n      );\n   }\n   return <>{children}</>;\n};\n\nexport default ErrorBlock;\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | undefined;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions =  {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  DateTime: any;\n};\n\n\nexport type Manga = {\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  pathname: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  size: Scalars['Int'];\n  data?: Maybe<Array<MangaData>>;\n  cover?: Maybe<Scalars['String']>;\n};\n\nexport type MangaData = {\n  name: Scalars['String'];\n  path: Scalars['String'];\n};\n\nexport type Query = {\n  mangas?: Maybe<Array<Manga>>;\n  manga?: Maybe<Manga>;\n  search?: Maybe<Array<Manga>>;\n  total: Scalars['Int'];\n  update?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryMangasArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  cursor?: Maybe<Scalars['Int']>;\n  refresh?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryMangaArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySearchArgs = {\n  term?: Maybe<Scalars['String']>;\n};\n\nexport type AllMangasQueryVariables = Exact<{\n  refresh?: Maybe<Scalars['Boolean']>;\n  slice?: Maybe<Scalars['Int']>;\n  limit?: Maybe<Scalars['Int']>;\n}>;\n\n\nexport type AllMangasQuery = { total: number, list?: Maybe<Array<{ id: string, name: string, pathname: string, createdAt: any, size: number, cover?: Maybe<string> }>> };\n\nexport type GetMangaQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetMangaQuery = { manga?: Maybe<{ id: string, name: string, pathname: string, createdAt: any, size: number, data?: Maybe<Array<{ name: string, path: string }>> }> };\n\nexport type SearchMangaQueryVariables = Exact<{\n  s?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type SearchMangaQuery = { search?: Maybe<Array<{ id: string, name: string, cover?: Maybe<string> }>> };\n\nexport type UpdateDataQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UpdateDataQuery = { update?: Maybe<boolean> };\n\n\nexport const AllMangasDocument = gql`\n    query AllMangas($refresh: Boolean, $slice: Int, $limit: Int) {\n  list: mangas(refresh: $refresh, cursor: $slice, limit: $limit) {\n    id\n    name\n    pathname\n    createdAt\n    size\n    cover\n  }\n  total\n}\n    `;\n\n/**\n * __useAllMangasQuery__\n *\n * To run a query within a React component, call `useAllMangasQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllMangasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllMangasQuery({\n *   variables: {\n *      refresh: // value for 'refresh'\n *      slice: // value for 'slice'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useAllMangasQuery(baseOptions?: Apollo.QueryHookOptions<AllMangasQuery, AllMangasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<AllMangasQuery, AllMangasQueryVariables>(AllMangasDocument, options);\n      }\nexport function useAllMangasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllMangasQuery, AllMangasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<AllMangasQuery, AllMangasQueryVariables>(AllMangasDocument, options);\n        }\nexport type AllMangasQueryHookResult = ReturnType<typeof useAllMangasQuery>;\nexport type AllMangasLazyQueryHookResult = ReturnType<typeof useAllMangasLazyQuery>;\nexport type AllMangasQueryResult = Apollo.QueryResult<AllMangasQuery, AllMangasQueryVariables>;\nexport const GetMangaDocument = gql`\n    query getManga($id: ID!) {\n  manga(id: $id) {\n    id\n    name\n    pathname\n    createdAt\n    size\n    data {\n      name\n      path\n    }\n  }\n}\n    `;\n\n/**\n * __useGetMangaQuery__\n *\n * To run a query within a React component, call `useGetMangaQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetMangaQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetMangaQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetMangaQuery(baseOptions: Apollo.QueryHookOptions<GetMangaQuery, GetMangaQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetMangaQuery, GetMangaQueryVariables>(GetMangaDocument, options);\n      }\nexport function useGetMangaLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetMangaQuery, GetMangaQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetMangaQuery, GetMangaQueryVariables>(GetMangaDocument, options);\n        }\nexport type GetMangaQueryHookResult = ReturnType<typeof useGetMangaQuery>;\nexport type GetMangaLazyQueryHookResult = ReturnType<typeof useGetMangaLazyQuery>;\nexport type GetMangaQueryResult = Apollo.QueryResult<GetMangaQuery, GetMangaQueryVariables>;\nexport const SearchMangaDocument = gql`\n    query SearchManga($s: String) {\n  search(term: $s) {\n    id\n    name\n    cover\n  }\n}\n    `;\n\n/**\n * __useSearchMangaQuery__\n *\n * To run a query within a React component, call `useSearchMangaQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchMangaQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchMangaQuery({\n *   variables: {\n *      s: // value for 's'\n *   },\n * });\n */\nexport function useSearchMangaQuery(baseOptions?: Apollo.QueryHookOptions<SearchMangaQuery, SearchMangaQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<SearchMangaQuery, SearchMangaQueryVariables>(SearchMangaDocument, options);\n      }\nexport function useSearchMangaLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<SearchMangaQuery, SearchMangaQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<SearchMangaQuery, SearchMangaQueryVariables>(SearchMangaDocument, options);\n        }\nexport type SearchMangaQueryHookResult = ReturnType<typeof useSearchMangaQuery>;\nexport type SearchMangaLazyQueryHookResult = ReturnType<typeof useSearchMangaLazyQuery>;\nexport type SearchMangaQueryResult = Apollo.QueryResult<SearchMangaQuery, SearchMangaQueryVariables>;\nexport const UpdateDataDocument = gql`\n    query updateData {\n  update\n}\n    `;\n\n/**\n * __useUpdateDataQuery__\n *\n * To run a query within a React component, call `useUpdateDataQuery` and pass it any options that fit your needs.\n * When your component renders, `useUpdateDataQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUpdateDataQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUpdateDataQuery(baseOptions?: Apollo.QueryHookOptions<UpdateDataQuery, UpdateDataQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<UpdateDataQuery, UpdateDataQueryVariables>(UpdateDataDocument, options);\n      }\nexport function useUpdateDataLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<UpdateDataQuery, UpdateDataQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<UpdateDataQuery, UpdateDataQueryVariables>(UpdateDataDocument, options);\n        }\nexport type UpdateDataQueryHookResult = ReturnType<typeof useUpdateDataQuery>;\nexport type UpdateDataLazyQueryHookResult = ReturnType<typeof useUpdateDataLazyQuery>;\nexport type UpdateDataQueryResult = Apollo.QueryResult<UpdateDataQuery, UpdateDataQueryVariables>;","import { Link } from 'react-router-dom';\nimport { MdRefresh } from 'react-icons/md';\nimport Reader from './Reader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport { useState, useEffect, ChangeEventHandler } from 'react';\nimport styles from '../css_modules/main.module.scss';\nimport {\n   useAllMangasQuery,\n   useSearchMangaLazyQuery,\n   useUpdateDataLazyQuery,\n} from '../../types';\n\nconst Main = () => {\n   const mangas = useAllMangasQuery({\n      partialRefetch: true,\n      notifyOnNetworkStatusChange: true,\n   });\n   const [searchList, setSearchList] = useState<{\n      isSearched: boolean;\n      data?: any[];\n   }>({\n      isSearched: false,\n   });\n   const [REFRESH_COVERS] = useUpdateDataLazyQuery();\n   const [GET_SEARCH, search] = useSearchMangaLazyQuery();\n\n   const handleSearchChange: ChangeEventHandler<HTMLInputElement> = e => {\n      if (!e.target.value) {\n         return setSearchList({\n            isSearched: false,\n            data: undefined,\n         });\n      }\n      GET_SEARCH({\n         variables: {\n            s: e.target.value,\n         },\n      });\n   };\n\n   useEffect(() => {\n      if (\n         search.called &&\n         !search.loading &&\n         search.data &&\n         search.data.search\n      ) {\n         setSearchList({\n            isSearched: true,\n            data: search.data.search,\n         });\n      }\n   }, [search.called, search.loading, search.data]);\n\n   return (\n      <div id=\"main\">\n         <div className={styles.header_flex}>\n            <h1 className=\"logo\">\n               <Link to=\"/\" style={{ color: 'white' }}>\n                  <div>Reader</div>\n               </Link>\n            </h1>\n            <div className=\"btn-flex\">\n               <button\n                  onClick={() => mangas.refetch({ refresh: true })}\n                  className={styles.refresh_btn}>\n                  <MdRefresh fontSize=\"1.2rem\" />\n                  <span>Refresh</span>\n               </button>\n               <button\n                  onClick={() => REFRESH_COVERS()}\n                  className={styles.refresh_btn}>\n                  <MdRefresh fontSize=\"1.2rem\" />\n                  <span>Covers</span>\n               </button>\n            </div>\n         </div>\n         <div className=\"search-bar\">\n            <input\n               type=\"text\"\n               name=\"search\"\n               placeholder=\"Search...\"\n               onChange={handleSearchChange}\n               onBlur={() => setSearchList({ isSearched: false })}\n            />\n            {searchList.isSearched && (\n               <div className=\"search-list\">\n                  {searchList.data &&\n                     searchList?.data?.map(item => (\n                        <Link\n                           to={`/manga?id=${item.id}`}\n                           className=\"search-item\"\n                           title={item.name}>\n                           <div\n                              className=\"cover-img\"\n                              style={{\n                                 backgroundImage: `url('${item.cover}')`,\n                                 backgroundSize: 'cover',\n                                 backgroundPosition: 'center',\n                                 minWidth: '3rem',\n                                 height: '4rem',\n                                 backgroundColor: '#444',\n                              }}></div>\n                           <div className=\"name\">{item.name}</div>\n                        </Link>\n                     ))}\n               </div>\n            )}\n         </div>\n         <ErrorBlock\n            status={mangas.networkStatus}\n            loading={mangas.loading}\n            retry={mangas.refetch}\n            hasErrors={Boolean(mangas.error)}\n            errors={mangas.error}>\n            <Reader\n               total={mangas?.data?.total}\n               data={mangas?.data?.list}\n               loading={mangas.loading}\n               refetch={mangas.refetch}\n            />\n         </ErrorBlock>\n      </div>\n   );\n};\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/404.6a579c40.jpg\";","import { FC } from 'react';\nimport Image from 'react-cool-img';\nimport errorImg from '../img/404.jpg';\nimport { MangaViewProps } from './props';\n\nconst MangaView: FC<MangaViewProps> = ({ panelImg }) => (\n   <div className=\"panel\">\n      <Image\n         src={`/${panelImg.path}`}\n         alt={panelImg.name}\n         error={errorImg}\n         style={!panelImg ? { background: '#444', height: '500px' } : {}}\n      />\n   </div>\n);\n\nexport default MangaView;\n","import { FC } from 'react';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport { MangaHeaderProps } from './props';\n// import styles from '../css_modules/Manga.module.scss';\n\nconst MangaHeader: FC<MangaHeaderProps> = ({\n   manga,\n   zoomValue = 5,\n   brightVal = 100,\n   setBright,\n   setZoomVal,\n}) => (\n   <header>\n      <h2 className=\"logo\">{manga ? manga.name : '...'}</h2>\n      <nav>\n         <div className=\"bright-control\">\n            <span>{brightVal}</span>\n            <input\n               type=\"range\"\n               min=\"0\"\n               max=\"100\"\n               onChange={e => setBright(e.target.valueAsNumber)}\n               value={brightVal}\n            />\n         </div>\n         <div className=\"zoom-control\">\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue > 1 ? zoomValue - 1 : 1)}>\n               <FaMinus />\n            </button>\n            <input\n               type=\"text\"\n               onChange={e =>\n                  e.target.valueAsNumber <= 10 &&\n                  e.target.valueAsNumber > 0 &&\n                  setZoomVal(e.target.valueAsNumber)\n               }\n               value={zoomValue}\n            />\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue < 10 ? zoomValue + 1 : 10)}>\n               <FaPlus />\n            </button>\n         </div>\n      </nav>\n   </header>\n);\n\nMangaHeader.defaultProps = {\n   manga: {\n      name: '',\n      data: [],\n   },\n};\n\nexport default MangaHeader;\n","import { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { css, StyleSheet } from 'aphrodite';\nimport { useLocation } from 'react-router-dom';\nimport { ProgressBar } from 'scrolling-based-progressbar';\nimport MangaView from './MangaView';\nimport { useSpring, animated as anim } from 'react-spring';\nimport * as Scroll from 'react-scroll';\nimport MangaHeader from './MangaHeader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport styles from '../css_modules/main.module.scss';\nimport { useGetMangaQuery } from '../../types';\n\nconst scroll = Scroll.animateScroll;\n\nconst Manga = () => {\n   const location = useLocation();\n   const mangaID = new URLSearchParams(location.search).get('id') || '';\n   const { loading, data, error, refetch } = useGetMangaQuery({\n      variables: {\n         id: mangaID,\n      },\n   });\n   const [zoomValue, setZoomVal] = useLocalStorage<number>('zoomValue', 5);\n   const [brightVal, setBright] = useLocalStorage<number>('brightValue', 100);\n   const loading_props = {\n      text: useSpring({\n         from: {\n            opacity: 1,\n         },\n         opacity: 0,\n         loop: { reverse: true },\n         reset: loading,\n      }),\n   };\n   const viewerStyles = StyleSheet.create({\n      brightnessAdjust: {\n         filter: `brightness(${brightVal}%)`,\n      },\n      widthAdjust: {\n         maxWidth: `${((zoomValue || 5) / 10 + 0.5) * 700}px`,\n         transition: '0.3s',\n      },\n   });\n\n   useEffect(() => {\n      if (loading) {\n         document.title = 'Loading...';\n      } else {\n         if (data?.manga) {\n            document.title = data.manga.name;\n         }\n      }\n   });\n\n   useEffect(() => {\n      scroll.scrollToTop();\n   }, []);\n\n   return (\n      <div>\n         {loading && (\n            <div className={styles.loading_style}>\n               <h3>\n                  <anim.span style={loading_props.text}>Loading...</anim.span>\n               </h3>\n            </div>\n         )}\n         <ErrorBlock\n            loading={loading}\n            hasErrors={Boolean(error)}\n            errors={error}\n            retry={refetch}>\n            <div className=\"wrapper\">\n               {!loading && (\n                  <ProgressBar\n                     height=\"3px\"\n                     top=\"30px\"\n                     color=\"#546\"\n                     bgColor=\"#aae\"\n                  />\n               )}\n               <MangaHeader\n                  manga={!loading && data?.manga}\n                  zoomValue={zoomValue}\n                  brightVal={brightVal}\n                  setBright={setBright}\n                  setZoomVal={setZoomVal}\n               />\n               <div\n                  className={css(\n                     viewerStyles.brightnessAdjust,\n                     viewerStyles.widthAdjust\n                  )}\n                  id=\"viewer\">\n                  {!loading &&\n                     data?.manga?.data?.map((d, k: number) => (\n                        <MangaView key={k} panelImg={d} />\n                     ))}\n               </div>\n            </div>\n         </ErrorBlock>\n      </div>\n   );\n};\n\nexport default Manga;\n","import { Link } from 'react-router-dom'\nimport styles from '../../css_modules/404.module.scss'\n\nconst NotFound = () => (\n  <div className={styles.NotFoundBlock}>\n    <h1>404 Not Found</h1>\n    <code className={styles.NotFoundCodeBlock}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={styles.GoHomeLink} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Main from './components/Main'\nimport Manga from './components/Manga'\nimport NotFound from './components/sub-components/404'\nimport '../stylesheets/App.scss'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route path=\"/manga\" component={Manga} />\n    <Route component={NotFound} />\n  </Switch>\n   )\n\nexport default App\n","import { FaHeart } from 'react-icons/fa';\nimport styles from './css_modules/Footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.p_overflow}>\n        Thanks for Reading my manga reader <FaHeart fontSize=\"1.2rem\" />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst apollo_client = new ApolloClient({\n   uri: 'https://7800-cyan-planarian-rndv23dl.ws-us14.gitpod.io/api/ql',\n   cache: new InMemoryCache(),\n});\n\nexport default apollo_client;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { FaChevronUp } from 'react-icons/fa';\nimport App from './main/App';\nimport styles from './main/css_modules/TopComponent.module.scss'\nimport './stylesheets/index.scss';\nimport Footer from './main/Footer';\nimport client from './apollo_client'\n\nconst ToTopComponent: React.FC = () => {\n  return (\n    <button className={styles.TopComponent} onClick={() => window.scroll({\n      behavior: 'smooth',\n      top: 0,\n      left: 0,\n    })} >\n      <FaChevronUp fontSize=\"2rem\" />\n    </button>\n  );\n};\n\nReactDOM.render(\n  <>\n    <Router>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Router>\n    <ToTopComponent />\n    <Footer />\n  </>,\n  document.querySelector('#container')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading_style\":\"main_loading_style__2G4cK\",\"header_flex\":\"main_header_flex__1Iskj\",\"refresh_btn\":\"main_refresh_btn__32hfI\",\"search_bar\":\"main_search_bar__3bGK_\",\"marquee\":\"main_marquee__3mj9g\",\"marquee_child\":\"main_marquee_child__3P3ZP\",\"marquee_animation\":\"main_marquee_animation__io12I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"ErrorBlock_errorMsg__unQtQ\",\"errorBlock\":\"ErrorBlock_errorBlock__1axJR\",\"retryBtn\":\"ErrorBlock_retryBtn__24kR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFoundBlock\":\"404_NotFoundBlock__15Qde\",\"NotFoundCodeBlock\":\"404_NotFoundCodeBlock__1G6qK\",\"GoHomeLink\":\"404_GoHomeLink__2LEpy\"};"],"sourceRoot":""}