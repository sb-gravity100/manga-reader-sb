{"version":3,"sources":["slices/MangaApi.ts","slices/HentaiApi.ts","store.ts","components/sub-components/Loading.tsx","components/sub-components/Navigation.tsx","components/props.ts","components/sub-components/DoujinCard.tsx","components/Reader.tsx","components/sub-components/Header.tsx","components/Main.tsx","img/temp2.png","components/sub-components/404.tsx","components/sub-components/MangaHeader.tsx","components/sub-components/MangaView.tsx","components/Manga.tsx","components/online/Header.tsx","components/online/Homepage.tsx","components/Online.tsx","timeAgo.ts","components/online/Doujin.tsx","components/online/SearchPage.tsx","App.tsx","index.tsx"],"names":["ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","url","params","getManga","id","search","q","saveManga","removeManga","useAllMangasQuery","useGetMangaQuery","useSearchQuery","useLazySearchQuery","useLazySaveMangaQuery","useLazyAllMangasQuery","useLazyGetMangaQuery","usePrefetch","useLazyRemoveMangaQuery","useSaveMangaQuery","useRemoveMangaQuery","getDoujin","getHomepage","useGetHomepageQuery","useGetDoujinQuery","useLazyGetHomepageQuery","useLazyGetDoujinQuery","store","configureStore","reducer","HentaiSlice","middleware","getDefMid","concat","useReduxSelector","LoadingMangas","props","_","times","num","n","Card","className","style","width","Img","variant","height","src","Body","Placeholder","as","Title","animation","bg","xs","LoadingScreen","Spinner","role","PaginationComponent","page","next","refresh","blur","current","console","log","Pagination","Item","onClick","slice","First","URLSearchParams","disabled","Prev","pages","start","end","numPages","push","active","renderPages","Next","Last","getSearchParams","p","keys","forEach","v","k","Locales","JAPANESE","CHINESE","ENGLISH","DoujinCard","doujin","refetch","useToggle","isOver","setOver","thumbnail","match","tagName","tags","all","find","e","type","name","locale","toUpperCase","refetchOnFocus","refetchOnReconnect","saved","removed","useEffect","isSuccess","Image","alt","zIndex","filter","undefined","Button","availableOffline","toString","to","onMouseOver","onMouseOut","fontSize","transition","classNames","titles","pretty","Reader","useSearchParams","mangas","get","PageComp","data","Number","Container","isFetching","doujins","map","SearchResult","item","path","basename","ListGroup","take","Badge","length","Header","useState","value","setSearch","thumb","setThumb","setAll","searchBy","setSearchBy","searchVals","useMemo","by","Navbar","expand","Brand","Toggle","Collapse","Nav","Link","window","fetch","then","catch","pointerEvents","Form","InputGroup","FormControl","placeholder","autoComplete","onChange","target","SplitButton","title","align","i","Dropdown","href","maxHeight","display","Main","NotFound","placeItems","alignContent","img","innerHeight","history","back","MangaHeader","isSlide","toggleSlide","showPanel","togglePanel","isBright","toggleBright","useCounter","zoomValue","zoom","useRafLoop","scrollY","document","body","scrollHeight","scrollBy","left","top","manga","behavior","stopLoop","startLoop","setBright","setZoom","maxWidth","overflowX","english","inc","alignmentBaseline","dec","MangaView","pageNumber","extension","Manga","useParams","scrollProgress","setProgress","brightValue","lastZoomPercent","setZoomPercent","useEvent","isError","ProgressBar","position","now","isLoading","onTransitionEnd","scrollTo","links","text","location","pathname","Homepage","Sorts","toPairs","SortMethods","sort","Online","TimeAgo","addDefaultLocale","en","timeAgo","TagButton","children","isNone","setNone","rel","count","DoujinPage","offline","setOffline","Row","Col","rounded","cover","splitted","split","showTitle","format","Date","uploadDate","SearchPage","searchRef","useRef","onSubmit","preventDefault","ref","focus","ToTopComponent","useLocation","nav","useNavigate","ButtonGroup","vertical","right","bottom","scroll","App","caseSensitive","element","Doujin","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.d628eec9.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport _ from 'lodash';\nimport { Doujin } from 'nhentai';\nimport { Manga, SearchResult } from '../../../src/types';\n\ninterface MangasQuery {\n   limit?: any;\n   page?: any;\n}\n\ninterface SearchQuery {\n   q: string;\n   by?: 'artist' | 'tag' | 'language' | 'category' | 'parody';\n}\n\nconst ApiSlice = createApi({\n   reducerPath: 'MangaApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api',\n   }),\n   endpoints: (builder) => ({\n      allMangas: builder.query<SearchResult, MangasQuery | void>({\n         query(opts) {\n            return {\n               url: '/mangas',\n               params: opts as any,\n            };\n         },\n      }),\n      getManga: builder.query<Manga, number | string>({\n         query(id) {\n            return {\n               url: `/doujin`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<Manga[], SearchQuery | string>({\n         query(q) {\n            return {\n               url: '/search',\n               params:\n                  typeof q === 'string'\n                     ? {\n                          q,\n                       }\n                     : q,\n            };\n         },\n      }),\n      saveManga: builder.query<Manga, string>({\n         query(id) {\n            return {\n               url: '/save',\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      removeManga: builder.query<number, string>({\n         query(id) {\n            return {\n               url: '/remove',\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useAllMangasQuery,\n   useGetMangaQuery,\n   useLazySearchQuery,\n   useSearchQuery,\n   useLazyAllMangasQuery,\n   useLazyGetMangaQuery,\n   usePrefetch,\n   useLazySaveMangaQuery,\n   useSaveMangaQuery,\n   useLazyRemoveMangaQuery,\n   useRemoveMangaQuery,\n} = ApiSlice;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport _ from 'lodash';\nimport { Doujin } from 'nhentai';\nimport { Manga, SearchResult, SortMethods } from '../../../src/types';\n\ninterface SearchQuery {\n   q: string;\n   page?: any;\n   sort?: SortMethods;\n}\n\ninterface HomepageQuery extends Omit<SearchQuery, 'q'> {}\n\nconst ApiSlice = createApi({\n   reducerPath: 'HentaiApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api/onlineapi',\n   }),\n   endpoints: (builder) => ({\n      getDoujin: builder.query<Manga, number | string>({\n         query(id) {\n            return {\n               url: `/doujin`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<SearchResult, SearchQuery | string>({\n         query(q) {\n            return {\n               url: '/search',\n               params:\n                  typeof q === 'string'\n                     ? {\n                          q,\n                       }\n                     : q,\n            };\n         },\n      }),\n      getHomepage: builder.query<SearchResult, HomepageQuery | void>({\n         query(q) {\n            return {\n               url: '/homepage',\n               params: q as any,\n            };\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useGetHomepageQuery,\n   useGetDoujinQuery,\n   useLazyGetHomepageQuery,\n   useLazyGetDoujinQuery,\n   useLazySearchQuery,\n   usePrefetch,\n   useSearchQuery,\n} = ApiSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n   useDispatch as useReduxDispatch,\n   useSelector as useReduxSelector,\n   TypedUseSelectorHook,\n} from 'react-redux';\nimport ApiSlice from './slices/MangaApi';\nimport HentaiSlice from './slices/HentaiApi';\n\nconst store = configureStore({\n   reducer: {\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\n      [HentaiSlice.reducerPath]: HentaiSlice.reducer,\n   },\n   middleware: (getDefMid) =>\n      getDefMid().concat(ApiSlice.middleware, HentaiSlice.middleware) as any,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\nexport default store;\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Card, Placeholder, Spinner } from 'react-bootstrap';\n\nexport const LoadingMangas: FC<any> = (props) => (\n   <>\n      {_.times(props.num || 10, (n) => (\n         <Card key={n} className=\"bg-secondary\" style={{ width: '12rem' }}>\n            <Card.Img variant=\"top\" height=\"190\" src=\"/loading.gif\" />\n            <Card.Body className=\"py-1 px-2\">\n               <Placeholder as={Card.Title} animation=\"wave\">\n                  <Placeholder className=\"mx-auto\" bg=\"info\" xs={12} />\n               </Placeholder>\n            </Card.Body>\n         </Card>\n      ))}\n   </>\n);\n\nexport const LoadingScreen: FC = () => (\n   <div\n      style={\n         { height: '100vh', '--bs-bg-opacity': '.5', width: '100vh' } as any\n      }\n      className=\"d-flex position-fixed top-0 start-0 w-100 align-items-center justify-content-center\"\n   >\n      <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n         <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n   </div>\n);\n","import _ from 'lodash';\nimport { SearchResult } from 'nhentai';\nimport { FC } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { MdRefresh, MdBlurOn, MdBlurOff } from 'react-icons/md';\n\ninterface PPage {\n   page?: any;\n   next: any;\n   current: any;\n   refresh?: any;\n   blur?: any[];\n}\n\nconst PaginationComponent: FC<PPage> = ({\n   page,\n   next,\n   refresh,\n   blur,\n   current,\n}) => {\n   console.log(current);\n   var renderPages = () => {\n      var pages: JSX.Element[] = [];\n      var start = current;\n      var end = current + 10;\n      if (end > page?.numPages) {\n         end = page?.numPages + 1;\n         // start -= page?.numPages - current;\n      }\n      for (let n = start; n < end; n++) {\n         pages.push(\n            <Pagination.Item\n               onClick={() =>\n                  next(\n                     new URLSearchParams({\n                        page: n as any,\n                     })\n                  )\n               }\n               key={n}\n               active={current === n}\n               disabled={current === n}\n            >\n               {n}\n            </Pagination.Item>\n         );\n      }\n      return pages;\n   };\n   return (\n      <Pagination className=\"justify-content-center m-0\">\n         <Pagination.Item onClick={refresh} className=\"me-3\">\n            <MdRefresh />\n         </Pagination.Item>\n         {blur && (\n            <Pagination.Item\n               onClick={() => {\n                  if (blur) {\n                     blur[1]();\n                  }\n               }}\n               className=\"me-3\"\n            >\n               {!blur.slice()[0] ? <MdBlurOn /> : <MdBlurOff />}\n            </Pagination.Item>\n         )}\n         <Pagination.First\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: '1',\n                  })\n               )\n            }\n            disabled={1 === current}\n         />\n         <Pagination.Prev\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: (current - 1) as any,\n                  })\n               )\n            }\n            disabled={1 === current}\n         />\n         {page && renderPages()}\n         <Pagination.Next\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: (current + 1) as any,\n                  })\n               )\n            }\n            disabled={page?.numPages === current}\n         />\n         <Pagination.Last\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.numPages as any,\n                  })\n               )\n            }\n            disabled={page?.numPages === current}\n         />\n      </Pagination>\n   );\n};\n\nexport default PaginationComponent;\n","import { Manga, MangaData } from '../../../src/types';\n\nexport interface MangaHeaderProps {\n   manga?: Manga;\n   zoomValue?: number;\n   brightVal?: number;\n}\n\nexport interface ReaderItemProps {\n   item: Manga;\n}\n\nexport interface MangaViewProps {\n   img: MangaData;\n   src: string;\n}\n\nexport interface ReaderProps {\n   total?: number;\n   data?: Manga[];\n   loading: boolean;\n   refetch(...args: any[]): void;\n}\n\nexport interface ErrorProps {\n   hasErrors: boolean;\n   errors?: any;\n   retry: () => void;\n   isFetching: boolean;\n}\n\nexport interface NavProps {\n   refetch: ReaderProps['refetch'];\n}\n\nexport interface SearchBarProps {}\n\nexport function getSearchParams(p: URLSearchParams) {\n   var keys = {} as any;\n   p.forEach((v, k) => {\n      keys[k] = v;\n   });\n   return keys;\n}\n\nexport const Locales = {\n   JAPANESE: '/japan_logo.svg',\n   CHINESE: '/china_logo.svg',\n   ENGLISH: '/us_logo.svg',\n};\n\nexport function getLocale(name: string) {\n   return (Locales as any)[name.toUpperCase()];\n}\n","import classNames from 'classnames';\nimport { useEffect } from 'react';\nimport { Card, Image, Button } from 'react-bootstrap';\nimport { AnyIfEmpty, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { Manga } from '../../../../src/types';\nimport {\n   useLazySaveMangaQuery,\n   useLazyRemoveMangaQuery,\n} from '../../slices/MangaApi';\nimport { getLocale } from '../props';\n\ntype DoujinProps = {\n   doujin: Manga;\n   blur: any;\n   refetch: any;\n};\n\nconst DoujinCard: React.FC<DoujinProps> = ({ doujin: n, blur, refetch }) => {\n   var [isOver, setOver] = useToggle(false);\n   var thumbnail = n.thumbnail?.url;\n   if (thumbnail?.match(/https?/i))\n      thumbnail = `/api/fetch?url=${n.thumbnail?.url}`;\n   var tagName = n.tags?.all?.find(\n      (e) => e.type.match(/language/i) && !e.name.match(/translated/i)\n   )?.name as string;\n   var locale = getLocale(tagName);\n\n   var handleMouseEnter = () => {\n      setOver(true);\n   };\n   var handleMouseLeave = () => {\n      setOver(false);\n   };\n   const [saveManga, saved] = useLazySaveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const [removeManga, removed] = useLazyRemoveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   useEffect(() => {\n      if (saved.isSuccess) {\n         refetch();\n      }\n   }, [saved, n, refetch]);\n   useEffect(() => {\n      if (removed.isSuccess) {\n         refetch();\n      }\n   }, [removed, n, refetch]);\n   return (\n      <Card\n         className=\"bg-secondary position-relative\"\n         style={{ width: '12rem' }}\n      >\n         {locale && (\n            <Image\n               height={20}\n               width={30}\n               src={locale}\n               alt={tagName}\n               className=\"position-absolute top-0 start-0\"\n               style={{\n                  zIndex: 5000,\n               }}\n            />\n         )}\n         <Card.Img\n            variant=\"top\"\n            height=\"300\"\n            src={thumbnail}\n            style={{\n               filter: blur[0] ? 'blur(2px)' : undefined,\n            }}\n         />\n         <div\n            style={{ zIndex: 5000 }}\n            className=\"position-absolute top-0 end-0\"\n         >\n            <Button\n               onClick={() => {\n                  if (n?.availableOffline) {\n                     removeManga(n.id.toString(), false);\n                  } else {\n                     saveManga(n.id.toString(), false);\n                  }\n               }}\n               className=\"me-2 p-1\"\n               variant=\"primary\"\n            >\n               <small>{n?.availableOffline ? 'Remove' : 'Download'}</small>\n            </Button>\n            <Link className=\"btn btn-danger p-1\" to={`/manga/${n.id}`}>\n               <small>Read</small>\n            </Link>\n         </div>\n         <Link\n            onMouseOver={handleMouseEnter}\n            onMouseOut={handleMouseLeave}\n            className=\"stretched-link\"\n            to={'/online/' + n.id}\n         >\n            <Card.Body className=\"pb-0 pt-1 position-absolute start-0 w-100 bg-dark bg-opacity-50 bottom-0\">\n               <Card.Title\n                  style={{ fontSize: '16px', transition: '0.2s' }}\n                  className={classNames(\n                     'text-center text-white text-decoration-underline',\n                     !isOver && 'text-truncate'\n                  )}\n               >\n                  {n.titles.pretty}\n               </Card.Title>\n            </Card.Body>\n         </Link>\n      </Card>\n   );\n};\n\nexport default DoujinCard;\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSearchParams } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { useAllMangasQuery } from '../slices/MangaApi';\nimport { LoadingMangas } from './sub-components/Loading';\nimport PaginationComponent from './sub-components/Navigation';\nimport DoujinCard from './sub-components/DoujinCard';\n\nconst Reader: FC = () => {\n   const blur = useToggle(true);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n      })\n   );\n   const mangas = useAllMangasQuery({\n      page: params.get('page') || 1,\n   });\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            mangas.refetch();\n         }}\n         next={next}\n         page={mangas?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n   return (\n      <Container className=\"d-flex flex-column gap-2 py-2\">\n         <PageComp />\n         <div className=\"d-flex flex-wrap gap-2 justify-content-center\">\n            {mangas.isSuccess && !mangas.isFetching ? (\n               mangas.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={mangas.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : (\n               <LoadingMangas />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default Reader;\n","import React, { useMemo, useState } from 'react';\nimport {\n   Button,\n   Container,\n   Form,\n   FormControl,\n   InputGroup,\n   Navbar,\n   ListGroup,\n   Card,\n   Image,\n   Spinner,\n   Nav,\n   Dropdown,\n   SplitButton,\n   Badge,\n} from 'react-bootstrap';\nimport path from 'path';\nimport { Link } from 'react-router-dom';\nimport { Manga } from '../../../../src/types';\nimport { useSearchQuery } from '../../slices/MangaApi';\nimport _ from 'lodash';\nimport { useToggle } from 'react-use';\n\ninterface PSearch {\n   item: Manga;\n}\n\nconst SearchResult: React.FC<PSearch> = (props) => {\n   var thumbnail = `/gallery/${props.item.id}/${path.basename(\n      props.item.thumbnail.url\n   )}`;\n   return (\n      <ListGroup.Item\n         style={{ height: '90px' }}\n         className=\"d-flex bg-secondary bg-opacity-50 position-relative\"\n      >\n         <Image\n            className=\"flex-shrink-0 me-2 rounded\"\n            src={thumbnail}\n            width=\"60\"\n         />\n         <Link\n            className=\"d-inline-block text-truncate stretched-link\"\n            to={`/manga/${props.item.id}`}\n         >\n            <div>{props.item.titles.pretty}</div>\n            <div className=\"d-flex flex-wrap\">\n               {_.take(\n                  props.item.tags.all.filter((e) => e.type === 'tag'),\n                  5\n               ).map((e) => (\n                  <Badge>{e.name}</Badge>\n               ))}\n               {props.item.tags.all.length > 5 && (\n                  <Badge>...{props.item.tags.all.length - 5} more</Badge>\n               )}\n            </div>\n         </Link>\n      </ListGroup.Item>\n   );\n};\n\nconst Header: React.FC = () => {\n   const [value, setSearch] = useState('');\n   const [thumb, setThumb] = useToggle(false);\n   const [all, setAll] = useToggle(false);\n   const [searchBy, setSearchBy] = useState('title');\n   const searchVals = useMemo(\n      () => ['artist', 'tag', 'language', 'category', 'parody', 'title'],\n      []\n   );\n   const search = useSearchQuery({\n      q: value,\n      by: searchBy as any,\n   });\n   // console.log(search);\n\n   return (\n      <Navbar expand=\"lg\">\n         <Container>\n            <Link to=\"/\">\n               <Navbar.Brand>\n                  <img\n                     alt=\"\"\n                     src=\"/favicon.png\"\n                     height=\"60\"\n                     className=\"d-inline-block align-top\"\n                  />\n               </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle className=\"bg-light\" aria-controls=\"nav\" />\n            <Navbar.Collapse id=\"nav\" className=\"justify-content-md-end py-2\">\n               <Link className=\"nav-link\" to=\"/online\">\n                  Online Mode\n               </Link>\n               <Nav.Link\n                  onClick={() => {\n                     if (!thumb) {\n                        setThumb(true);\n                        window\n                           .fetch('/api/refresh?type=thumb')\n                           .then(() => setThumb(false))\n                           .catch(() => setThumb(false));\n                     }\n                  }}\n                  className=\"nav-link\"\n                  style={\n                     {\n                        pointerEvents: thumb && 'none',\n                     } as any\n                  }\n               >\n                  Reload Covers\n               </Nav.Link>\n               <Nav.Link\n                  onClick={() => {\n                     if (!all) {\n                        setAll(true);\n                        window\n                           .fetch('/api/refresh?type=all')\n                           .then(() => setAll(false))\n                           .catch(() => setAll(false));\n                     }\n                  }}\n                  className=\"nav-link\"\n                  style={\n                     {\n                        pointerEvents: all && 'none',\n                     } as any\n                  }\n               >\n                  Reload Mangas\n               </Nav.Link>\n               <Form className=\"position-relative\">\n                  <InputGroup>\n                     <FormControl\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        className=\"me-2\"\n                        aria-label=\"Search\"\n                        autoComplete=\"none\"\n                        value={value}\n                        onChange={(e) => setSearch(e.target.value)}\n                     />\n                     <SplitButton\n                        variant=\"outline-secondary\"\n                        title={searchBy}\n                        id=\"segmented-button-dropdown-2\"\n                        align=\"end\"\n                        style={{\n                           zIndex: 9999,\n                        }}\n                     >\n                        {searchVals\n                           .filter((e) => e !== searchBy)\n                           .map((e, i) => (\n                              <Dropdown.Item\n                                 key={i}\n                                 onClick={() => setSearchBy(e)}\n                                 href=\"#\"\n                              >\n                                 {e}\n                              </Dropdown.Item>\n                           ))}\n                     </SplitButton>\n                  </InputGroup>\n                  <Card\n                     className=\"position-absolute top-100 end-0 rounded mt-2 bg-opacity-0\"\n                     style={{\n                        width: '450px',\n                        maxHeight: '400px',\n                        zIndex: 9000,\n                        display: !value ? 'none' : undefined,\n                     }}\n                  >\n                     <ListGroup\n                        className=\"overflow-auto bg-opacity-0\"\n                        variant=\"flush\"\n                     >\n                        {search.isFetching && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              <Spinner animation=\"border\" role=\"status\">\n                                 <span className=\"visually-hidden\">\n                                    Loading...\n                                 </span>\n                              </Spinner>\n                           </ListGroup.Item>\n                        )}\n                        {!search.isFetching && search?.data?.length === 0 && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              Nothing Found :(\n                           </ListGroup.Item>\n                        )}\n                        {search.isSuccess &&\n                           search.data?.map((e, i) => (\n                              <SearchResult key={e.id} item={e} />\n                           ))}\n                     </ListGroup>\n                  </Card>\n               </Form>\n            </Navbar.Collapse>\n         </Container>\n      </Navbar>\n   );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport Reader from './Reader';\r\nimport Header from './sub-components/Header';\r\n\r\nconst Main: React.FC = () => {\r\n   return (\r\n      <div style={{ height: '100vh' }}>\r\n         <Header />\r\n         <Reader />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/temp2.5c1b4c28.png\";","import { Button } from 'react-bootstrap';\nimport img from '../../img/temp2.png';\n\nconst NotFound = () => (\n   <div\n      className=\"position-fixed top-0 start-0 container-fluid\"\n      style={{\n         height: '100vh',\n         display: 'grid',\n         placeItems: 'center',\n         alignContent: 'center',\n      }}\n   >\n      <h1 className=\"text-danger\">404 Not Found</h1>\n      <img src={img} alt=\"kono dio da\" height={window.innerHeight / 2} />\n      <Button\n         variant=\"info\"\n         className=\"mt-2\"\n         onClick={() => window.history.back()}\n      >\n         Go Home Now\n      </Button>\n   </div>\n);\n\nexport default NotFound;\n","/* eslint-disable no-restricted-globals */\nimport { FC, useEffect } from 'react';\nimport {\n   MdZoomIn,\n   MdZoomOut,\n   MdBrightnessHigh,\n   MdBrightnessLow,\n   MdStop,\n   MdPlayCircleFilled,\n   MdArrowLeft,\n   MdArrowRight,\n} from 'react-icons/md';\nimport { useToggle, useRafLoop, useCounter, useEvent } from 'react-use';\nimport { Button, Card } from 'react-bootstrap';\n\nconst MangaHeader: FC<any> = (props) => {\n   var [isSlide, toggleSlide] = useToggle(false);\n   var [showPanel, togglePanel] = useToggle(true);\n   var [isBright, toggleBright] = useToggle(true);\n   var [zoomValue, zoom] = useCounter(600, 900, 300);\n   var [stopLoop, startLoop] = useRafLoop(() => {\n      if (window.scrollY < document.body.scrollHeight) {\n         window.scrollBy({\n            left: 0,\n            top:\n               (document.body.scrollHeight / props.manga?.pages.length) * 0.004,\n            behavior: 'smooth',\n         });\n      } else {\n         toggleSlide(false);\n      }\n   }, isSlide);\n\n   useEffect(() => {\n      if (isSlide) {\n         startLoop();\n      } else {\n         // setFrames.reset();\n         stopLoop();\n      }\n      return () => stopLoop();\n   }, [isSlide, startLoop, stopLoop]);\n   useEffect(() => {\n      if (isBright) {\n         props.setBright('brightness(1)');\n      } else {\n         props.setBright('brightness(0.65)');\n      }\n   }, [isBright, props]);\n   useEffect(() => {\n      props.setZoom(`${zoomValue || 600}px`);\n   }, [zoomValue, props]);\n   return (\n      <div\n         style={{ zIndex: 9999, height: '6rem' }}\n         className=\"d-flex gap-2 position-fixed me-3 end-0 top-0 mt-3 \"\n      >\n         <Card\n            style={{\n               maxWidth: showPanel ? '0' : '21rem',\n               overflowX: 'hidden',\n               transition: '0.2s',\n            }}\n            className=\"bg-secondary text-center\"\n         >\n            <Card.Header className=\"text-info text-truncate\">\n               {props.manga?.titles.english || '...'}\n            </Card.Header>\n            <Card.Body className=\"p-2 d-flex flex-wrap gap-2\">\n               <Button\n                  onClick={() => {\n                     zoom.inc(50);\n                  }}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  <MdZoomIn alignmentBaseline=\"central\" />\n               </Button>\n               <Button\n                  onClick={() => {\n                     zoom.dec(50);\n                  }}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  <MdZoomOut alignmentBaseline=\"central\" />\n               </Button>\n               <Button\n                  onClick={() => toggleBright()}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  {isBright ? (\n                     <MdBrightnessHigh alignmentBaseline=\"central\" />\n                  ) : (\n                     <MdBrightnessLow alignmentBaseline=\"central\" />\n                  )}\n               </Button>\n               <Button\n                  onClick={() => toggleSlide()}\n                  variant=\"outline-primary\"\n                  className=\"px-2 py-1 align-middle\"\n               >\n                  {isSlide === false ? (\n                     <MdPlayCircleFilled alignmentBaseline=\"central\" />\n                  ) : (\n                     <MdStop alignmentBaseline=\"central\" />\n                  )}\n               </Button>\n            </Card.Body>\n         </Card>\n         <Button onClick={togglePanel} className=\"p-0\">\n            {showPanel ? (\n               <MdArrowRight fontSize=\"2rem\" />\n            ) : (\n               <MdArrowLeft fontSize=\"2rem\" />\n            )}\n         </Button>\n      </div>\n   );\n};\n\nexport default MangaHeader;\n","import { Image } from 'react-bootstrap';\nimport { MangaViewProps } from '../props';\n\nconst MangaView: React.FC<MangaViewProps> = (props) => {\n   return (\n      <div>\n         <Image\n            src={props.src}\n            alt={props.img.pageNumber + '.' + props.img.extension}\n            style={{ width: '100%' }}\n            className=\"rounded\"\n         />\n      </div>\n   );\n};\n\nexport default MangaView;\n","import { useEffect, useState } from 'react';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\n// import classNames from 'classnames';\r\nimport NotFound from './sub-components/404';\r\nimport { LoadingScreen } from './sub-components/Loading';\r\nimport { useParams } from 'react-router';\r\nimport { Image, ProgressBar } from 'react-bootstrap';\r\nimport MangaHeader from './sub-components/MangaHeader';\r\nimport MangaView from './sub-components/MangaView';\r\nimport { useEvent } from 'react-use';\r\n\r\nconst Manga = () => {\r\n   var { id } = useParams();\r\n   var manga = useGetMangaQuery(id as string);\r\n   var [scrollProgress, setProgress] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n   var [zoomValue, setZoom] = useState('');\r\n   var [brightValue, setBright] = useState('');\r\n   var [lastZoomPercent, setZoomPercent] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n\r\n   useEvent('scroll', () => {\r\n      setProgress(\r\n         (window.scrollY / (document.body.scrollHeight - window.innerHeight)) *\r\n            100\r\n      );\r\n   });\r\n\r\n   useEffect(() => {\r\n      // console.log('zoom change');\r\n      setZoomPercent(\r\n         window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n      );\r\n   }, [zoomValue]);\r\n\r\n   if (manga.isFetching) {\r\n      document.title = 'Loading...';\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (manga.isSuccess) {\r\n         document.title = manga.data.titles.english;\r\n      }\r\n   }, [manga.data?.titles, manga.isSuccess]);\r\n\r\n   if (typeof id === 'undefined' || manga.isError) {\r\n      return <NotFound />;\r\n   }\r\n   return (\r\n      <>\r\n         {manga.isSuccess && (\r\n            <ProgressBar\r\n               style={{\r\n                  height: '5px',\r\n                  width: '100vh !important',\r\n                  zIndex: 9999,\r\n                  position: 'fixed',\r\n                  top: 0,\r\n                  left: 0,\r\n                  transition: '0.1s',\r\n               }}\r\n               className=\"rounded-0 w-100\"\r\n               now={scrollProgress}\r\n            />\r\n         )}\r\n         <div className=\"container-fluid\" style={{ height: '100vh' }}>\r\n            {manga.isLoading && <LoadingScreen />}\r\n            <MangaHeader\r\n               setZoom={setZoom}\r\n               setBright={setBright}\r\n               manga={manga.data}\r\n            />\r\n            <div\r\n               style={{\r\n                  maxWidth: zoomValue,\r\n                  filter: brightValue,\r\n                  transition: 'width 0.05s',\r\n               }}\r\n               onTransitionEnd={() => {\r\n                  window.scrollTo(\r\n                     0,\r\n                     (document.body.scrollHeight - window.innerHeight) *\r\n                        lastZoomPercent\r\n                  );\r\n                  console.log(\r\n                     window.scrollY /\r\n                        (document.body.scrollHeight - window.innerHeight)\r\n                  );\r\n                  // console.log('end');\r\n               }}\r\n               className=\"mx-auto d-flex flex-column align-items-stretch gap-2 mt-2\"\r\n            >\r\n               {manga.isSuccess &&\r\n                  manga.data.pages?.map((e) => {\r\n                     var src = `/api/fetch?url=${e.url}`;\r\n                     if (manga.data?.availableOffline) {\r\n                        src = `/gallery/${manga?.data?.id}/${e.pageNumber}.${e.extension}`;\r\n                        console.log('offline manga');\r\n                     }\r\n                     return <MangaView key={e.pageNumber} img={e} src={src} />;\r\n                  })}\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import { useMemo, useState } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSearchQuery } from '../../slices/MangaApi';\n\nconst Header: React.FC = () => {\n   const [value, setSearch] = useState('');\n   const links = useMemo(\n      () => [\n         {\n            to: '/online',\n            text: 'Homepage',\n         },\n         {\n            to: '/online/downloads',\n            text: 'Downloads',\n         },\n         {\n            to: '/',\n            text: 'Go Offline',\n         },\n         {\n            to: '/online/search',\n            text: 'Search',\n         },\n      ],\n      []\n   );\n   const search = useSearchQuery(value);\n   // console.log(search);\n\n   return (\n      <Navbar expand=\"lg\">\n         <Container>\n            <Link to=\"/\">\n               <Navbar.Brand>\n                  <img\n                     alt=\"\"\n                     src=\"/favicon.png\"\n                     height=\"60\"\n                     className=\"d-inline-block align-top\"\n                  />\n               </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle className=\"bg-light\" aria-controls=\"nav\" />\n            <Navbar.Collapse id=\"nav\" className=\"justify-content-md-end py-2\">\n               {links\n                  .filter((e) => e.to !== window.location.pathname)\n                  .map((e) => (\n                     <Link key={e.to} className=\"nav-link\" to={e.to}>\n                        {e.text}\n                     </Link>\n                  ))}\n            </Navbar.Collapse>\n         </Container>\n      </Navbar>\n   );\n};\n\nexport default Header;\n","import { Doujin } from 'nhentai';\nimport {\n   Button,\n   Card,\n   Container,\n   OverlayTrigger,\n   Tooltip,\n} from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useGetHomepageQuery } from '../../slices/HentaiApi';\nimport { LoadingMangas } from '../sub-components/Loading';\nimport PaginationComponent from '../sub-components/Navigation';\nimport { SortMethods } from 'nhentai/lib/constants';\nimport _ from 'lodash';\nimport { getSearchParams } from '../props';\nimport { useToggle } from 'react-use';\nimport DoujinCard from '../sub-components/DoujinCard';\nimport { useMemo } from 'react';\n\nconst Homepage: React.FC = (props) => {\n   const blur = useToggle(true);\n   const Sorts = useMemo(() => _.toPairs(SortMethods), []);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n         sort: '',\n      })\n   );\n   const doujins = useGetHomepageQuery(getSearchParams(params));\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            doujins.refetch();\n         }}\n         next={(e: any) =>\n            next(\n               new URLSearchParams({\n                  ...getSearchParams(params),\n                  ...getSearchParams(e),\n               })\n            )\n         }\n         page={doujins?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n\n   return (\n      <Container className=\"d-flex flex-column gap-3 py-2\">\n         <PageComp />\n         <div className=\"d-flex justify-content-center gap-2\">\n            {Sorts.map((e) => (\n               <Button\n                  variant={\n                     params.get('sort') === e[1] ? 'primary' : 'outline-primary'\n                  }\n                  key={e[0]}\n                  onClick={() =>\n                     next(\n                        new URLSearchParams({\n                           ...getSearchParams(params),\n                           sort: e[1],\n                        })\n                     )\n                  }\n               >\n                  {e[0]}\n               </Button>\n            ))}\n         </div>\n         <div className=\"d-flex flex-wrap gap-4 justify-content-center\">\n            {doujins.isSuccess && !doujins.isFetching ? (\n               doujins.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={doujins.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : doujins.isError ? (\n               <>\n                  <div className=\"h-100 d-flex align-items-center justify-content-center flex-column mx-auto my-5\">\n                     <h1>something went wrong...</h1>\n                     <Button\n                        className=\"w-100\"\n                        onClick={() => {\n                           doujins.refetch();\n                        }}\n                     >\n                        Retry?\n                     </Button>\n                  </div>\n               </>\n            ) : (\n               <LoadingMangas num={10} />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default Homepage;\n","import Header from './online/Header';\nimport Homepage from './online/Homepage';\n\nconst Online: React.FC = (props) => {\n   return (\n      <div\n         style={{\n            height: '100vh',\n         }}\n      >\n         <Header />\n         <Homepage />\n      </div>\n   );\n};\n\nexport default Online;\n","import TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en.json';\n\nTimeAgo.addDefaultLocale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nexport default timeAgo\n","import { useEffect, useState } from 'react';\nimport {\n   Badge,\n   Button,\n   Col,\n   Container,\n   Image,\n   Row,\n   Spinner,\n} from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\nimport { useToggle } from 'react-use';\nimport { Manga } from '../../../../src/types';\nimport { useGetDoujinQuery } from '../../slices/HentaiApi';\nimport {\n   useLazyRemoveMangaQuery,\n   useLazySaveMangaQuery,\n} from '../../slices/MangaApi';\nimport { useDispatch } from '../../store';\nimport timeAgo from '../../timeAgo';\n\nconst TagButton: React.FC<{ type: string; doujin?: Manga }> = ({\n   doujin,\n   type,\n   children,\n}) => {\n   var [isNone, setNone] = useToggle(false);\n\n   useEffect(() => {\n      if (doujin?.tags.all.filter((e) => e.type === type).length < 1) {\n         setNone(true);\n      }\n   }, [doujin?.tags.all, setNone, type]);\n   if (isNone) {\n      return <></>;\n   }\n   return (\n      <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n         <span className=\"d-inline-flex gap-2 flex-wrap align-items-center\">\n            <span className=\"fw-bold\">{children}</span>\n            {doujin?.tags.all\n               .filter((e) => e.type === type)\n               .map((e) => {\n                  console.log(e.url);\n                  return (\n                     <a\n                        key={e.id}\n                        className=\"btn btn-outline-secondary py-1 px-2\"\n                        href={e.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                     >\n                        <span className=\"fst-italic me-2\">{e.name}</span>\n                        <Badge bg=\"secondary\">{e.count}</Badge>\n                     </a>\n                  );\n               })}\n         </span>\n      </div>\n   );\n};\n\nconst DoujinPage: React.FC = (props) => {\n   const { id } = useParams();\n   const doujin = useGetDoujinQuery(id as string);\n   const [offline, setOffline] = useState<boolean>();\n   const [saveManga, saved] = useLazySaveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const [removeManga, removed] = useLazyRemoveMangaQuery({\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n   });\n   const showTitle = () => {\n      var splitted = doujin.data?.titles.english.split(\n         doujin.data?.titles.pretty\n      ) as string[];\n      return (\n         <>\n            <span className=\"fst-italic\">{splitted[0]}</span>\n            <span className=\"fw-bold\">{doujin.data?.titles.pretty}</span>{' '}\n            <span className=\"fst-italic\">{splitted[1]}</span>\n         </>\n      );\n   };\n\n   useEffect(() => {\n      if (saved.isSuccess && doujin.isSuccess) {\n         setOffline(true);\n      }\n   }, [saved, doujin]);\n   useEffect(() => {\n      if (removed.isSuccess && doujin.isSuccess) {\n         setOffline(false);\n      }\n   }, [removed, doujin]);\n\n   useEffect(() => {\n      if (doujin.isSuccess) {\n         document.title = doujin.data.titles.pretty;\n         setOffline(doujin.data.availableOffline);\n      }\n   }, [doujin]);\n   return (\n      <Container className=\"w-75 py-4 bg-secondary bg-opacity-50 shadow rounded-2 my-3\">\n         {doujin.isFetching && (\n            <Spinner\n               variant=\"primary\"\n               animation=\"border\"\n               role=\"status\"\n            ></Spinner>\n         )}\n         {doujin.isSuccess && (\n            <Row className=\"text-light\">\n               <Col xs={5}>\n                  <div className=\"position-relative\">\n                     <Link to={`/manga/${doujin.data.id}`}>\n                        <Image\n                           rounded\n                           style={{ width: '100%', filter: 'blur(3px)' }}\n                           src={`/api/fetch?url=${doujin.data?.cover.url}`}\n                        />\n                     </Link>\n                     <div className=\"position-absolute top-0 start-0\">\n                        <Button\n                           onClick={() => {\n                              if (offline) {\n                                 removeManga(doujin.data.id.toString(), false);\n                              } else {\n                                 saveManga(doujin.data.id.toString(), false);\n                              }\n                           }}\n                           className=\"me-2\"\n                           variant=\"primary\"\n                        >\n                           {offline ? 'Delete' : 'Download'}\n                        </Button>\n                        <Link\n                           className=\"btn btn-danger\"\n                           to={`/manga/${doujin.data.id}`}\n                        >\n                           Read\n                        </Link>\n                     </div>\n                  </div>\n               </Col>\n               <Col className=\"py-2 d-flex flex-wrap align-items-start align-content-start gap-3\">\n                  <div className=\"lead bg-gradient bg-light bg-opacity-50 text-black rounded p-2 shadow flex-fill\">\n                     {showTitle()}\n                  </div>\n                  <TagButton type=\"tag\" doujin={doujin.data}>\n                     Tags:\n                  </TagButton>\n                  <TagButton type=\"artist\" doujin={doujin.data}>\n                     Artists:\n                  </TagButton>\n                  <TagButton type=\"group\" doujin={doujin.data}>\n                     Groups:\n                  </TagButton>\n                  <TagButton type=\"language\" doujin={doujin.data}>\n                     Languages:\n                  </TagButton>\n                  <TagButton type=\"category\" doujin={doujin.data}>\n                     Categories:\n                  </TagButton>\n                  <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n                     <span className=\"fw-bold me-1 align-middle\">Pages:</span>\n                     <span className=\"btn btn-outline-secondary py-1\">\n                        {doujin.data?.length}\n                     </span>\n                  </div>\n                  <div className=\"bg-light bg-opacity-75 text-dark rounded p-2 shadow\">\n                     <span className=\"fw-bold me-1 align-middle\">\n                        Uploaded:{' '}\n                     </span>\n                     <span className=\"btn btn-outline-secondary py-1\">\n                        {timeAgo.format(\n                           new Date(doujin.data?.uploadDate),\n                           'round-minute'\n                        )}\n                     </span>\n                  </div>\n               </Col>\n            </Row>\n         )}\n      </Container>\n   );\n};\n\nexport default DoujinPage;\n","import {\n   Button,\n   Container,\n   Form,\n   FormControl,\n   InputGroup,\n} from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useSearchQuery } from '../../slices/HentaiApi';\nimport { LoadingMangas } from '../sub-components/Loading';\nimport PaginationComponent from '../sub-components/Navigation';\nimport { SortMethods } from 'nhentai/lib/constants';\nimport _ from 'lodash';\nimport { getSearchParams } from '../props';\nimport { useMemo, useRef } from 'react';\nimport { useToggle } from 'react-use';\nimport DoujinCard from '../sub-components/DoujinCard';\n\nconst SearchPage: React.FC = (props) => {\n   const blur = useToggle(true);\n   const searchRef = useRef<HTMLInputElement>();\n   const Sorts = useMemo(() => _.toPairs(SortMethods), []);\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '1',\n         sort: '',\n         q: '*',\n      })\n   );\n   const doujins = useSearchQuery(getSearchParams(params));\n   var PageComp = () => (\n      <PaginationComponent\n         refresh={() => {\n            doujins.refetch();\n         }}\n         next={(e: any) =>\n            next(\n               new URLSearchParams({\n                  ...getSearchParams(params),\n                  ...getSearchParams(e),\n               })\n            )\n         }\n         page={doujins?.data}\n         blur={blur}\n         current={Number(params.get('page') || 1)}\n      />\n   );\n\n   return (\n      <Container className=\"d-flex flex-column gap-3 py-2\">\n         <Form\n            onSubmit={(e) => {\n               e.preventDefault();\n               next({\n                  ...getSearchParams(params),\n                  q: searchRef.current?.value,\n               });\n            }}\n         >\n            <FormControl\n               type=\"search\"\n               placeholder=\"Search\"\n               aria-label=\"Search\"\n               autoComplete=\"none\"\n               // name=\"q\"\n               ref={searchRef as any}\n            />\n            {/* <InputGroup className=\"mt-2\">\n               <InputGroup.Text>Tag</InputGroup.Text>\n               <FormControl\n                  type=\"text\"\n                  placeholder=\"Search by tag here...\"\n                  name=\"tag\"\n                  aria-label=\"Tag\"\n                  autoComplete=\"none\"\n               />\n            </InputGroup> */}\n         </Form>\n         <PageComp />\n         <div className=\"d-flex justify-content-center gap-2\">\n            {Sorts.map((e) => (\n               <Button\n                  variant={\n                     params.get('sort') === e[1] ? 'primary' : 'outline-primary'\n                  }\n                  key={e[0]}\n                  onClick={() =>\n                     next(\n                        new URLSearchParams({\n                           ...getSearchParams(params),\n                           sort: e[1],\n                        })\n                     )\n                  }\n               >\n                  {e[0]}\n               </Button>\n            ))}\n         </div>\n         <div className=\"d-flex flex-wrap gap-4 justify-content-center\">\n            {doujins.isSuccess && !doujins.isFetching ? (\n               doujins.data?.doujins.map((n) => {\n                  return (\n                     <DoujinCard\n                        refetch={doujins.refetch}\n                        key={n.id}\n                        doujin={n}\n                        blur={blur}\n                     />\n                  );\n               })\n            ) : doujins.isError ? (\n               <>\n                  <div className=\"h-100 d-flex align-items-center justify-content-center flex-column mx-auto my-5\">\n                     <h1>Search something...</h1>\n                     <Button\n                        className=\"w-100\"\n                        onClick={() => {\n                           searchRef.current?.focus();\n                        }}\n                     >\n                        Search\n                     </Button>\n                  </div>\n               </>\n            ) : (\n               <LoadingMangas num={10} />\n            )}\n         </div>\n         <PageComp />\n      </Container>\n   );\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { FaAngleUp } from 'react-icons/fa';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport Main from './components/Main';\nimport Manga from './components/Manga';\nimport Online from './components/Online';\nimport DoujinPage from './components/online/Doujin';\nimport Header from './components/online/Header';\nimport SearchPage from './components/online/SearchPage';\nimport NotFound from './components/sub-components/404';\nimport './stylesheets/App.scss';\n\nconst ToTopComponent: React.FC = () => {\n   const location = useLocation();\n   const nav = useNavigate();\n   return (\n      <ButtonGroup\n         vertical\n         style={{ right: '2rem', bottom: '3rem', position: 'fixed' }}\n      >\n         <>\n            <Button\n               onClick={() =>\n                  window.scroll({\n                     behavior: 'smooth',\n                     top: 0,\n                     left: 0,\n                  })\n               }\n            >\n               <FaAngleUp fontSize=\"3rem\" />\n            </Button>\n            <Button variant=\"secondary\" onClick={() => nav('/')}>\n               Go Back\n            </Button>\n         </>\n      </ButtonGroup>\n   );\n};\n\nconst App = () => {\n   return (\n      <>\n         <Routes>\n            <Route path=\"/\" caseSensitive element={<Main />} />\n            <Route path=\"/manga\" caseSensitive>\n               <Route\n                  path=\":id\"\n                  element={\n                     <>\n                        <Manga />\n                        <ToTopComponent />\n                     </>\n                  }\n               />\n            </Route>\n            <Route path=\"/online\" caseSensitive element={<Online />}></Route>\n            <Route\n               path=\"/online/search\"\n               element={\n                  <>\n                     <Header />\n                     <SearchPage />\n                  </>\n               }\n            />\n            <Route\n               path=\"/online/:id\"\n               element={\n                  <>\n                     <Header />\n                     <DoujinPage />\n                  </>\n               }\n            />\n            <Route path=\"*\" element={<NotFound />} />\n         </Routes>\n      </>\n   );\n};\n\nexport default App;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n   <Provider store={store}>\n      <Router>\n         <App />\n      </Router>\n   </Provider>,\n   document.querySelector('#container')\n);\n"],"sourceRoot":""}