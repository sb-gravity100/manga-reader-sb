{"version":3,"sources":["style.module.scss","slices/ControlSlice.ts","slices/MangaApi.ts","store.ts","components/sub-components/ReaderItem.tsx","components/Reader.tsx","components/sub-components/ErrorBlock.tsx","components/Main.tsx","img/404.jpg","components/MangaView.tsx","components/MangaHeader.tsx","components/Manga.tsx","components/sub-components/404.tsx","App.tsx","Footer.tsx","index.tsx"],"names":["module","exports","ControlSlice","createSlice","initialState","name","reducers","incZoom","state","zoom","decZoom","setZoom","action","payload","setBrightness","brightness","setSearch","search","clearSearch","actions","ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","URLSearchParams","_","toPairs","forEach","e","append","toString","getManga","id","q","useAllMangasQuery","useGetMangaQuery","useSearchQuery","useLazySearchQuery","store","configureStore","reducer","controls","ControlReducer","middleware","getDefMid","concat","useSelector","useReduxSelector","ReaderItem","props","item","className","title","to","src","cover","undefined","NavComponent","p_index","isCurrent","chunks","Number","disabled","length","Reader","useSearchParam","chunk","data","loading_props","text","useSpring","from","opacity","loop","reverse","reset","i","match","loading","classname","map","styles","loading_style","span","style","ErrorBlock","children","hasErrors","errors","retry","isFetching","console","log","errorBlock","retryBtn","onClick","cursor","errorMsg","message","SearchComponent","backgroundImage","SearchBar","type","placeholder","onChange","handleSearchChange","autoComplete","autoCorrect","aria-autocomplete","sortBy","manga","Main","searchQuery","dispatch","useReduxDispatch","mangas","header_flex","color","refresh_btn","fontSize","target","value","refetch","isError","error","total","MangaView","panelImg","path","alt","errorImg","background","height","MangaHeader","zoomValue","brightVal","setBright","setZoomVal","min","max","valueAsNumber","Manga","mangaID","isLoading","useLocalStorage","viewerStyles","StyleSheet","create","brightnessAdjust","filter","widthAdjust","maxWidth","transition","useEffect","document","window","scroll","top","left","Boolean","bgColor","css","d","k","NotFound","NotFoundBlock","NotFoundCodeBlock","GoHomeLink","App","exact","component","Footer","p_overflow","ToTopComponent","TopComponent","behavior","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.0667b337.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_btn\":\"style_scroll_btn__1qwJo\",\"center\":\"style_center__ZZr7Q\",\"header\":\"style_header__1cEzW\",\"flex_column\":\"style_flex_column__rYQGx\",\"transitionize\":\"style_transitionize__3ZIR4\",\"NotFoundBlock\":\"style_NotFoundBlock__3Qkw9\",\"NotFoundCodeBlock\":\"style_NotFoundCodeBlock__2w01Y\",\"GoHomeLink\":\"style_GoHomeLink__KpoyC\",\"errorMsg\":\"style_errorMsg__1I8ay\",\"errorBlock\":\"style_errorBlock__2r020\",\"retryBtn\":\"style_retryBtn__2a6sk\",\"p_overflow\":\"style_p_overflow__2gBLB\",\"loading_style\":\"style_loading_style__3PPO0\",\"header_flex\":\"style_header_flex__s59wb\",\"refresh_btn\":\"style_refresh_btn__NdJwx\",\"search_bar\":\"style_search_bar__lJHZP\",\"marquee\":\"style_marquee__40h8G\",\"marquee_child\":\"style_marquee_child__aYhP3\",\"marquee_animation\":\"style_marquee_animation__2XdkS\",\"TopComponent\":\"style_TopComponent__1J8Z5\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport _ from 'lodash';\r\n\r\ninterface ControlState {\r\n   zoom: number;\r\n   brightness: number;\r\n   search: string;\r\n}\r\n\r\nconst initialState = {} as ControlState;\r\n\r\nconst ControlSlice = createSlice({\r\n   initialState,\r\n   name: 'control',\r\n   reducers: {\r\n      incZoom(state) {\r\n         state.zoom += 1;\r\n      },\r\n      decZoom(state) {\r\n         state.zoom -= 1;\r\n      },\r\n      setZoom(state, action: PayloadAction<number>) {\r\n         state.zoom = action.payload;\r\n      },\r\n      setBrightness(state, action: PayloadAction<number>) {\r\n         state.brightness = action.payload;\r\n      },\r\n      setSearch(state, action: PayloadAction<string>) {\r\n         state.search = action.payload;\r\n      },\r\n      clearSearch(state) {\r\n         state.search = '';\r\n      },\r\n   },\r\n});\r\n\r\nexport const {\r\n   incZoom,\r\n   decZoom,\r\n   setZoom,\r\n   setBrightness,\r\n   setSearch,\r\n   clearSearch,\r\n} = ControlSlice.actions;\r\n\r\nexport default ControlSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport _ from 'lodash';\r\nimport { Manga, SearchResult } from '../../../src/types';\r\n\r\ninterface MangasQuery {\r\n   offset?: number;\r\n   limit?: number;\r\n   order?: any;\r\n   sort?: string | string[];\r\n   refresh?: any;\r\n   _updateCovers?: any;\r\n   page?: number;\r\n}\r\n\r\nconst ApiSlice = createApi({\r\n   reducerPath: 'mangaApi',\r\n   baseQuery: fetchBaseQuery({\r\n      baseUrl: '/api',\r\n   }),\r\n   endpoints: (builder) => ({\r\n      allMangas: builder.query<Manga[], MangasQuery | null>({\r\n         query(opts) {\r\n            const query = new URLSearchParams();\r\n            _.toPairs(opts as any).forEach((e) => {\r\n               query.append(e[0], e[1] as string);\r\n            });\r\n            return `/mangas?${query.toString()}`;\r\n         },\r\n      }),\r\n      getManga: builder.query<Manga, number>({\r\n         query(id) {\r\n            return `/manga/${id}`;\r\n         },\r\n      }),\r\n      search: builder.query<SearchResult[], string>({\r\n         query(q) {\r\n            return `/?q=${q}`;\r\n         },\r\n      }),\r\n   }),\r\n});\r\n\r\nexport default ApiSlice;\r\n\r\nexport const {\r\n   useAllMangasQuery,\r\n   useGetMangaQuery,\r\n   useLazySearchQuery,\r\n   useSearchQuery,\r\n} = ApiSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n   useDispatch as useReduxDispatch,\r\n   useSelector as useReduxSelector,\r\n   TypedUseSelectorHook,\r\n} from 'react-redux';\r\nimport ControlReducer from './slices/ControlSlice';\r\nimport ApiSlice from './slices/MangaApi';\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      controls: ControlReducer,\r\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\r\n   },\r\n   middleware: (getDefMid) => getDefMid().concat(ApiSlice.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\r\nexport default store;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReaderItemProps } from '../props';\r\n\r\nconst ReaderItem: FC<ReaderItemProps> = props => {\r\n   const { item } = props;\r\n\r\n   return (\r\n      <Link className=\"flex-item\" title={item.name} to={`/manga?id=${item.id}`}>\r\n         {true ? (\r\n            <img className=\"bg-img\" src={item.cover || undefined} />\r\n         ) : (\r\n            <div\r\n               className=\"bg-img\"\r\n               style={{\r\n                  filter: 'none',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n               }}>\r\n               Loading...\r\n            </div>\r\n         )}\r\n         <div className=\"description\">\r\n            <p>{item.name}</p>\r\n         </div>\r\n      </Link>\r\n   );\r\n};\r\n\r\nexport default ReaderItem;\r\n","/* eslint-disable no-script-url */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport ReaderItem from './sub-components/ReaderItem';\r\nimport { useSpring, animated as anim } from 'react-spring';\r\nimport classname from 'classnames';\r\nimport {\r\n   FaAngleLeft,\r\n   FaAngleRight,\r\n   FaAngleDoubleLeft,\r\n   FaAngleDoubleRight,\r\n} from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { FC } from 'react';\r\nimport styles from '../style.module.scss';\r\nimport { useSearchParam } from 'react-use';\r\nimport { ReaderProps, NavProps } from './props';\r\n\r\nconst NavComponent: FC<NavProps> = ({ p_index, isCurrent, chunks }) => (\r\n   <div className=\"nav\">\r\n      {p_index && Number(p_index) !== 0 ? (\r\n         <>\r\n            <Link to={`/?p_index=0`}>\r\n               <button disabled={isCurrent(0)} className=\"prev\">\r\n                  <FaAngleDoubleLeft />\r\n               </button>\r\n            </Link>\r\n            <Link to={`/?p_index=${Number(p_index) - 1}`}>\r\n               <button disabled={isCurrent(0)} className=\"prev\">\r\n                  <FaAngleLeft />\r\n               </button>\r\n            </Link>\r\n         </>\r\n      ) : (\r\n         <>\r\n            <button disabled={isCurrent(0)} className=\"prev\">\r\n               <FaAngleDoubleLeft />\r\n            </button>\r\n            <button disabled={true} className=\"prev\">\r\n               <FaAngleLeft />\r\n            </button>\r\n         </>\r\n      )}\r\n      {Number(p_index || 0) !== chunks.length - 1 ? (\r\n         <>\r\n            <Link to={`/?p_index=${Number(p_index || 0) + 1}`}>\r\n               <button\r\n                  disabled={\r\n                     p_index ? Number(p_index) === chunks.length - 1 : undefined\r\n                  }\r\n                  className=\"next\">\r\n                  <FaAngleRight />\r\n               </button>\r\n            </Link>\r\n            <Link to={`/?p_index=${chunks.length - 1}`}>\r\n               <button\r\n                  disabled={\r\n                     p_index ? Number(p_index) === chunks.length - 1 : undefined\r\n                  }\r\n                  className=\"next\">\r\n                  <FaAngleDoubleRight />\r\n               </button>\r\n            </Link>\r\n         </>\r\n      ) : (\r\n         <>\r\n            <button\r\n               disabled={\r\n                  p_index ? Number(p_index) === chunks.length - 1 : undefined\r\n               }\r\n               className=\"next\">\r\n               <FaAngleRight />\r\n            </button>\r\n            <button\r\n               disabled={\r\n                  p_index ? Number(p_index) === chunks.length - 1 : undefined\r\n               }\r\n               className=\"next\">\r\n               <FaAngleDoubleRight />\r\n            </button>\r\n         </>\r\n      )}\r\n   </div>\r\n);\r\nconst Reader: FC<ReaderProps> = props => {\r\n   const p_index = useSearchParam('p_index');\r\n   const chunks = _.chunk(props.data, 10);\r\n   const loading_props = {\r\n      text: useSpring({\r\n         from: {\r\n            opacity: 1,\r\n         },\r\n         opacity: 0,\r\n         loop: { reverse: true },\r\n         reset: true,\r\n      }),\r\n   };\r\n\r\n   const isCurrent = (i: number) => {\r\n      if (typeof p_index === 'string') {\r\n         if (Number(p_index) < chunks.length && i === Number(p_index)) {\r\n            return true;\r\n         }\r\n         if (p_index.match(/last/i) && i === chunks.length - 1) {\r\n            return true;\r\n         }\r\n         if (p_index.match(/first/i) && i === 0) {\r\n            return true;\r\n         }\r\n      } else {\r\n         if (i === 0) {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   };\r\n   return (\r\n      <div className=\"main-reader\">\r\n         <NavComponent\r\n            chunks={chunks}\r\n            isCurrent={isCurrent}\r\n            p_index={p_index}\r\n         />\r\n         <div className=\"main-reader-box\">\r\n            {!props.loading && props.data ? (\r\n               <div className={classname('main-reader-flex', 'current')}>\r\n                  {chunks[p_index ? Number(p_index) : 0].map(item => (\r\n                     <ReaderItem key={item.id} item={item} />\r\n                  ))}\r\n               </div>\r\n            ) : (\r\n               <div className={styles.loading_style}>\r\n                  <h3>\r\n                     <anim.span style={loading_props.text}>\r\n                        Loading...\r\n                     </anim.span>\r\n                  </h3>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Reader;\r\n","import { FC } from 'react';\r\nimport styles from '../../style.module.scss';\r\nimport { ErrorProps } from '../props';\r\n\r\nconst ErrorBlock: FC<ErrorProps> = ({\r\n   children,\r\n   hasErrors,\r\n   errors,\r\n   retry,\r\n   isFetching,\r\n}) => {\r\n   if (hasErrors) {\r\n      console.log(hasErrors);\r\n      return (\r\n         <div className={styles.errorBlock}>\r\n            <h3>Something went wrong...</h3>\r\n            <button\r\n               className={styles.retryBtn}\r\n               onClick={() => retry()}\r\n               style={{ cursor: isFetching ? 'progress' : 'pointer' }}\r\n            >\r\n               {isFetching ? 'Retrying...' : 'Retry?'}\r\n            </button>\r\n            <code className={styles.errorMsg}>{errors?.message}</code>\r\n         </div>\r\n      );\r\n   }\r\n   return <>{children}</>;\r\n};\r\n\r\nexport default ErrorBlock;\r\n","import { Link } from 'react-router-dom';\r\nimport { MdRefresh } from 'react-icons/md';\r\nimport { FC } from 'react';\r\nimport Reader from './Reader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport { useState, useEffect, ChangeEventHandler } from 'react';\r\nimport styles from '../style.module.scss';\r\nimport { useAllMangasQuery, useSearchQuery } from '../slices/MangaApi';\r\nimport { useDispatch, useSelector } from '../store';\r\nimport { clearSearch, setSearch } from '../slices/ControlSlice';\r\nimport { SearchBarProps } from './props';\r\nimport _ from 'lodash';\r\nimport { SearchResult } from '../../../src/types';\r\n\r\nconst SearchComponent: FC<SearchResult> = (props) => (\r\n   <Link\r\n      to={`/manga?id=${props.item.id}`}\r\n      className=\"search-props.item\"\r\n      title={props.item.name}\r\n   >\r\n      <div\r\n         className=\"cover-img\"\r\n         style={{\r\n            backgroundImage: `url('${props.item.cover}')`,\r\n         }}\r\n      ></div>\r\n      <div className=\"name\">{props.item.name}</div>\r\n   </Link>\r\n);\r\n\r\nconst SearchBar: FC<SearchBarProps> = (props) => {\r\n   const search = useSearchQuery(props.search);\r\n   return (\r\n      <div className=\"search-bar\">\r\n         <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search...\"\r\n            onChange={props.handleSearchChange}\r\n            autoComplete=\"none\"\r\n            autoCorrect=\"none\"\r\n            aria-autocomplete=\"none\"\r\n         />\r\n         {search.data?.length && (\r\n            <div className=\"search-list\">\r\n               {_.sortBy(search.data).map((manga) => (\r\n                  <SearchComponent {...manga} />\r\n               ))}\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst Main = () => {\r\n   const searchQuery = useSelector((state) => state.controls.search);\r\n   const dispatch = useDispatch();\r\n   const mangas = useAllMangasQuery(null);\r\n\r\n   const handleSearchChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n      if (!e.target.value) {\r\n         dispatch(clearSearch());\r\n      } else {\r\n         dispatch(setSearch(e.target.value));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div id=\"main\">\r\n         <div className={styles.header_flex}>\r\n            <h1 className=\"logo\">\r\n               <Link to=\"/\" style={{ color: 'white' }}>\r\n                  <div>Reader</div>\r\n               </Link>\r\n            </h1>\r\n            <div className=\"btn-flex\">\r\n               <button\r\n                  // onClick={}\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <span>Refresh</span>\r\n               </button>\r\n               <button\r\n                  // onClick={}\r\n                  className={styles.refresh_btn}\r\n               >\r\n                  <MdRefresh fontSize=\"1.2rem\" />\r\n                  <span>Covers</span>\r\n               </button>\r\n            </div>\r\n         </div>\r\n         <SearchBar\r\n            handleSearchChange={handleSearchChange}\r\n            search={searchQuery}\r\n         />\r\n         <ErrorBlock\r\n            retry={mangas.refetch}\r\n            hasErrors={mangas.isError}\r\n            errors={mangas.error}\r\n            isFetching={mangas.isFetching}\r\n         >\r\n            <Reader\r\n               total={mangas?.data?.length}\r\n               data={mangas?.data}\r\n               loading={mangas.isFetching}\r\n               refetch={mangas.refetch}\r\n            />\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/404.6a579c40.jpg\";","import { FC } from 'react';\r\nimport Image from 'react-cool-img';\r\nimport errorImg from '../img/404.jpg';\r\nimport { MangaViewProps } from './props';\r\n\r\nconst MangaView: FC<MangaViewProps> = ({ panelImg }) => (\r\n   <div className=\"panel\">\r\n      <Image\r\n         src={`/${panelImg.path}`}\r\n         alt={panelImg.name}\r\n         error={errorImg}\r\n         style={!panelImg ? { background: '#444', height: '500px' } : {}}\r\n      />\r\n   </div>\r\n);\r\n\r\nexport default MangaView;\r\n","import { FC } from 'react';\r\nimport { FaPlus, FaMinus } from 'react-icons/fa';\r\nimport { MangaHeaderProps } from './props';\r\n// import styles from '../css_modules/Manga.module.scss';\r\n\r\nconst MangaHeader: FC<MangaHeaderProps> = ({\r\n   manga,\r\n   zoomValue = 5,\r\n   brightVal = 100,\r\n   setBright,\r\n   setZoomVal,\r\n}) => (\r\n   <header>\r\n      <h2 className=\"logo\">{manga?.name || '...'}</h2>\r\n      <nav>\r\n         <div className=\"bright-control\">\r\n            <span>{brightVal}</span>\r\n            <input\r\n               type=\"range\"\r\n               min=\"0\"\r\n               max=\"100\"\r\n               onChange={(e) => setBright(e.target.valueAsNumber)}\r\n               value={brightVal}\r\n            />\r\n         </div>\r\n         <div className=\"zoom-control\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={() => setZoomVal(zoomValue > 1 ? zoomValue - 1 : 1)}\r\n            >\r\n               <FaMinus />\r\n            </button>\r\n            <input\r\n               type=\"text\"\r\n               onChange={(e) =>\r\n                  e.target.valueAsNumber <= 10 &&\r\n                  e.target.valueAsNumber > 0 &&\r\n                  setZoomVal(e.target.valueAsNumber)\r\n               }\r\n               value={zoomValue}\r\n            />\r\n            <button\r\n               type=\"button\"\r\n               onClick={() => setZoomVal(zoomValue < 10 ? zoomValue + 1 : 10)}\r\n            >\r\n               <FaPlus />\r\n            </button>\r\n         </div>\r\n      </nav>\r\n   </header>\r\n);\r\n\r\nexport default MangaHeader;\r\n","import { useEffect } from 'react';\r\nimport { useLocalStorage, useSearchParam } from 'react-use';\r\nimport { css, StyleSheet } from 'aphrodite';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ProgressBar } from 'scrolling-based-progressbar';\r\nimport MangaView from './MangaView';\r\nimport { useSpring, animated as anim } from 'react-spring';\r\nimport MangaHeader from './MangaHeader';\r\nimport ErrorBlock from './sub-components/ErrorBlock';\r\nimport styles from '../style.module.scss';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\n\r\nconst Manga = () => {\r\n   const mangaID = useSearchParam('id') || '';\r\n   const {\r\n      data: manga,\r\n      isLoading: loading,\r\n      error,\r\n      refetch,\r\n      isFetching,\r\n   } = useGetMangaQuery(Number(mangaID));\r\n   const [zoomValue, setZoomVal] = useLocalStorage<number>('zoomValue', 5);\r\n   const [brightVal, setBright] = useLocalStorage<number>('brightValue', 100);\r\n   const loading_props = {\r\n      text: useSpring({\r\n         from: {\r\n            opacity: 1,\r\n         },\r\n         opacity: 0,\r\n         loop: { reverse: true },\r\n         reset: loading,\r\n      }),\r\n   };\r\n   const viewerStyles = StyleSheet.create({\r\n      brightnessAdjust: {\r\n         filter: `brightness(${brightVal}%)`,\r\n      },\r\n      widthAdjust: {\r\n         maxWidth: `${((zoomValue || 5) / 10 + 0.5) * 700}px`,\r\n         transition: '0.3s',\r\n      },\r\n   });\r\n\r\n   useEffect(() => {\r\n      if (loading) {\r\n         document.title = 'Loading...';\r\n      } else {\r\n         if (manga) {\r\n            document.title = manga?.name;\r\n         }\r\n      }\r\n   });\r\n\r\n   useEffect(() => {\r\n      window.scroll({\r\n         top: 0,\r\n         left: 0,\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         {loading && (\r\n            <div className={styles.loading_style}>\r\n               <h3>\r\n                  <anim.span style={loading_props.text}>Loading...</anim.span>\r\n               </h3>\r\n            </div>\r\n         )}\r\n         <ErrorBlock\r\n            hasErrors={Boolean(error)}\r\n            errors={error}\r\n            retry={refetch}\r\n            isFetching={isFetching}\r\n         >\r\n            <div className=\"wrapper\">\r\n               {!loading && (\r\n                  <ProgressBar\r\n                     height=\"10px\"\r\n                     color=\"#aae\"\r\n                     top=\"30px\"\r\n                     bgColor=\"#546\"\r\n                  />\r\n               )}\r\n               <MangaHeader\r\n                  manga={manga}\r\n                  zoomValue={zoomValue}\r\n                  brightVal={brightVal}\r\n                  setBright={setBright}\r\n                  setZoomVal={setZoomVal}\r\n               />\r\n               <div\r\n                  className={css(\r\n                     viewerStyles.brightnessAdjust,\r\n                     viewerStyles.widthAdjust\r\n                  )}\r\n                  id=\"viewer\"\r\n               >\r\n                  {!loading &&\r\n                     manga?.data?.map((d, k: number) => (\r\n                        <MangaView key={k} panelImg={d} />\r\n                     ))}\r\n               </div>\r\n            </div>\r\n         </ErrorBlock>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import { Link } from 'react-router-dom'\nimport styles from '../../style.module.scss'\n\nconst NotFound = () => (\n  <div className={styles.NotFoundBlock}>\n    <h1>404 Not Found</h1>\n    <code className={styles.NotFoundCodeBlock}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={styles.GoHomeLink} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport Manga from './components/Manga';\r\nimport NotFound from './components/sub-components/404';\r\nimport './stylesheets/App.scss';\r\n\r\nconst App = () => (\r\n   <Switch>\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route path=\"/manga\" component={Manga} />\r\n      <Route component={NotFound} />\r\n   </Switch>\r\n);\r\n\r\nexport default App;\r\n","import { FaHeart } from 'react-icons/fa';\nimport styles from './style.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.p_overflow}>\n        Thanks for Reading my manga reader <FaHeart fontSize=\"1.2rem\" />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport { FaChevronUp } from 'react-icons/fa';\nimport App from './App';\nimport styles from './style.module.scss';\nimport './stylesheets/index.scss';\nimport Footer from './Footer';\n\nconst ToTopComponent: React.FC = () => {\n  return (\n    <button\n      className={styles.TopComponent}\n      onClick={() =>\n        window.scroll({\n          behavior: 'smooth',\n          top: 0,\n          left: 0,\n        })\n      }>\n      <FaChevronUp fontSize=\"2rem\" />\n    </button>\n  );\n};\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n      <ToTopComponent />\n      <Footer />\n    </Provider>\n  </>,\n  document.querySelector('#container')\n);\n"],"sourceRoot":""}