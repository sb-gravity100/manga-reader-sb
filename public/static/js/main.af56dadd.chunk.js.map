{"version":3,"sources":["slices/MangaApi.ts","store.ts","components/sub-components/Loading.tsx","components/sub-components/Navigation.tsx","components/Reader.tsx","components/sub-components/Header.tsx","components/Main.tsx","img/temp2.png","components/sub-components/404.tsx","components/sub-components/MangaHeader.tsx","components/sub-components/MangaView.tsx","components/Manga.tsx","App.tsx","index.tsx"],"names":["ApiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","allMangas","query","opts","url","params","page","limit","getManga","id","search","q","useAllMangasQuery","useGetMangaQuery","useSearchQuery","useLazySearchQuery","store","useLazyAllMangasQuery","useLazyGetMangaQuery","usePrefetch","configureStore","reducer","middleware","getDefMid","concat","useReduxSelector","LoadingMangas","_","times","n","Card","className","style","width","Img","variant","height","src","Body","Placeholder","as","Title","animation","bg","xs","LoadingScreen","Spinner","role","PaginationComponent","next","refresh","Pagination","Item","onClick","First","URLSearchParams","first","disabled","current","Prev","prev","pages","start","end","total","push","active","renderPages","Next","last","Last","Reader","useState","setRefresh","useSearchParams","mangas","Number","get","useEffect","console","log","Container","refetch","data","isSuccess","isFetching","items","map","cover","OverlayTrigger","overlay","Tooltip","name","to","fontSize","SearchResult","props","ListGroup","Image","item","Header","value","setSearch","Navbar","expand","Brand","alt","Toggle","Collapse","Form","FormControl","type","placeholder","autoComplete","onChange","e","target","maxHeight","zIndex","display","undefined","length","i","Main","NotFound","placeItems","alignContent","img","window","innerHeight","Button","history","back","MangaHeader","useToggle","isSlide","toggleSlide","isBright","toggleBright","useCounter","zoomValue","zoom","useRafLoop","scrollBy","stopLoop","startLoop","setBright","setZoom","manga","inc","alignmentBaseline","dec","MangaView","panelImg","path","error","Manga","useParams","scrollY","document","body","scrollHeight","scrollProgress","setProgress","brightValue","lastZoomPercent","setZoomPercent","useEvent","title","isError","ProgressBar","position","top","left","transition","now","isLoading","maxWidth","filter","onTransitionEnd","scrollTo","ToTopComponent","useLocation","nav","useNavigate","ButtonGroup","vertical","right","bottom","scroll","behavior","App","caseSensitive","element","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.af56dadd.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport _ from 'lodash';\nimport { Manga, SearchResult, MangasResult } from '../../../src/types';\n\ninterface MangasQuery {\n   offset?: number;\n   limit?: number;\n   order?: any;\n   sort?: string | string[];\n   refresh?: any;\n   page?: number;\n}\n\ninterface Meta {\n   nextPage?: number;\n   prevPage?: number;\n   firstPage?: number;\n   lastPage?: number;\n}\n\nconst ApiSlice = createApi({\n   reducerPath: 'MangaApi',\n   baseQuery: fetchBaseQuery({\n      baseUrl: '/api',\n   }),\n   endpoints: (builder) => ({\n      allMangas: builder.query<MangasResult, MangasQuery | void>({\n         query(opts) {\n            return {\n               url: '/mangas',\n               params: opts || {\n                  page: 0,\n                  limit: 10,\n               },\n            };\n         },\n      }),\n      getManga: builder.query<Manga, number | string>({\n         query(id) {\n            return {\n               url: `/manga`,\n               params: {\n                  id,\n               },\n            };\n         },\n      }),\n      search: builder.query<SearchResult[], string>({\n         query(q) {\n            return `/search?q=${q || ''}`;\n         },\n      }),\n   }),\n});\n\nexport default ApiSlice;\n\nexport const {\n   useAllMangasQuery,\n   useGetMangaQuery,\n   useLazySearchQuery,\n   useSearchQuery,\n   useLazyAllMangasQuery,\n   useLazyGetMangaQuery,\n   usePrefetch,\n} = ApiSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n   useDispatch as useReduxDispatch,\n   useSelector as useReduxSelector,\n   TypedUseSelectorHook,\n} from 'react-redux';\nimport ApiSlice from './slices/MangaApi';\n\nconst store = configureStore({\n   reducer: {\n      [ApiSlice.reducerPath]: ApiSlice.reducer,\n   },\n   middleware: (getDefMid) => getDefMid().concat(ApiSlice.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport const useDispatch = () => useReduxDispatch<typeof store.dispatch>();\nexport default store;\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Card, Container, Placeholder, Spinner } from 'react-bootstrap';\n\nexport const LoadingMangas: FC = () => (\n   <>\n      {_.times(10, (n) => (\n         <Card key={n} className=\"bg-light\" style={{ width: '12rem' }}>\n            <Card.Img variant=\"top\" height=\"190\" src=\"/loading.gif\" />\n            <Card.Body className=\"py-1 px-2\">\n               <Placeholder as={Card.Title} animation=\"wave\">\n                  <Placeholder className=\"mx-auto\" bg=\"info\" xs={12} />\n               </Placeholder>\n            </Card.Body>\n         </Card>\n      ))}\n   </>\n);\n\nexport const LoadingScreen: FC = () => (\n   <div\n      style={\n         { height: '100vh', '--bs-bg-opacity': '.5', width: '100vh' } as any\n      }\n      className=\"d-flex position-fixed top-0 start-0 w-100 align-items-center justify-content-center\"\n   >\n      <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n         <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n   </div>\n);\n","import _ from 'lodash';\nimport { FC } from 'react';\nimport { Pagination, PageItemProps } from 'react-bootstrap';\nimport { MdRefresh } from 'react-icons/md';\n\ninterface PPage {\n   page: any;\n   next: any;\n   refresh?: any;\n}\n\nconst PaginationComponent: FC<PPage> = ({ page, next, refresh }) => {\n   var renderPages = () => {\n      var pages: JSX.Element[] = [];\n      var start = page.current;\n      var end = page.current + 5;\n      start -= 4;\n      if (end > page.total) {\n         end = page.total;\n         start -= 5 - (page.total - page.current);\n      }\n      if (start < 0) {\n         start = 0;\n         end += 5 - page.current - 1;\n      }\n      for (let n = start; n < end; n++) {\n         pages.push(\n            <Pagination.Item\n               onClick={() =>\n                  next(\n                     new URLSearchParams({\n                        page: n as any,\n                     })\n                  )\n               }\n               key={n}\n               active={page?.current === n}\n            >\n               {n + 1}\n            </Pagination.Item>\n         );\n      }\n      return pages;\n   };\n   return (\n      <Pagination className=\"justify-content-center m-0\">\n         <Pagination.Item onClick={refresh} className=\"me-3\">\n            <MdRefresh />\n         </Pagination.Item>\n         <Pagination.First\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.first as any,\n                  })\n               )\n            }\n            disabled={page?.first === page?.current}\n         />\n         <Pagination.Prev\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.prev as any,\n                  })\n               )\n            }\n            disabled={page?.first === page?.current}\n         />\n         {page && renderPages()}\n         <Pagination.Next\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.next as any,\n                  })\n               )\n            }\n            disabled={page?.last === page?.current}\n         />\n         <Pagination.Last\n            onClick={() =>\n               next(\n                  new URLSearchParams({\n                     page: page?.last as any,\n                  })\n               )\n            }\n            disabled={page?.last === page?.current}\n         />\n      </Pagination>\n   );\n};\n\nexport default PaginationComponent;\n","/* eslint-disable no-script-url */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/alt-text */\nimport _ from 'lodash';\nimport { FC, useEffect, useState } from 'react';\nimport { Card, Container, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useAllMangasQuery } from '../slices/MangaApi';\nimport { LoadingMangas } from './sub-components/Loading';\nimport PaginationComponent from './sub-components/Navigation';\n\nconst Reader: FC = () => {\n   const [refresh, setRefresh] = useState('');\n   const [params, next] = useSearchParams(\n      new URLSearchParams({\n         page: '0',\n         refresh,\n      })\n   );\n   const mangas = useAllMangasQuery({\n      page: Number(params.get('page')) || 0,\n      refresh,\n   });\n   useEffect(() => {\n      setRefresh('');\n      console.log('done refresh');\n   }, [refresh]);\n   return (\n      <Container className=\"d-flex flex-column gap-2 py-2\">\n         <PaginationComponent\n            refresh={() => {\n               setRefresh('true');\n               mangas.refetch();\n            }}\n            next={next}\n            page={mangas.data}\n         />\n         <div className=\"d-flex flex-wrap gap-2 justify-content-between\">\n            {mangas.isSuccess && !mangas.isFetching ? (\n               mangas.data?.items.map((n) => (\n                  <Card\n                     key={n.id}\n                     className=\"bg-secondary\"\n                     style={{ width: '12rem' }}\n                  >\n                     <Card.Img variant=\"top\" height=\"200\" src={n.cover} />\n                     <Card.Body className=\"pb-0 pt-1\">\n                        <OverlayTrigger overlay={<Tooltip>{n.name}</Tooltip>}>\n                           <Link\n                              className=\"stretched-link\"\n                              to={'/manga/' + n.id}\n                           >\n                              <Card.Title\n                                 style={{ fontSize: '13px' }}\n                                 className=\"text-center text-truncate\"\n                              >\n                                 {n.name}\n                              </Card.Title>\n                           </Link>\n                        </OverlayTrigger>\n                     </Card.Body>\n                  </Card>\n               ))\n            ) : (\n               <LoadingMangas />\n            )}\n         </div>\n         <PaginationComponent\n            refresh={() => {\n               setRefresh('true');\n               mangas.refetch();\n            }}\n            next={next}\n            page={mangas.data}\n         />\n      </Container>\n   );\n};\n\nexport default Reader;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport {\n   Button,\n   Container,\n   Form,\n   FormControl,\n   InputGroup,\n   Navbar,\n   ListGroup,\n   Card,\n   Image,\n   Spinner,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Manga } from '../../../../src/types';\nimport { useSearchQuery } from '../../slices/MangaApi';\n\ninterface PSearch {\n   item: Manga;\n}\n\nconst SearchResult: React.FC<PSearch> = (props) => {\n   return (\n      <ListGroup.Item\n         style={{ height: '90px' }}\n         className=\"d-flex bg-secondary position-relative\"\n      >\n         <Image\n            className=\"flex-shrink-0 me-2 rounded\"\n            src={props.item.cover}\n            width=\"60\"\n         />\n         <Link\n            className=\"d-inline-block text-truncate stretched-link\"\n            to={`/manga/${props.item.id}`}\n         >\n            {props.item.name}\n         </Link>\n      </ListGroup.Item>\n   );\n};\n\nconst Header: React.FC = () => {\n   const [value, setSearch] = useState('');\n   const search = useSearchQuery(value);\n   // console.log(search);\n\n   return (\n      <Navbar expand=\"lg\">\n         <Container>\n            <Link to=\"/\">\n               <Navbar.Brand>\n                  <img\n                     alt=\"\"\n                     src=\"/kono_dio_da.png\"\n                     height=\"60\"\n                     className=\"d-inline-block align-top bg-light\"\n                  />\n               </Navbar.Brand>\n            </Link>\n            <Navbar.Toggle className=\"bg-light\" aria-controls=\"nav\" />\n            <Navbar.Collapse id=\"nav\" className=\"justify-content-md-end py-2\">\n               <Form className=\"position-relative\">\n                  <FormControl\n                     type=\"search\"\n                     placeholder=\"Search\"\n                     className=\"me-2\"\n                     aria-label=\"Search\"\n                     autoComplete=\"none\"\n                     value={value}\n                     onChange={(e) => setSearch(e.target.value)}\n                  />\n                  <Card\n                     className=\"position-absolute top-100 end-0 rounded mt-2\"\n                     style={{\n                        width: '450px',\n                        maxHeight: '400px',\n                        zIndex: 9999,\n                        display: !value ? 'none' : undefined,\n                     }}\n                  >\n                     <ListGroup className=\"overflow-auto\" variant=\"flush\">\n                        {search.isFetching && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              <Spinner animation=\"border\" role=\"status\">\n                                 <span className=\"visually-hidden\">\n                                    Loading...\n                                 </span>\n                              </Spinner>\n                           </ListGroup.Item>\n                        )}\n                        {!search.isFetching && search?.data?.length === 0 && (\n                           <ListGroup.Item className=\"d-flex align-items-center justify-content-center bg-secondary position-relative\">\n                              Nothing Found :(\n                           </ListGroup.Item>\n                        )}\n                        {search.isSuccess &&\n                           search.data.map((e, i) => (\n                              <SearchResult key={i} item={e.item} />\n                           ))}\n                     </ListGroup>\n                  </Card>\n               </Form>\n            </Navbar.Collapse>\n         </Container>\n      </Navbar>\n   );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport Reader from './Reader';\r\nimport Header from './sub-components/Header';\r\n\r\nconst Main: React.FC = () => {\r\n   return (\r\n      <div style={{ height: '100vh' }}>\r\n         <Header />\r\n         <Reader />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/temp2.5c1b4c28.png\";","import { Button } from 'react-bootstrap';\nimport img from '../../img/temp2.png';\n\nconst NotFound = () => (\n   <div\n      className=\"position-fixed top-0 start-0 container-fluid\"\n      style={{\n         height: '100vh',\n         display: 'grid',\n         placeItems: 'center',\n         alignContent: 'center',\n      }}\n   >\n      <h1 className=\"text-danger\">404 Not Found</h1>\n      <img src={img} alt=\"kono dio da\" height={window.innerHeight / 2} />\n      <Button\n         variant=\"info\"\n         className=\"mt-2\"\n         onClick={() => window.history.back()}\n      >\n         Go Home Now\n      </Button>\n   </div>\n);\n\nexport default NotFound;\n","/* eslint-disable no-restricted-globals */\nimport { FC, useEffect } from 'react';\nimport {\n   MdZoomIn,\n   MdZoomOut,\n   MdBrightnessHigh,\n   MdBrightnessLow,\n   MdStop,\n   MdPlayCircleFilled,\n} from 'react-icons/md';\nimport { useToggle, useRafLoop, useCounter } from 'react-use';\nimport { Button, Card } from 'react-bootstrap';\n\nconst MangaHeader: FC<any> = (props) => {\n   var [isSlide, toggleSlide] = useToggle(false);\n   var [isBright, toggleBright] = useToggle(true);\n   var [zoomValue, zoom] = useCounter(600, 900, 300);\n   var [stopLoop, startLoop] = useRafLoop(() => {\n      window.scrollBy(0, 1);\n   }, isSlide);\n\n   useEffect(() => {\n      if (isSlide) {\n         startLoop();\n      } else {\n         // setFrames.reset();\n         stopLoop();\n      }\n      return () => stopLoop();\n   }, [isSlide, startLoop, stopLoop]);\n   useEffect(() => {\n      if (isBright) {\n         props.setBright('brightness(1)');\n      } else {\n         props.setBright('brightness(0.65)');\n      }\n   }, [isBright, props]);\n   useEffect(() => {\n      props.setZoom(`${zoomValue || 600}px`);\n   }, [zoomValue, props]);\n   return (\n      <Card\n         style={{ zIndex: 9999 }}\n         className=\"bg-secondary position-fixed me-3 end-0 top-0 mt-3 text-center\"\n      >\n         <Card.Header className=\"text-info\">\n            {props.manga?.name || '...'}\n         </Card.Header>\n         <Card.Body className=\"p-2 d-flex flex-wrap gap-2\">\n            <Button\n               onClick={() => {\n                  zoom.inc(50);\n               }}\n               variant=\"outline-primary\"\n               className=\"px-2 py-1\"\n            >\n               <MdZoomIn alignmentBaseline=\"central\" />\n            </Button>\n            <Button\n               onClick={() => {\n                  zoom.dec(50);\n               }}\n               variant=\"outline-primary\"\n               className=\"px-2 py-1\"\n            >\n               <MdZoomOut alignmentBaseline=\"central\" />\n            </Button>\n            <Button\n               onClick={() => toggleBright()}\n               variant=\"outline-primary\"\n               className=\"px-2 py-1\"\n            >\n               {isBright ? (\n                  <MdBrightnessHigh alignmentBaseline=\"central\" />\n               ) : (\n                  <MdBrightnessLow alignmentBaseline=\"central\" />\n               )}\n            </Button>\n            <Button\n               onClick={() => toggleSlide()}\n               variant=\"outline-primary\"\n               className=\"px-2 py-1\"\n            >\n               {isSlide === false ? (\n                  <MdPlayCircleFilled alignmentBaseline=\"central\" />\n               ) : (\n                  <MdStop alignmentBaseline=\"central\" />\n               )}\n            </Button>\n         </Card.Body>\n      </Card>\n   );\n};\n\nexport default MangaHeader;\n","import { FC } from 'react';\nimport Image from 'react-cool-img';\nimport { MangaViewProps } from '../props';\n\nconst MangaView: FC<MangaViewProps> = ({ panelImg }) => (\n   <div>\n      <Image\n         src={panelImg.path}\n         alt={panelImg.name}\n         error={'/kono_dio_da.png'}\n         style={{ width: '100%' }}\n      />\n   </div>\n);\n\nexport default MangaView;\n","import { useEffect, useState } from 'react';\r\nimport { useGetMangaQuery } from '../slices/MangaApi';\r\n// import classNames from 'classnames';\r\nimport NotFound from './sub-components/404';\r\nimport { LoadingScreen } from './sub-components/Loading';\r\nimport { useParams } from 'react-router';\r\nimport { Image, ProgressBar } from 'react-bootstrap';\r\nimport MangaHeader from './sub-components/MangaHeader';\r\nimport MangaView from './sub-components/MangaView';\r\nimport { useEvent } from 'react-use';\r\n\r\nconst Manga = () => {\r\n   var { id } = useParams();\r\n   var manga = useGetMangaQuery(id as string);\r\n   var [scrollProgress, setProgress] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n   var [zoomValue, setZoom] = useState('');\r\n   var [brightValue, setBright] = useState('');\r\n   var [lastZoomPercent, setZoomPercent] = useState(\r\n      window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n   );\r\n\r\n   useEvent('scroll', () => {\r\n      setProgress(\r\n         (window.scrollY / (document.body.scrollHeight - window.innerHeight)) *\r\n            100\r\n      );\r\n   });\r\n\r\n   useEffect(() => {\r\n      // console.log('zoom change');\r\n      setZoomPercent(\r\n         window.scrollY / (document.body.scrollHeight - window.innerHeight)\r\n      );\r\n   }, [zoomValue]);\r\n\r\n   if (manga.isFetching) {\r\n      document.title = 'Loading...';\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (manga.isSuccess) {\r\n         document.title = manga.data.name;\r\n      }\r\n   }, [manga.data?.name, manga.isSuccess]);\r\n\r\n   if (typeof id === 'undefined' || manga.isError) {\r\n      return <NotFound />;\r\n   }\r\n   return (\r\n      <>\r\n         {manga.isSuccess && (\r\n            <ProgressBar\r\n               style={{\r\n                  height: '5px',\r\n                  width: '100vh !important',\r\n                  zIndex: 9999,\r\n                  position: 'fixed',\r\n                  top: 0,\r\n                  left: 0,\r\n                  transition: '0.1s',\r\n               }}\r\n               className=\"rounded-0 w-100\"\r\n               now={scrollProgress}\r\n            />\r\n         )}\r\n         <div className=\"container-fluid\" style={{ height: '100vh' }}>\r\n            {manga.isLoading && <LoadingScreen />}\r\n            <MangaHeader\r\n               setZoom={setZoom}\r\n               setBright={setBright}\r\n               manga={manga.data}\r\n            />\r\n            <div\r\n               style={{\r\n                  maxWidth: zoomValue,\r\n                  filter: brightValue,\r\n                  transition: 'width 0.05s',\r\n               }}\r\n               onTransitionEnd={() => {\r\n                  window.scrollTo(\r\n                     0,\r\n                     (document.body.scrollHeight - window.innerHeight) *\r\n                        lastZoomPercent\r\n                  );\r\n                  console.log(\r\n                     window.scrollY /\r\n                        (document.body.scrollHeight - window.innerHeight)\r\n                  );\r\n                  // console.log('end');\r\n               }}\r\n               className=\"mx-auto d-flex flex-column align-items-stretch\"\r\n            >\r\n               {manga.isSuccess &&\r\n                  manga.data.data?.map((e) => (\r\n                     <MangaView key={e.name} panelImg={e} />\r\n                  ))}\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Manga;\r\n","import React from 'react';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { FaAngleUp } from 'react-icons/fa';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport Main from './components/Main';\nimport Manga from './components/Manga';\nimport NotFound from './components/sub-components/404';\nimport './stylesheets/App.scss';\n\nconst ToTopComponent: React.FC = () => {\n   const location = useLocation();\n   const nav = useNavigate();\n   return (\n      <ButtonGroup\n         vertical\n         style={{ right: '2rem', bottom: '3rem', position: 'fixed' }}\n      >\n         <>\n            <Button\n               onClick={() =>\n                  window.scroll({\n                     behavior: 'smooth',\n                     top: 0,\n                     left: 0,\n                  })\n               }\n            >\n               <FaAngleUp fontSize=\"3rem\" />\n            </Button>\n            <Button variant=\"secondary\" onClick={() => nav('/')}>\n               Go Back\n            </Button>\n         </>\n      </ButtonGroup>\n   );\n};\n\nconst App = () => {\n   return (\n      <Routes>\n         <Route path=\"/\" caseSensitive element={<Main />} />\n         <Route path=\"manga\">\n            <Route\n               path=\":id\"\n               element={\n                  <>\n                     <Manga />\n                     <ToTopComponent />\n                  </>\n               }\n            />\n         </Route>\n         <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n   );\n};\n\nexport default App;\n","import 'intersection-observer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n   <Router>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </Router>,\n   document.querySelector('#container')\n);\n"],"sourceRoot":""}