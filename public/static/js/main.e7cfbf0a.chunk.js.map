{"version":3,"sources":["main/css_modules/TopComponent.module.scss","main/css_modules/Footer.module.scss","main/components/MangaView.js","main/components/MangaHeader.js","main/components/sub-components/ErrorBlock.js","main/data/queries.js","main/components/Manga.js","main/components/sub-components/TableComponent.js","main/components/Reader.js","main/components/Main.js","main/components/sub-components/404.js","main/App.js","main/Footer.js","index.js","main/css_modules/reader.module.scss","main/css_modules/main.module.scss","main/css_modules/ErrorBlock.module.scss","main/css_modules/404.module.scss"],"names":["module","exports","MangaView","panelImg","className","src","path","alt","name","MangaHeader","manga","zoomValue","brightVal","setBright","setZoomVal","type","min","max","onChange","e","target","value","onClick","defaultProps","data","ErrorBlock","children","hasErrors","errors","retry","status","loading","console","log","styles","errorBlock","retryBtn","style","cursor","errorMsg","message","GET_MANGAS","gql","GET_MANGA","scroll","Scroll","Manga","location","useLocation","mangaID","URLSearchParams","search","get","useQuery","variables","id","error","refetch","useLocalStorage","loading_props","text","useSpring","from","opacity","loop","reverse","reset","viewerStyles","StyleSheet","create","brightnessAdjust","filter","widthAdjust","maxWidth","transition","useEffect","document","title","scrollToTop","loading_style","span","height","top","color","bgColor","css","map","d","k","TableComponents","props","columns","useMemo","Header","accessor","sortDescFirst","Cell","replace","toFixed","Date","toDateString","tableInstance","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","hGs","headerGroup","getHeaderGroupProps","headers","column","classNames","flex_column","getHeaderProps","getSortByToggleProps","sort_logo","render","isSorted","isSortedDesc","sort_down","sort_up","sort_none","fontSize","mapHeaders","transitionize","_rows","row","getRowProps","cells","cell","getCellProps","to","generatePath","original","mapRows","Reader","Main","mangas","partialRefetch","notifyOnNetworkStatusChange","header_flex","refresh","refresh_btn","networkStatus","list","NotFound","NotFoundBlock","NotFoundCodeBlock","GoHomeLink","App","exact","component","Footer","p_overflow","apollo_client","ApolloClient","uri","cache","InMemoryCache","ToTopComponent","TopComponent","window","behavior","left","ReactDOM","client","querySelector"],"mappings":"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","file":"static/js/main.e7cfbf0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopComponent\":\"TopComponent_TopComponent__dAKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p_overflow\":\"Footer_p_overflow__1CB30\"};","import { LazyLoadImage } from 'react-lazy-load-image-component'\n\nconst MangaView = ({ panelImg }) => (\n  <div className=\"panel\">\n    <LazyLoadImage\n      src={`/${panelImg.path}`}\n      alt={panelImg.name}\n    />\n  </div>\n  )\n\nexport default MangaView\n","import { FaPlus, FaMinus } from 'react-icons/fa';\n// import styles from '../css_modules/Manga.module.scss';\n\nconst MangaHeader = ({\n   manga,\n   zoomValue,\n   brightVal,\n   setBright,\n   setZoomVal,\n}) => (\n   <header>\n      <h2 className=\"logo\">{manga ? manga.name : '...'}</h2>\n      <nav>\n         <div className=\"bright-control\">\n            <span>{brightVal}</span>\n            <input\n               type=\"range\"\n               min=\"0\"\n               max=\"100\"\n               onChange={e => setBright(e.target.value)}\n               value={brightVal}\n            />\n         </div>\n         <div className=\"zoom-control\">\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue > 1 ? zoomValue - 1 : 1)}>\n               <FaMinus />\n            </button>\n            <input\n               type=\"text\"\n               onChange={e =>\n                  (e.target.value <= 10) & (e.target.value > 0) &&\n                  setZoomVal(e.target.value)\n               }\n               value={zoomValue}\n            />\n            <button\n               type=\"button\"\n               onClick={() => setZoomVal(zoomValue < 10 ? zoomValue + 1 : 10)}>\n               <FaPlus />\n            </button>\n         </div>\n      </nav>\n   </header>\n);\n\nMangaHeader.defaultProps = {\n   manga: {\n      name: '',\n      data: [],\n   },\n};\n\nexport default MangaHeader;\n","import styles from '../../css_modules/ErrorBlock.module.scss'\n\nconst ErrorBlock = ({\n children, hasErrors, errors, retry, loading, status\n}) => {\n  if (hasErrors) {\n    console.log(hasErrors)\n    return (\n      <div className={styles.errorBlock}>\n        <h3>Something went wrong...</h3>\n        <button\n          className={styles.retryBtn}\n          onClick={() => retry()}\n          style={{ cursor: status === 4 ? 'progress' : 'pointer' }}\n        >\n          {status === 4 ? 'Retrying...' : 'Retry?'}\n        </button>\n        <code className={styles.errorMsg}>{errors.message}</code>\n      </div>\n    )\n  }\n  return children\n}\n\nexport default ErrorBlock\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_MANGAS = gql`\r\nquery AllMangas($refresh: Boolean) {\r\n  list: mangas(refresh: $refresh) {\r\n    id\r\n    name\r\n    pathname\r\n    createdAt\r\n    size\r\n  }\r\n}\r\n`\r\nexport const GET_MANGA = gql`\r\nquery getManga($id: ID!) {\r\n   manga(id: $id) {\r\n      id\r\n      name\r\n      pathname\r\n      createdAt\r\n      size\r\n      data {\r\n         name\r\n         path\r\n      }\r\n   }\r\n}\r\n`\r\n\r\nexport const SEARCH_MANGA = gql`\r\nquery SearchManga($s: String){\r\n  search(term: $s) {\r\n    id\r\n    name\r\n  }\r\n}\r\n`\r\n","import { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { css, StyleSheet } from 'aphrodite';\nimport { useLocation } from 'react-router-dom';\nimport { ProgressBar } from 'scrolling-based-progressbar';\nimport { useQuery } from '@apollo/client';\nimport MangaView from './MangaView';\nimport { useSpring, animated as anim } from 'react-spring';\nimport * as Scroll from 'react-scroll';\nimport MangaHeader from './MangaHeader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport { GET_MANGA } from '../data/queries';\nimport styles from '../css_modules/main.module.scss';\n\nconst scroll = Scroll.animateScroll;\n\nconst Manga = () => {\n   const location = useLocation();\n   const mangaID = new URLSearchParams(location.search).get('id');\n   const { loading, data, error, refetch } = useQuery(GET_MANGA, {\n      variables: {\n         id: mangaID,\n      },\n   });\n   const [zoomValue, setZoomVal] = useLocalStorage('zoomValue', 5);\n   const [brightVal, setBright] = useLocalStorage('brightValue', 100);\n   const loading_props = {\n      text: useSpring({\n         from: {\n            opacity: 1,\n         },\n         opacity: 0,\n         loop: { reverse: true },\n         reset: loading,\n      }),\n   };\n   const viewerStyles = StyleSheet.create({\n      brightnessAdjust: {\n         filter: `brightness(${brightVal}%)`,\n      },\n      widthAdjust: {\n         maxWidth: `${(zoomValue / 10 + 0.5) * 700}px`,\n         transition: '0.3s',\n      },\n   });\n\n   useEffect(() => {\n      if (loading) {\n         document.title = 'Loading...'\n      } else {\n         document.title = data.manga.name\n      }\n   })\n\n   useEffect(() => {\n      scroll.scrollToTop();\n   }, []);\n\n   return (\n      <div>\n         {loading && (\n            <div className={styles.loading_style}>\n               <h3>\n                  <anim.span style={loading_props.text}>Loading...</anim.span>\n               </h3>\n            </div>\n         )}\n         <ErrorBlock hasErrors={error && true} errors={error} retry={refetch}>\n            <div className=\"wrapper\">\n               {!loading && (\n                  <ProgressBar\n                     height=\"3px\"\n                     top=\"30px\"\n                     color=\"#546\"\n                     bgColor=\"#aae\"\n                  />\n               )}\n               <MangaHeader\n                  manga={!loading && data.manga}\n                  zoomValue={zoomValue}\n                  brightVal={brightVal}\n                  setBright={setBright}\n                  setZoomVal={setZoomVal}\n               />\n               <div\n                  className={css(\n                     viewerStyles.brightnessAdjust,\n                     viewerStyles.widthAdjust\n                  )}\n                  id=\"viewer\">\n                  {!loading &&\n                     data.manga.data.map((d, k) => (\n                        <MangaView key={k} panelImg={d} />\n                     ))}\n               </div>\n            </div>\n         </ErrorBlock>\n      </div>\n   );\n};\n\nexport default Manga;\n","import { FaAngleDown } from 'react-icons/fa';\r\nimport { useMemo } from 'react';\r\nimport { useTable, useSortBy } from 'react-table';\r\nimport { Link, generatePath } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport styles from '../../css_modules/reader.module.scss';\r\n\r\nconst TableComponents = props => {\r\n   const columns = useMemo(\r\n      () => [\r\n         {\r\n            Header: 'Name',\r\n            accessor: 'name',\r\n            sortDescFirst: true,\r\n            Cell: ({ value }) => value.replace(/[\\])}[{(_]/g, ''),\r\n         },\r\n         {\r\n            Header: 'Size',\r\n            accessor: 'size',\r\n            sortDescFirst: true,\r\n            Cell: ({ value }) => `${(value / 1000000).toFixed(2)}mb`,\r\n         },\r\n         {\r\n            Header: 'Date',\r\n            accessor: 'createdAt',\r\n            Cell: ({ value }) => new Date(value).toDateString(),\r\n            sortDescFirst: true,\r\n         },\r\n      ],\r\n      []\r\n   );\r\n   const data = useMemo(() => props.data, [props.data]);\r\n\r\n   const tableInstance = useTable({ columns, data }, useSortBy);\r\n   const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n   } = tableInstance;\r\n\r\n   const mapHeaders = (hGs = []) =>\r\n      hGs.map(headerGroup => (\r\n         <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n               <th\r\n                  className={classNames(column.id, styles.flex_column)}\r\n                  {...column.getHeaderProps(\r\n                     column.getSortByToggleProps({\r\n                        title: 'Sort by ' + column.Header,\r\n                     })\r\n                  )}>\r\n                  <div className={styles.sort_logo}>\r\n                     <h4 className={column.id}>{column.render('Header')}</h4>\r\n                     <div>\r\n                        <FaAngleDown\r\n                           className={classNames(\r\n                              column.isSorted\r\n                                 ? column.isSortedDesc\r\n                                    ? styles.sort_down\r\n                                    : styles.sort_up\r\n                                 : styles.sort_none\r\n                           )}\r\n                           fontSize=\"1.2rem\"\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               </th>\r\n            ))}\r\n         </tr>\r\n      ));\r\n   const mapRows = (_rows = []) =>\r\n      _rows.map(row => {\r\n         prepareRow(row);\r\n         return (\r\n            <tr {...row.getRowProps()}>\r\n               {row.cells.map(cell => (\r\n                  <td\r\n                     title={\r\n                        cell.column.id === 'createdAt'\r\n                           ? new Date(cell.value).toDateString()\r\n                           : cell.value\r\n                     }\r\n                     className={cell.column.id}\r\n                     {...cell.getCellProps()}>\r\n                     <Link\r\n                        to={generatePath('/manga?id=:id', {\r\n                           id: cell.row.original.id,\r\n                        })}>\r\n                        <span>{cell.render('Cell')}</span>\r\n                     </Link>\r\n                  </td>\r\n               ))}\r\n            </tr>\r\n         );\r\n      });\r\n\r\n   return (\r\n      <table className=\"list\" {...getTableProps()}>\r\n         <colgroup>\r\n            <col className=\"col-name\" />\r\n            <col className=\"col-size\" />\r\n            <col className=\"col-createdAt\" />\r\n         </colgroup>\r\n         <thead>{mapHeaders(headerGroups)}</thead>\r\n         <tbody\r\n            className={classNames(styles.transitionize)}\r\n            {...getTableBodyProps()}>\r\n            {mapRows(rows)}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default TableComponents;\r\n","import PropTypes from 'prop-types'\nimport MangaTable from './sub-components/TableComponent'\n\nconst Reader = props => {\n  return <MangaTable data={props.data} />\n}\n\nReader.propTypes = {\n  data: PropTypes.array,\n  filterValue: PropTypes.string,\n}\n\nexport default Reader\n","import { useSpring, animated as anim } from 'react-spring';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { MdRefresh } from 'react-icons/md';\nimport Reader from './Reader';\nimport ErrorBlock from './sub-components/ErrorBlock';\nimport { GET_MANGAS } from '../data/queries';\nimport styles from '../css_modules/main.module.scss';\n\nconst Main = () => {\n  const mangas = useQuery(GET_MANGAS, {\n    partialRefetch: true,\n    notifyOnNetworkStatusChange: true,\n  });\n  const loading_props = {\n    text: useSpring({\n      from: {\n        opacity: 1,\n      },\n      opacity: 0,\n      loop: { reverse: true },\n      reset: true,\n    }),\n  };\n\n  return (\n    <div id=\"main\">\n      <div className={styles.header_flex}>\n        <h1 className=\"logo\">\n          <Link to=\"/\" style={{ color: 'white' }}>\n            <div>Reader</div>\n          </Link>\n        </h1>\n        <div>\n          <button\n            onClick={() => mangas.refetch({ refresh: true })}\n            className={styles.refresh_btn}>\n            <MdRefresh fontSize=\"1.2rem\" />\n            <span>Refresh</span>\n          </button>\n        </div>\n      </div>\n      <div>\n        {/* !mangas.loading && mangas.data && (\n          <AsyncSelect components={props => <div><Link to ></Link></div>} />\n        ) */}\n      </div>\n      <ErrorBlock\n        status={mangas.networkStatus}\n        loading={mangas.loading}\n        retry={mangas.refetch}\n        hasErrors={mangas.error && true}\n        errors={mangas.error}>\n        {!mangas.loading && mangas.data ? (\n          <Reader data={mangas.data.list} />\n        ) : (\n          <div className={styles.loading_style}>\n            <h3>\n              <anim.span style={loading_props.text}>Loading...</anim.span>\n            </h3>\n          </div>\n        )}\n      </ErrorBlock>\n    </div>\n  );\n};\nexport default Main;\n","import { Link } from 'react-router-dom'\nimport styles from '../../css_modules/404.module.scss'\n\nconst NotFound = () => (\n  <div className={styles.NotFoundBlock}>\n    <h1>404 Not Found</h1>\n    <code className={styles.NotFoundCodeBlock}>\n      The Page you&apos;re looking for isn&apos;t here :P.\n    </code>\n    <Link className={styles.GoHomeLink} to=\"/\">\n      Go Home Now\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Manga from './components/Manga'\nimport Main from './components/Main'\nimport NotFound from './components/sub-components/404'\nimport '../stylesheets/App.scss'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route path=\"/manga\" component={Manga} />\n    <Route component={NotFound} />\n  </Switch>\n   )\n\nexport default App\n","import { FaHeart } from 'react-icons/fa';\nimport styles from './css_modules/Footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.p_overflow}>\n        Thanks for Reading my manga reader <FaHeart fontSize=\"1.2rem\" />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { FaChevronUp } from 'react-icons/fa';\nimport App from './main/App';\nimport styles from './main/css_modules/TopComponent.module.scss'\nimport './stylesheets/index.scss';\nimport Footer from './main/Footer';\n\nconst apollo_client = new ApolloClient({\n  uri: '/api/ql',\n  cache: new InMemoryCache(),\n});\n\nconst ToTopComponent = () => {\n  return (\n    <button className={styles.TopComponent} onClick={() => window.scroll({\n      behavior: 'smooth',\n      top: 0,\n      left: 0,\n    })} >\n      <FaChevronUp fontSize=\"2rem\" />\n    </button>\n  );\n};\n\nReactDOM.render(\n  <>\n    <Router>\n      <ApolloProvider client={apollo_client}>\n        <App />\n      </ApolloProvider>\n    </Router>\n    <ToTopComponent />\n    <Footer />\n  </>,\n  document.querySelector('#container')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort_logo\":\"reader_sort_logo__2FeFC\",\"sort_down\":\"reader_sort_down__3mXiQ\",\"sort_up\":\"reader_sort_up__1SwmL\",\"sort_none\":\"reader_sort_none__1JKuy\",\"center\":\"reader_center__2dnH_\",\"header\":\"reader_header__1o9hK\",\"flex_column\":\"reader_flex_column__2DQPt\",\"transitionize\":\"reader_transitionize__30Yx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading_style\":\"main_loading_style__1Lm1M\",\"header_flex\":\"main_header_flex__1ylRE\",\"refresh_btn\":\"main_refresh_btn__2iuFG\",\"search_bar\":\"main_search_bar__3gPIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"ErrorBlock_errorMsg__1O09I\",\"errorBlock\":\"ErrorBlock_errorBlock__39bVM\",\"retryBtn\":\"ErrorBlock_retryBtn__1YTZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFoundBlock\":\"404_NotFoundBlock___Xqa0\",\"NotFoundCodeBlock\":\"404_NotFoundCodeBlock__2WCRk\",\"GoHomeLink\":\"404_GoHomeLink__J-AUj\"};"],"sourceRoot":""}